 the index of all installed documentation
 in info format and makes it available to info readers.

Package: libcap2-bin
Status: install ok installed
Priority: optional
Section: utils
Installed-Size: 56
Maintainer: Christian Kastner <debian@kvr.at>
Architecture: armhf
Multi-Arch: foreign
Source: libcap2
Version: 1:2.24-8
Replaces: libcap-bin
Depends: libc6 (>= 2.4), libcap2 (>= 1:2.10)
Recommends: libpam-cap
Breaks: libcap-bin
Description: POSIX 1003.1e capabilities (utilities)
 Libcap implements the user-space interfaces to the POSIX 1003.1e capabilities
 available in Linux kernels. These capabilities are a partitioning of the all
 powerful root privilege into a set of distinct privileges.
 .
 This package contains additional utilities.
Homepage: http://sites.google.com/site/fullycapable/

Package: debconf
Status: install ok installed
Priority: important
Section: admin
Installed-Size: 614
Maintainer: Debconf Developers <debconf-devel@lists.alioth.debian.org>
Architecture: all
Multi-Arch: foreign
Version: 1.5.56
Replaces: debconf-tiny
Provides: debconf-2.0
Pre-Depends: perl-base (>= 5.6.1-4)
Recommends: apt-utils (>= 0.5.1), debconf-i18n
Suggests: debconf-doc, debconf-utils, whiptail | dialog | gnome-utils, libterm-readline-gnu-perl, libgtk2-perl (>= 1:1.130), libnet-ldap-perl, perl, libqtgui4-perl, libqtcore4-perl
Conflicts: apt (<< 0.3.12.1), cdebconf (<< 0.96), debconf-tiny, debconf-utils (<< 1.3.22), dialog (<< 0.9b-20020814-1), menu (<= 2.1.3-1), whiptail (<< 0.51.4-11), whiptail-utf8 (<= 0.50.17-13)
Conffiles:
 /etc/apt/apt.conf.d/70debconf 7e9d09d5801a42b4926b736b8eeabb73
 /etc/bash_completion.d/debconf 8fa1862734fbe54d7178aaaa419f5a11
 /etc/debconf.conf 8c0619be413824f1fc7698cee0f23811
Description: Debian configuration management system
 Debconf is a configuration management system for debian packages. Packages
 use Debconf to ask questions when they are installed.

Package: debconf-i18n
Status: install ok installed
Priority: important
Section: localization
Installed-Size: 1091
Maintainer: Debconf Developers <debconf-devel@lists.alioth.debian.org>
Architecture: all
Source: debconf
Version: 1.5.56
Replaces: debconf (<< 1.3.0), debconf-utils (<< 1.3.22)
Depends: debconf (= 1.5.56), liblocale-gettext-perl, libtext-iconv-perl, libtext-wrapi18n-perl, libtext-charwidth-perl
Conflicts: debconf-english, debconf-utils (<< 1.3.22)
Description: full internationalization support for debconf
 This package provides full internationalization for debconf, including
 translations into all available languages, support for using translated
 debconf templates, and support for proper display of multibyte character
 sets.

Package: zlib1g
Status: install ok installed
Priority: required
Section: libs
Installed-Size: 131
Maintainer: Mark Brown <broonie@debian.org>
Architecture: armhf
Multi-Arch: same
Source: zlib
Version: 1:1.2.8.dfsg-2
Provides: libz1
Depends: libc6 (>= 2.4)
Pre-Depends: multiarch-support
Breaks: libxml2 (<< 2.7.6.dfsg-2), texlive-binaries (<< 2009-12)
Conflicts: zlib1 (<= 1:1.0.4-7)
Description: compression library - runtime
 zlib is a library implementing the deflate compression method found
 in gzip and PKZIP.  This package includes the shared library.
Homepage: http://zlib.net/

Package: wavemon
Status: install ok installed
Priority: extra
Section: net
Installed-Size: 90
Maintainer: Jonathan McCrohan <jmccrohan@gmail.com>
Architecture: armhf
Version: 0.7.6-2
Depends: libc6 (>= 2.11), libncurses5 (>= 5.5-5~), libtinfo5
Description: Wireless Device Monitoring Application
 Wavemon allows you to watch signal and noise levels, packet
 statistics, device configuration and network parameters of your
 wireless network hardware.
Homepage: http://www.erg.abdn.ac.uk/ergcms/wavemon/

Package: libcurl3-gnutls
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 450
Maintainer: Alessandro Ghedini <ghedo@debian.org>
Architecture: armhf
Multi-Arch: same
Source: curl
Version: 7.38.0-4+deb8u5
Depends: libc6 (>= 2.17), libcomerr2 (>= 1.01), libgnutls-deb0-28 (>= 3.3.0), libgssapi-krb5-2 (>= 1.10+dfsg~), libidn11 (>= 1.13), libk5crypto3 (>= 1.6.dfsg.2), libkrb5-3 (>= 1.6.dfsg.2), libldap-2.4-2 (>= 2.4.7), libnettle4, librtmp1 (>= 2.4+20131018.git79459a2-3~), libssh2-1 (>= 1.2.6), zlib1g (>= 1:1.1.4)
Pre-Depends: multiarch-support
Recommends: ca-certificates
Description: easy-to-use client-side URL transfer library (GnuTLS flavour)
 libcurl is an easy-to-use client-side URL transfer library, supporting DICT,
 FILE, FTP, FTPS, GOPHER, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, POP3, POP3S,
 RTMP, RTSP, SCP, SFTP, SMTP, SMTPS, TELNET and TFTP.
 .
 libcurl supports SSL certificates, HTTP POST, HTTP PUT, FTP uploading, HTTP
 form based upload, proxies, cookies, user+password authentication (Basic,
 Digest, NTLM, Negotiate, Kerberos), file transfer resume, http proxy tunneling
 and more!
 .
 libcurl is free, thread-safe, IPv6 compatible, feature rich, well supported,
 fast, thoroughly documented and is already used by many known, big and
 successful companies and numerous applications.
 .
 SSL support is provided by GnuTLS.
Homepage: http://curl.haxx.se

Package: dhcpcd5
Status: install ok installed
Priority: optional
Section: net
Installed-Size: 365
Maintainer: Serge Schneider <serge@raspberrypi.org>
Architecture: armhf
Version: 6.7.1-1+rpi5
Provides: dhcp-client
Depends: libc6 (>= 2.17), libudev1 (>= 183), init-system-helpers (>= 1.18~)
Recommends: openresolv | resolvconf
Suggests: dhcpcd-gtk
Conflicts: dhcpcd (<< 3.2.3-6), dhcpcd-sv
Conffiles:
 /etc/dhcpcd.conf ef07f038370d79f5500b12f4accff54b
 /etc/init.d/dhcpcd 92a45aba519c6d08867928a9b1f3c655
Description: DHCPv4, IPv6RA and DHCPv6 client with IPv4LL support
 dhcpcd is a one stop network management daemon which includes
  * RFC compliant DHCPv4 and DHCPv6 clients
  * DHCPv6 Prefix Delegation support
  * IPv4LL (aka ZeroConf) support
  * ARP address conflict resolution
  * Link carrier detection
  * Wireless SSID profiles
  * ARP ping profiles
Homepage: http://roy.marples.name/projects/dhcpcd

Package: hostname
Essential: yes
Status: install ok installed
Priority: required
Section: admin
Installed-Size: 19
Maintainer: Debian Hostname Team <hostname-devel@lists.alioth.debian.org>
Architecture: armhf
Version: 3.15
Replaces: nis (<< 3.17-30)
Pre-Depends: libc6 (>= 2.4)
Breaks: nis (<< 3.17-30)
Description: utility to set/show the host name or domain name
 This package provides commands which can be used to display the system's
 DNS name, and to display or set its hostname or NIS domain name.

Package: bash-completion
Status: install ok installed
Priority: standard
Section: shells
Installed-Size: 929
Maintainer: Bash Completion Maintainers <bash-completion-devel@lists.alioth.debian.org>
Architecture: all
Multi-Arch: foreign
Version: 1:2.1-4
Replaces: bash, cryptsetup (<< 2:1.1.2-2), xen-tools (<= 4.1-1)
Depends: bash (>= 3.2)
Pre-Depends: dpkg (>= 1.15.7.2~)
Breaks: xen-tools (<= 4.1-1)
Conffiles:
 /etc/profile.d/bash_completion.sh 749e4786543bc3d19e20b0e214806c35
 /etc/bash_completion a81b3f1cb197219b815942f4fc7fa94e
Description: programmable completion for the bash shell
 bash completion extends bash's standard completion behavior to achieve
 complex command lines with just a few keystrokes.  This project was
 conceived to produce programmable completion routines for the most
 common Linux/UNIX commands, reducing the amount of typing sysadmins
 and programmers need to do on a daily basis.
Homepage: http://bash-completion.alioth.debian.org

Package: multiarch-support
Status: install ok installed
Priority: required
Section: libs
Installed-Size: 194
Maintainer: GNU Libc Maintainers <debian-glibc@lists.debian.org>
Architecture: armhf
Multi-Arch: foreign
Source: glibc
Version: 2.19-18+deb8u9
Depends: libc6 (>= 2.13-5)
Description: Transitional package to ensure multiarch compatibility
 This is a transitional package used to ensure multiarch support is present
 in ld.so before unpacking libraries to the multiarch directories.  It can
 be removed once nothing on the system depends on it.
Homepage: http://www.gnu.org/software/libc/libc.html

Package: debconf-utils
Status: install ok installed
Priority: optional
Section: devel
Installed-Size: 153
Maintainer: Debconf Developers <debconf-devel@lists.alioth.debian.org>
Architecture: all
Source: debconf
Version: 1.5.56
Replaces: debconf (<< 0.1.0)
Depends: debconf (= 1.5.56)
Conflicts: debconf (<< 0.1.0)
Description: debconf utilities
 This package contains some small utilities for debconf developers.

Package: tzdata
Status: install ok installed
Priority: required
Section: localization
Installed-Size: 1710
Maintainer: GNU Libc Maintainers <debian-glibc@lists.debian.org>
Architecture: all
Multi-Arch: foreign
Version: 2017b-0+deb8u1
Replaces: libc0.1, libc0.3, libc6, libc6.1
Provides: tzdata-jessie
Depends: debconf (>= 0.5) | debconf-2.0
Description: time zone and daylight-saving time data
 This package contains data required for the implementation of
 standard local time for many representative locations around the
 globe. It is updated periodically to reflect changes made by
 political bodies to time zone boundaries, UTC offsets, and
 daylight-saving rules.
Homepage: http://www.iana.org/time-zones

Package: init
Essential: yes
Status: install ok installed
Priority: required
Section: metapackages
Installed-Size: 5
Maintainer: pkg-systemd-maintainers <pkg-systemd-maintainers@lists.alioth.debian.org>
Architecture: armhf
Source: init-system-helpers
Version: 1.22
Pre-Depends: systemd-sysv | sysvinit-core | upstart
Description: System-V-like init utilities - metapackage
 This package is an essential metapackage which allows you to select from
 three available init systems in Debian (systemd, sysvinit, upstart) while
 ensuring that one of these is available on the system at all times.

Package: nfs-common
Status: install ok installed
Priority: standard
Section: net
Installed-Size: 495
Maintainer: Debian kernel team <debian-kernel@lists.debian.org>
Architecture: armhf
Source: nfs-utils
Version: 1:1.2.8-9
Replaces: mount (<< 2.13~), nfs-client, nfs-kernel-server (<< 1:1.2.8-6~)
Provides: nfs-client
Depends: libc6 (>= 2.4), libcap2 (>= 1:2.10), libcomerr2 (>= 1.01), libdevmapper1.02.1 (>= 2:1.02.20), libevent-2.0-5 (>= 2.0.10-stable), libgssapi-krb5-2 (>= 1.12.1+dfsg-2), libk5crypto3 (>= 1.6.dfsg.2), libkeyutils1 (>= 1.4), libkrb5-3 (>= 1.6.dfsg.2), libmount1 (>= 2.19.1), libnfsidmap2, libtirpc1 (>= 0.2.4), libwrap0 (>= 7.6-4~), rpcbind, adduser, ucf, lsb-base (>= 1.3-9ubuntu3), initscripts (>= 2.88dsf-13.3)
Recommends: python
Suggests: open-iscsi, watchdog
Breaks: nfs-kernel-server (<< 1:1.2.8-6~)
Conflicts: nfs-client
Conffiles:
 /etc/init.d/nfs-common 54a170f8dab112f2f6d7f49db71fcc34
 /etc/request-key.d/id_resolver.conf c7df239caa9880e7d6048cff6d46adc7
 /etc/default/nfs-common ddcb1fbb90a14ff9850f22eed0127a10
Description: NFS support files common to client and server
 Use this package on any machine that uses NFS, either as client or
 server.  Programs included: lockd, statd, showmount, nfsstat, gssd,
 idmapd and mount.nfs.
Homepage: http://nfs.sourceforge.net/

Package: libklibc
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 134
Maintainer: maximilian attems <maks@debian.org>
Architecture: armhf
Source: klibc
Version: 2.0.4-2+rpi1
Description: minimal libc subset for use with initramfs
 klibc is intended to be a minimalistic libc subset for use with
 initramfs.  It is deliberately written for small size, minimal
 entanglement, and portability, not speed.  It is definitely a work in
 progress, and a lot of things are still missing.
Homepage: http://git.kernel.org/?p=libs/klibc/klibc.git;a=summary

Package: systemd-sysv
Status: install ok installed
Priority: extra
Section: admin
Installed-Size: 40
Maintainer: Debian systemd Maintainers <pkg-systemd-maintainers@lists.alioth.debian.org>
Architecture: armhf
Source: systemd
Version: 215-17+deb8u7
Replaces: sysvinit (<< 2.88dsf-44~), sysvinit-core, upstart
Depends: systemd (= 215-17+deb8u7)
Pre-Depends: systemd
Conflicts: sysvinit-core, upstart
Description: system and service manager - SysV links
 systemd is a replacement for sysvinit.  It is dependency-based and
 able to read the LSB init script headers in addition to parsing rcN.d
 links as hints.
 .
 It also provides process supervision using cgroups and the ability to
 not only depend on other init script being started, but also
 availability of a given mount point or dbus service.
 .
 This package provides the manual pages and links needed for systemd
 to replace sysvinit. Installing systemd-sysv will overwrite /sbin/init with a
 link to systemd.
Homepage: http://www.freedesktop.org/wiki/Software/systemd

Package: crda
Status: install ok installed
Priority: optional
Section: net
Installed-Size: 206
Maintainer: Ben Hutchings <ben@decadent.org.uk>
Architecture: armhf
Multi-Arch: foreign
Version: 3.13-1
Depends: libc6 (>= 2.7), libnl-3-200 (>= 3.2.7), libnl-genl-3-200 (>= 3.2.7), libssl1.0.0 (>= 1.0.0), wireless-regdb, iw (>= 3.2-1~)
Conffiles:
 /etc/default/crda d1f1468521b60cdfc0b9d22d5a74975a
Description: wireless Central Regulatory Domain Agent
 This package provides a Central Regulatory Domain Agent (CRDA) to be used by
 the Linux kernel cfg80211 wireless subsystem to query and apply the regulatory
 domain settings wireless devices may operate within for a given location.
 .
 CRDA queries operational frequency regulations stored within the regulatory
 database provided by the wireless-regdb package.
Homepage: http://wireless.kernel.org/en/developers/Regulatory/CRDA

Package: libasn1-8-heimdal
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 688
Maintainer: Brian May <bam@debian.org>
Architecture: armhf
Multi-Arch: same
Source: heimdal
Version: 1.6~rc2+dfsg-9+rpi1
Depends: libc6 (>= 2.8), libcomerr2 (>= 1.01), libroken18-heimdal (>= 1.4.0+git20110226)
Pre-Depends: multiarch-support
Description: Heimdal Kerberos - ASN.1 library
 Heimdal is a free implementation of Kerberos 5 that aims to be
 compatible with MIT Kerberos.
 .
 This package contains the ASN.1 parser required for Heimdal.
Homepage: http://www.h5l.org/

Package: mawk
Status: install ok installed
Priority: required
Section: interpreters
Installed-Size: 175
Maintainer: Steve Langasek <vorlon@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 1.3.3-17
Provides: awk
Pre-Depends: libc6 (>= 2.11)
Description: a pattern scanning and text processing language
 Mawk is an interpreter for the AWK Programming Language. The AWK
 language is useful for manipulation of data files, text retrieval and
 processing, and for prototyping and experimenting with algorithms. Mawk
 is a new awk meaning it implements the AWK language as defined in Aho,
 Kernighan and Weinberger, The AWK Programming Language, Addison-Wesley
 Publishing, 1988. (Hereafter referred to as the AWK book.) Mawk conforms
 to the POSIX 1003.2 (draft 11.3) definition of the AWK language
 which contains a few features not described in the AWK book, and mawk
 provides a small number of extensions.
 .
 Mawk is smaller and much faster than gawk. It has some compile-time
 limits such as NF = 32767 and sprintf buffer = 1020.

Package: libv4lconvert0
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 221
Maintainer: Gregor Jasny <gjasny@googlemail.com>
Architecture: armhf
Multi-Arch: same
Source: v4l-utils
Version: 1.6.0-2
Replaces: libv4l-0 (<< 0.8.5-4)
Depends: libc6 (>= 2.11), libjpeg62-turbo (>= 1.3.1)
Pre-Depends: multiarch-support
Breaks: libv4l-0 (<< 0.8.5-4)
Description: Video4linux frame format conversion library
 libv4lconvert offers functions to convert from any (known) pixelformat
 to BGR24, RGB24, YUV420 and YVU420.
 .
 This package contains the shared library.
Homepage: http://linuxtv.org/downloads/v4l-utils/

Package: libraspberrypi-dev
Status: install ok installed
Priority: extra
Section: libdevel
Installed-Size: 3238
Maintainer: Serge Schneider <serge@raspberrypi.org>
Architecture: armhf
Source: raspberrypi-firmware
Version: 1.20160523-1
Depends: libraspberrypi0 (= 1.20160523-1)
Description: EGL/GLES/OpenVG/etc. libraries for the Raspberry Pi's VideoCore IV (headers)
 This package contains headers and other development files for implementations
 of EGL, OpenGL ES, OpenVG, OpenWF Composition, and others for the Raspberry
 Pi's VideoCore IV multimedia processor.
Homepage: https://github.com/raspberrypi/firmware

Package: gzip
Essential: yes
Status: install ok installed
Priority: required
Section: utils
Installed-Size: 175
Maintainer: Bdale Garbee <bdale@gag.com>
Architecture: armhf
Version: 1.6-4
Depends: dpkg (>= 1.15.4) | install-info
Pre-Depends: libc6 (>= 2.17)
Suggests: less
Description: GNU compression utilities
 This package provides the standard GNU file compression utilities, which
 are also the default compression tools for Debian.  They typically operate
 on files with names ending in '.gz', but can also decompress files ending
 in '.Z' created with 'compress'.

Package: libubsan0
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 178
Maintainer: Debian GCC Maintainers <debian-gcc@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: gcc-4.9
Version: 4.9.2-10
Provides: libubsan0-armhf
Depends: gcc-4.9-base (= 4.9.2-10), libc6 (>= 2.4), libgcc1 (>= 1:4.4.0), libstdc++6 (>= 4.1.1)
Pre-Depends: multiarch-support
Description: UBSan -- undefined behaviour sanitizer (runtime)
 UndefinedBehaviorSanitizer can be enabled via -fsanitize=undefined.
 Various computations will be instrumented to detect undefined behavior
 at runtime. Available for C and C++.
Homepage: http://gcc.gnu.org/

Package: groff-base
Status: install ok installed
Priority: important
Section: text
Installed-Size: 2667
Maintainer: Colin Watson <cjwatson@debian.org>
Architecture: armhf
Multi-Arch: foreign
Source: groff
Version: 1.22.2-8
Replaces: groff (<< 1.20.1-6), jgroff (<< 1.17-1)
Depends: libc6 (>= 2.4), libgcc1 (>= 1:4.4.0), libstdc++6 (>= 4.3.0)
Suggests: groff
Breaks: groff (<< 1.17-1), jgroff (<< 1.17-1), pmake (<< 1.45-7), troffcvt (<< 1.04-14)
Conffiles:
 /etc/groff/man.local 99a34592e41fb1e0639cf0fc64596346
 /etc/groff/mdoc.local f8c3e22fae1765942089881d9c5edeae
Description: GNU troff text-formatting system (base system components)
 This package contains the traditional UN*X text formatting tools
 troff, nroff, tbl, eqn, and pic. These utilities, together with the
 man-db package, are essential for displaying the on-line manual pages.
 .
 groff-base is a stripped-down package containing the necessary components
 to read manual pages in ASCII, Latin-1, and UTF-8, plus the PostScript
 device (groff's default). Users who want a full groff installation, with
 the standard set of devices, fonts, macros, and documentation, should
 install the groff package.
Homepage: https://www.gnu.org/software/groff/

Package: libldb1
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 295
Maintainer: Debian Samba Maintainers <pkg-samba-maint@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: ldb
Version: 2:1.1.20-0+deb8u1
Replaces: libldb0
Depends: libc6 (>= 2.4), libldap-2.4-2 (>= 2.4.7), libtalloc2 (>= 2.0.4~git20101213), libtdb1 (>= 1.2.7+git20101214), libtevent0 (>= 0.9.9)
Pre-Depends: multiarch-support
Breaks: libldb0, libsamdb0 (<< 4.0.0~alpha17~git20110724.dfsg1-1)
Description: LDAP-like embedded database - shared library
 ldb is a LDAP-like embedded database built on top of TDB.
 .
 It provides a fast database with an LDAP-like API designed
 to be used within an application. In some ways it can be seen as a
 intermediate solution between key-value pair databases and a real LDAP
 database.
 .
 This package contains the shared library file.
Homepage: http://ldb.samba.org/

Package: liblognorm1
Status: install ok installed
Priority: extra
Section: libs
Installed-Size: 49
Maintainer: Pierre Chifflier <pollux@debian.org>
Architecture: armhf
Multi-Arch: same
Source: liblognorm
Version: 1.0.1-3
Replaces: liblognorm0
Depends: libc6 (>= 2.4), libestr0 (>= 0.1.0), libjson-c2 (>= 0.10)
Pre-Depends: multiarch-support
Description: Log normalizing library
 Liblognorm is a event and log normalization library that is capable of
 real-time processing. It provides the capability to normalize events to
 a set of standard formats.
 .
 This package contains the shared library.
Homepage: http://www.liblognorm.com/

Package: libboost-iostreams1.50.0
Status: install ok installed
Priority: important
Section: libs
Installed-Size: 114
Maintainer: Debian Boost Team <pkg-boost-devel@lists.alioth.debian.org>
Architecture: armhf
Source: boost1.50 (1.50.0-1)
Version: 1.50.0-1+b2
Depends: libbz2-1.0, libc6 (>= 2.4), libgcc1 (>= 1:4.4.0), libstdc++6 (>= 4.3.0), zlib1g (>= 1:1.1.4)
Description: Boost.Iostreams Library
 This package forms part of the Boost C++ Libraries collection.
 .
 Boost.Iostreams are a collection of concepts and a set of templates
 which turn models of these concepts into C++ standard library streams
 and stream buffers.
Homepage: http://www.boost.org/libs/iostreams/

Package: libglib2.0-0
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 4167
Maintainer: Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: glib2.0
Version: 2.42.1-1
Replaces: libglib2.0-dev (<< 2.23.2-2)
Depends: libc6 (>= 2.17), libffi6 (>= 3.0.4), libpcre3 (>= 8.10), libselinux1 (>= 1.32), zlib1g (>= 1:1.2.2)
Pre-Depends: multiarch-support
Recommends: libglib2.0-data, shared-mime-info, xdg-user-dirs
Breaks: glib-networking (<< 2.33.12), gvfs (<< 1.8), libgnome-desktop-3-2 (<< 3.4.2-2), python-gi (<< 3.7.2)
Description: GLib library of C routines
 GLib is a library containing many useful C routines for things such
 as trees, hashes, lists, and strings.  It is a useful general-purpose
 C library used by projects such as GTK+, GIMP, and GNOME.
 .
 This package contains the shared libraries.
Homepage: http://www.gtk.org/

Package: gpgv
Status: install ok installed
Priority: important
Section: utils
Installed-Size: 356
Maintainer: Debian GnuPG-Maintainers <pkg-gnupg-maint@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: foreign
Source: gnupg
Version: 1.4.18-7+deb8u3
Depends: libbz2-1.0, libc6 (>= 2.4), zlib1g (>= 1:1.1.4)
Suggests: gnupg
Description: GNU privacy guard - signature verification tool
 GnuPG is GNU's tool for secure communication and data storage.
 .
 gpgv is a stripped-down version of gnupg which is only able to check
 signatures.  It is smaller than the full-blown gnupg and uses a
 different (and simpler) way to check that the public keys used to
 make the signature are trustworthy.
Homepage: http://www.gnupg.org

Package: libasound2-data
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 335
Maintainer: Debian ALSA Maintainers <pkg-alsa-devel@lists.alioth.debian.org>
Architecture: all
Multi-Arch: foreign
Source: alsa-lib
Version: 1.0.28-1+rpi2
Replaces: libasound2 (<< 1.0.27-4)
Suggests: alsa-utils
Breaks: libasound2 (<< 1.0.27-4)
Description: Configuration files and profiles for ALSA drivers
 This package contains configuration files for ALSA drivers and UCM
 profiles for use with alsaucm.
 .
 ALSA is the Advanced Linux Sound Architecture.
Homepage: http://www.alsa-project.org/

Package: linux-image-4.1.21-v7+
Status: install ok installed
Priority: optional
Section: kernel
Installed-Size: 53391
Maintainer: Anonymous <root@cup.cs.ru.nl>
Architecture: armhf
Source: linux-upstream
Version: 4.1.21-v7+-4
Provides: linux-image, linux-image-2.6, linux-modules-4.1.21-v7+
Suggests: linux-firmware-image-4.1.21-v7+
Description: Linux kernel, version 4.1.21-v7+
 This package contains the Linux kernel, modules and corresponding other
 files, version: 4.1.21-v7+.
Homepage: http://www.kernel.org/

Package: pi-bluetooth
Status: install ok installed
Priority: optional
Section: misc
Installed-Size: 7
Maintainer: Serge Schneider <serge@raspberrypi.org>
Architecture: armhf
Version: 0.1.3
Depends: init-system-helpers (>= 1.18~), bluez, bluez-firmware, raspberrypi-sys-mods
Description: Raspberry Pi 3 bluetooth
 Loads BCM43430A1 firmware on boot
Homepage: https://github.com/RPi-Distro/rpi-bluetooth

Package: libcap2
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 24
Maintainer: Christian Kastner <debian@kvr.at>
Architecture: armhf
Multi-Arch: same
Version: 1:2.24-8
Depends: libattr1 (>= 1:2.4.46-8), libc6 (>= 2.8)
Pre-Depends: multiarch-support
Description: POSIX 1003.1e capabilities (library)
 Libcap implements the user-space interfaces to the POSIX 1003.1e capabilities
 available in Linux kernels. These capabilities are a partitioning of the all
 powerful root privilege into a set of distinct privileges.
 .
 This package contains the shared library.
Homepage: http://sites.google.com/site/fullycapable/

Package: bsdutils
Essential: yes
Status: install ok installed
Priority: required
Section: utils
Installed-Size: 160
Maintainer: Debian util-linux Maintainers <ah-util-linux@debian.org>
Architecture: armhf
Multi-Arch: foreign
Source: util-linux (2.25.2-6)
Version: 1:2.25.2-6
Pre-Depends: libc6 (>= 2.15), libsystemd0
Recommends: bsdmainutils
Description: basic utilities from 4.4BSD-Lite
 This package contains the bare minimum of BSD utilities needed for a
 Debian system: logger, renice, script, scriptreplay, and wall. The
 remaining standard BSD utilities are provided by bsdmainutils.

Package: whiptail
Status: install ok installed
Priority: important
Section: utils
Installed-Size: 48
Maintainer: Alastair McKinstry <mckinstry@debian.org>
Architecture: armhf
Multi-Arch: foreign
Source: newt
Version: 0.52.17-1
Depends: libc6 (>= 2.4), libnewt0.52, libpopt0 (>= 1.14), libslang2 (>= 2.2.4)
Conffiles:
 /etc/bash_completion.d/whiptail bcd454929e3a3107961ba3cb1a98c5f4
Description: Displays user-friendly dialog boxes from shell scripts
 Whiptail is a "dialog" replacement using newt instead of ncurses. It
 provides a method of displaying several different types of dialog boxes
 from shell scripts. This allows a developer of a script to interact with
 the user in a much friendlier manner.
Homepage: https://fedorahosted.org/newt/

Package: dash
Essential: yes
Status: install ok installed
Priority: required
Section: shells
Installed-Size: 170
Maintainer: Gerrit Pape <pape@smarden.org>
Architecture: armhf
Version: 0.5.7-4
Depends: debianutils (>= 2.15), dpkg (>= 1.15.0)
Pre-Depends: libc6 (>= 2.11)
Description: POSIX-compliant shell
 The Debian Almquist Shell (dash) is a POSIX-compliant shell derived
 from ash.
 .
 Since it executes scripts faster than bash, and has fewer library
 dependencies (making it more robust against software or hardware
 failures), it is used as the default system shell on Debian systems.
Homepage: http://gondor.apana.org.au/~herbert/dash/

Package: xkb-data
Status: install ok installed
Priority: extra
Section: x11
Installed-Size: 5578
Maintainer: Debian X Strike Force <debian-x@lists.debian.org>
Architecture: all
Multi-Arch: foreign
Source: xkeyboard-config
Version: 2.12-1
Breaks: libx11-6 (<< 2:1.4.3)
Description: X Keyboard Extension (XKB) configuration data
 This package contains configuration data used by the X Keyboard
 Extension (XKB), which allows selection of keyboard layouts when
 using a graphical interface.
 .
 Every X11 vendor provides its own XKB data files, so keyboard layout
 designers have to send their layouts to several places.  The
 xkeyboard-config project has been launched at FreeDesktop in order
 to provide a central repository that could be used by all vendors.
Homepage: http://www.freedesktop.org/Software/XKeyboardConfig

Package: libsasl2-modules-db
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 78
Maintainer: Debian Cyrus SASL Team <pkg-cyrus-sasl2-debian-devel@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: cyrus-sasl2
Version: 2.1.26.dfsg1-13+deb8u1
Replaces: libsasl2-2 (<< 2.1.26.dfsg1-2~), libsasl2-modules (<< 2.1.26.dfsg1-6~)
Depends: libc6 (>= 2.4), libdb5.3
Breaks: libsasl2-2 (<< 2.1.26.dfsg1-2~)
Description: Cyrus SASL - pluggable authentication modules (DB)
 This is the Cyrus SASL API implementation, version 2.1. See package
 libsasl2-2 and RFC 2222 for more information.
 .
 This package provides the DB plugin, which supports Berkeley DB lookups.
Homepage: http://www.cyrusimap.org/

Package: python-samba
Status: install ok installed
Priority: optional
Section: python
Installed-Size: 5667
Maintainer: Debian Samba Maintainers <pkg-samba-maint@lists.alioth.debian.org>
Architecture: armhf
Source: samba
Version: 2:4.2.14+dfsg-0+deb8u6
Provides: python2.7-samba
Depends: python-ldb (>= 1.1.2~), python-tdb, python-ntdb, python-crypto, python (>= 2.7), python (<< 2.8), libattr1 (>= 1:2.4.46-8), libbsd0 (>= 0.0), libc6 (>= 2.8), libldb1 (>= 0.9.21), libpython2.7 (>= 2.7), libtalloc2 (>= 2.0.4~git20101213), libtevent0 (>= 0.9.16), python-talloc (>= 2.0.6), samba-libs (= 2:4.2.14+dfsg-0+deb8u6)
Description: Python bindings for Samba
 Samba is an implementation of the SMB/CIFS protocol for Unix systems,
 providing support for cross-platform file sharing with Microsoft Windows, OS X,
 and other Unix systems.  Samba can also function as a domain controller
 or member server in both NT4-style and Active Directory domains.
 .
 This package contains Python bindings for most Samba libraries.
Homepage: http://www.samba.org

Package: liblogging-stdlog0
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 24
Maintainer: Michael Biebl <biebl@debian.org>
Architecture: armhf
Multi-Arch: same
Source: liblogging
Version: 1.0.4-1
Depends: libc6 (>= 2.4)
Pre-Depends: multiarch-support
Description: easy to use and lightweight logging library
 Liblogging consists of several components with stdlog being the core
 component. Think of liblogging-stdlog as the next version of the
 syslog(3) API. It retains the simple semantics, but makes the API more
 sophisticated "behind the scenes" with better support for multiple
 threads and flexibility for different log destinations.
 .
 This package contains the shared library.
Homepage: http://www.liblogging.org/

Package: dphys-swapfile
Status: install ok installed
Priority: optional
Section: admin
Installed-Size: 83
Maintainer: Axel Beckert <abe@debian.org>
Architecture: all
Version: 20100506-1
Depends: dc
Conffiles:
 /etc/dphys-swapfile 39b5ed8b972118de256190b444ed4c60
 /etc/bash_completion.d/dphys-swapfile 3d861fe5a25b0fda5eb469591166b57f
 /etc/init.d/dphys-swapfile 79c6edb6e39ba331f3d23a4475a704ae
Description: Autogenerate and use a swap file
 This init.d script exists so one does not need to have a fixed size
 swap partition. Instead install without swap partition and then run this,
 with file size (re-)computed automatically to fit the current RAM size.
 .
 By default (and hence on installation) it creates swapfile twice as
 big as the present RAM amount with an upper limit of 2 GB.
Homepage: http://neil.franklin.ch/Projects/dphys-swapfile/

Package: gnupg
Status: install ok installed
Priority: important
Section: utils
Installed-Size: 4701
Maintainer: Debian GnuPG-Maintainers <pkg-gnupg-maint@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 1.4.18-7+deb8u3
Depends: gpgv, libbz2-1.0, libc6 (>= 2.15), libreadline6 (>= 6.0), libusb-0.1-4 (>= 2:0.1.12), zlib1g (>= 1:1.1.4)
Recommends: gnupg-curl, libldap-2.4-2 (>= 2.4.7)
Suggests: gnupg-doc, libpcsclite1, parcimonie, xloadimage | imagemagick | eog
Description: GNU privacy guard - a free PGP replacement
 GnuPG is GNU's tool for secure communication and data storage.
 It can be used to encrypt data and to create digital signatures.
 It includes an advanced key management facility and is compliant
 with the proposed OpenPGP Internet standard as described in RFC 4880.
 .
 GnuPG 1.4 is the standalone, non-modularized series. In contrast to
 the version 2 series, shipped with the gnupg2 package, it comes
 with no support for S/MIME and some other tools useful for desktop
 environments, but also with less dependencies.
 .
 The gnupg package is built without libcurl. So it does not support
 HKPS keyservers. Install the gnupg-curl package if you want to use
 the keyserver helper tools built with libcurl and supporting HKPS.
Homepage: http://www.gnupg.org

Package: unzip
Status: install ok installed
Priority: optional
Section: utils
Installed-Size: 385
Maintainer: Santiago Vila <sanvila@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 6.0-16+deb8u3
Depends: libbz2-1.0, libc6 (>= 2.4)
Suggests: zip
Description: De-archiver for .zip files
 InfoZIP's unzip program. With the exception of multi-volume archives
 (ie, .ZIP files that are split across several disks using PKZIP's /& option),
 this can handle any file produced either by PKZIP, or the corresponding
 InfoZIP zip program.
 .
 This version supports encryption.
Homepage: http://www.info-zip.org/UnZip.html

Package: raspberrypi-bootloader
Status: hold ok installed
Priority: extra
Section: admin
Installed-Size: 11979
Maintainer: Serge Schneider <serge@raspberrypi.org>
Architecture: armhf
Source: raspberrypi-firmware
Version: 1.20160523-1
Depends: raspberrypi-kernel
Description: Raspberry Pi bootloader
 This package contains the Raspberry Pi firmware and bootloader.
Homepage: https://github.com/raspberrypi/firmware

Package: linux-libc-dev
Status: install ok installed
Priority: optional
Section: devel
Installed-Size: 3248
Maintainer: Debian Kernel Team <debian-kernel@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: linux
Version: 3.16.7-ckt11-1+deb8u4+rpi1
Replaces: linux-kernel-headers
Provides: linux-kernel-headers
Conflicts: linux-kernel-headers
Description: Linux support headers for userspace development
 This package provides userspaces headers from the Linux kernel.  These
 headers are used by the installed headers for GNU libc and other system
 libraries.
Homepage: https://www.kernel.org/

Package: perl-modules
Status: install ok installed
Priority: standard
Section: perl
Installed-Size: 15108
Maintainer: Niko Tyni <ntyni@debian.org>
Architecture: all
Multi-Arch: foreign
Source: perl
Version: 5.20.2-3+deb8u7
Replaces: libansicolor-perl, libarchive-tar-perl, libattribute-handlers-perl, libautodie-perl, libcgi-pm-perl, libcpan-meta-perl, libcpan-meta-requirements-perl, libcpan-meta-yaml-perl, libdigest-perl, libexperimental-perl, libextutils-cbuilder-perl, libextutils-command-perl, libextutils-install-perl, libextutils-parsexs-perl, libfile-spec-perl, libhttp-tiny-perl, libi18n-langtags-perl, libio-zlib-perl, libjson-pp-perl, liblocale-codes-perl, liblocale-maketext-perl, liblocale-maketext-simple-perl, libmath-bigint-perl, libmath-complex-perl, libmodule-build-perl, libmodule-corelist-perl, libmodule-load-conditional-perl, libmodule-load-perl, libmodule-metadata-perl, libnet-perl, libnet-ping-perl, libpackage-constants-perl, libparams-check-perl, libparent-perl, libparse-cpan-meta-perl, libperl-ostype-perl, libpod-escapes-perl, libpod-parser-perl, libpod-simple-perl, libtest-harness-perl, libtest-simple-perl, libthread-queue-perl, libtime-local-perl, libunicode-collate-perl, libversion-perl, libversion-requirements-perl, podlators-perl
Provides: libansicolor-perl, libarchive-tar-perl, libattribute-handlers-perl, libautodie-perl, libcpan-meta-perl, libcpan-meta-requirements-perl, libcpan-meta-yaml-perl, libdigest-perl, libexperimental-perl, libextutils-cbuilder-perl, libextutils-command-perl, libextutils-install-perl, libextutils-parsexs-perl, libfile-spec-perl, libhttp-tiny-perl, libi18n-langtags-perl, libio-zlib-perl, libjson-pp-perl, liblocale-codes-perl, liblocale-maketext-perl, liblocale-maketext-simple-perl, libmath-bigint-perl, libmath-complex-perl, libmodule-corelist-perl, libmodule-load-conditional-perl, libmodule-load-perl, libmodule-metadata-perl, libnet-perl, libnet-ping-perl, libparams-check-perl, libparent-perl, libparse-cpan-meta-perl, libperl-ostype-perl, libpod-escapes-perl, libpod-parser-perl, libpod-simple-perl, libtest-harness-perl, libtest-simple-perl, libthread-queue-perl, libtime-local-perl, libunicode-collate-perl, libversion-perl, libversion-requirements-perl, podlators-perl
Depends: perl-base (>= 5.20.2-3+deb8u7)
Pre-Depends: dpkg (>= 1.17.17)
Recommends: perl (>= 5.20.2-1), libarchive-extract-perl, libmodule-pluggable-perl, libpod-latex-perl, libterm-ui-perl, libtext-soundex-perl, libcgi-pm-perl, libmodule-build-perl, libpackage-constants-perl
Suggests: libb-lint-perl, libcpanplus-dist-build-perl, libcpanplus-perl, libfile-checktree-perl, liblog-message-simple-perl, liblog-message-perl, libobject-accessor-perl
Breaks: cli-common (<< 0.9+nmu1), libansicolor-perl (<< 4.02), libarchive-tar-perl (<< 1.96), libattribute-handlers-perl (<< 0.96), libautodie-perl (<< 2.23), libcgi-pm-perl (<< 3.65), libcpan-meta-perl (<< 2.140640), libcpan-meta-requirements-perl (<< 2.125), libcpan-meta-yaml-perl (<< 0.012), libdigest-perl (<< 1.17), libexperimental-perl (<< 0.007), libextutils-cbuilder-perl (<< 0.280217), libextutils-command-perl (<< 1.18), libextutils-install-perl (<< 1.67), libextutils-parsexs-perl (<< 3.240000), libfile-spec-perl (<< 3.4801), libhttp-tiny-perl (<< 0.043), libi18n-langtags-perl (<< 0.40), libio-zlib-perl (<< 1.10), libjson-pp-perl (<< 2.27203), liblocale-codes-perl (<< 3.30), liblocale-maketext-perl (<< 1.25), liblocale-maketext-simple-perl (<< 0.21), libmath-bigint-perl (<< 1.9993), libmath-complex-perl (<< 1.59), libmodule-build-perl (<< 0.420500), libmodule-corelist-perl (<< 5.20150214), libmodule-load-conditional-perl (<< 0.62), libmodule-load-perl (<< 0.32), libmodule-metadata-perl (<< 1.000019), libnet-perl (<= 1:1.22), libnet-ping-perl (<< 2.43), libpackage-constants-perl (<< 0.04), libparams-check-perl (<< 0.38), libparent-perl (<< 0.228), libparse-cpan-meta-perl (<< 1.4414), libperl-ostype-perl (<< 1.007), libpod-escapes-perl (<< 1.06), libpod-parser-perl (<< 1.62), libpod-simple-perl (<< 3.28), libtest-harness-perl (<< 3.30), libtest-simple-perl (<< 1.001002), libthread-queue-perl (<< 3.05), libtime-local-perl (<< 1.2300), libunicode-collate-perl (<< 1.04), libversion-perl (<< 1:0.9909), libversion-requirements-perl (<< 0.101022), mono-apache-server2 (<< 3.8-2.1), mono-apache-server4 (<< 3.8-2.1), mono-fastcgi-server2 (<< 3.8-2.1), mono-fastcgi-server4 (<< 3.8-2.1), patcher (<< 0.0.20040521-6.1), pdl (<< 1:2.007-4), perl (<< 5.20.2~), podlators-perl (<< 2.3.1), polygen-data (<< 1.0.6.ds2-13.1), pristine-tar (<< 1.33), pure-ftpd-common (<< 1.0.36-3.2), rinse (<< 3.0.7), shorewall (<< 4.6.4.3-2), shorewall-core (<< 4.6.4.3-2), tvtime (<< 1.0.2-14)
Conflicts: defoma (<< 0.11.12), mono-gac (<< 2.10.8.1-3)
Conffiles:
 /etc/perl/Net/libnet.cfg fb2946cae573b8ed3d654a180d458733
 /etc/perl/sitecustomize.pl 5b3fc409c28ac6baf439b733046f0271
Description: Core Perl modules
 Architecture independent Perl modules.  These modules are part of Perl and
 required if the `perl' package is installed.
 .
 Note that this package only exists to save archive space and should be
 considered an internal implementation detail of the `perl' package.
 Other packages should not depend on `perl-modules' directly, they
 should use `perl' (which depends on `perl-modules') instead.
Homepage: http://dev.perl.org/perl5/

Package: mount
Essential: yes
Status: install ok installed
Priority: required
Section: admin
Installed-Size: 317
Maintainer: Debian util-linux Maintainers <ah-util-linux@debian.org>
Architecture: armhf
Multi-Arch: foreign
Source: util-linux
Version: 2.25.2-6
Pre-Depends: libc6 (>= 2.17), libmount1 (>= 2.25), libselinux1 (>= 2.0.15), libsmartcols1 (>= 2.25)
Suggests: nfs-common (>= 1:1.1.0-13)
Description: Tools for mounting and manipulating filesystems
 This package provides the mount(8), umount(8), swapon(8),
 swapoff(8), and losetup(8) commands.

Package: libhcrypto4-heimdal
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 257
Maintainer: Brian May <bam@debian.org>
Architecture: armhf
Multi-Arch: same
Source: heimdal
Version: 1.6~rc2+dfsg-9+rpi1
Depends: libasn1-8-heimdal (>= 1.4.0+git20110226), libc6 (>= 2.7), libroken18-heimdal (>= 1.4.0+git20110226)
Pre-Depends: multiarch-support
Description: Heimdal Kerberos - crypto library
 Heimdal is a free implementation of Kerberos 5 that aims to be
 compatible with MIT Kerberos.
 .
 This package contains the cryptographic library required for Heimdal.
Homepage: http://www.h5l.org/

Package: v4l-utils
Status: install ok installed
Priority: optional
Section: utils
Installed-Size: 556
Maintainer: Gregor Jasny <gjasny@googlemail.com>
Architecture: armhf
Version: 1.6.0-2
Replaces: ivtv-utils (<< 1.4.1-2), media-ctl
Depends: libv4l-0 (= 1.6.0-2), libv4l2rds0 (= 1.6.0-2), libc6 (>= 2.17), libgcc1 (>= 1:4.4.0), libstdc++6 (>= 4.6), libudev1 (>= 183), libv4lconvert0 (>= 0.5.0)
Breaks: ivtv-utils (<< 1.4.1-2), media-ctl
Description: Collection of command line video4linux utilities
 v4l-utils contains the following video4linux command line utilities:
 .
  decode_tm6000: decodes tm6000 proprietary format streams
  rds-ctl: tool to receive and decode Radio Data System (RDS) streams
  v4l2-compliance: tool to test v4l2 API compliance of drivers
  v4l2-ctl, cx18-ctl, ivtv-ctl: tools to control v4l2 controls from the cmdline
  v4l2-dbg: tool to directly get and set registers of v4l2 devices
  v4l2-sysfs-path: sysfs helper tool
Homepage: http://linuxtv.org/downloads/v4l-utils/

Package: libx11-6
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 1312
Maintainer: Debian X Strike Force <debian-x@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: libx11
Version: 2:1.6.2-3
Depends: libc6 (>= 2.15), libxcb1 (>= 1.2), libx11-data
Pre-Depends: multiarch-support
Description: X11 client-side library
 This package provides a client interface to the X Window System, otherwise
 known as 'Xlib'.  It provides a complete API for the basic functions of the
 window system.
 .
 More information about X.Org can be found at:
 <URL:http://www.X.org>
 .
 This module can be found at
 git://anongit.freedesktop.org/git/xorg/lib/libX11

Package: libsasl2-2
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 150
Maintainer: Debian Cyrus SASL Team <pkg-cyrus-sasl2-debian-devel@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: cyrus-sasl2
Version: 2.1.26.dfsg1-13+deb8u1
Replaces: libsasl2
Depends: libc6 (>= 2.15), libsasl2-modules-db (>= 2.1.26.dfsg1-13+deb8u1)
Pre-Depends: multiarch-support
Recommends: libsasl2-modules (>= 2.1.26.dfsg1-13+deb8u1)
Breaks: postfix (<= 2.8.3-1), slapd (<= 2.4.25-3)
Description: Cyrus SASL - authentication abstraction library
 This is the Cyrus SASL API implementation, version 2.1.
 .
 SASL is the Simple Authentication and Security Layer, a method for
 adding authentication support to connection-based protocols. To use
 SASL, a protocol includes a command for identifying and
 authenticating a user to a server and for optionally negotiating
 protection of subsequent protocol interactions. If its use is
 negotiated, a security layer is inserted between the protocol and the
 connection. See RFC 2222 for more information.
 .
 Any of: ANONYMOUS, CRAM-MD5, DIGEST-MD5, GSSAPI (MIT or Heimdal
 Kerberos 5), NTLM, OTP, PLAIN, or LOGIN can be used.
Homepage: http://www.cyrusimap.org/

Package: libsystemd0
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 170
Maintainer: Debian systemd Maintainers <pkg-systemd-maintainers@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: systemd
Version: 215-17+deb8u7
Pre-Depends: libc6 (>= 2.9), libgcrypt20 (>= 1.6.1), liblzma5 (>= 5.1.1alpha+20120614), multiarch-support
Description: systemd utility library
 The libsystemd0 library provides interfaces to various systemd components.
Homepage: http://www.freedesktop.org/wiki/Software/systemd

Package: hardlink
Status: install ok installed
Priority: optional
Section: utils
Installed-Size: 22
Maintainer: Julian Andres Klode <jak@debian.org>
Architecture: armhf
Version: 0.3.0
Depends: libc6 (>= 2.4), libpcre3 (>= 8.10)
Description: Hardlinks multiple copies of the same file
 Hardlink is a tool which detects multiple copies of the same file and replaces
 them with hardlinks. Amongst other things, it can be used to merge identical,
 duplicate files in backup trees and save space.
 .
 The idea has been taken from http://code.google.com/p/hardlinkpy/, but the
 code has been written from scratch and licensed under the MIT license.
Homepage: http://jak-linux.org/projects/hardlink/

Package: libdpkg-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 2211
Origin: debian
Maintainer: Dpkg Developers <debian-dpkg@lists.debian.org>
Bugs: debbugs://bugs.debian.org
Architecture: all
Multi-Arch: foreign
Source: dpkg
Version: 1.17.27
Replaces: dpkg (<< 1.15.8), dpkg-dev (<< 1.15.6)
Depends: dpkg (>= 1.15.8), perl, libtimedate-perl
Recommends: libfile-fcntllock-perl, bzip2, xz-utils
Suggests: debian-keyring, gnupg | gnupg2, gpgv | gpgv2, gcc | c-compiler, binutils, patch
Breaks: dpkg-dev (<< 1.15.6), patch (<< 2.7)
Description: Dpkg perl modules
 This package provides the perl modules used by the scripts
 in dpkg-dev. They cover a wide range of functionality. Among them
 there are the following public modules:
 .
  - Dpkg: core variables
  - Dpkg::BuildFlags: set, modify and query compilation build flags
  - Dpkg::BuildOptions: parse and manipulate DEB_BUILD_OPTIONS
  - Dpkg::BuildProfile: parse and manipulate build profiles
  - Dpkg::Changelog: parse Debian changelogs
  - Dpkg::Checksums: generate and parse checksums
  - Dpkg::Compression::Process: wrapper around compression tools
  - Dpkg::Compression::FileHandle: transparently (de)compress files
  - Dpkg::Conf: parse dpkg configuration files
  - Dpkg::Control: parse and manipulate Debian control information
    (.dsc, .changes, Packages/Sources entries, etc.)
  - Dpkg::Deps: parse and manipulate dependencies
  - Dpkg::Exit: push, pop and run exit handlers
  - Dpkg::Gettext: wrapper around Locale::gettext
  - Dpkg::IPC: spawn sub-processes and feed/retrieve data
  - Dpkg::Index: collections of Dpkg::Control (Packages/Sources files for
    example)
  - Dpkg::Interface::Storable: base object serializer
  - Dpkg::Path: common path handling functions
  - Dpkg::Source::Package: extract Debian source packages
  - Dpkg::Substvars: substitute variables in strings
  - Dpkg::Vendor: identify current distribution vendor
  - Dpkg::Version: parse and manipulate Debian package versions
 .
 All the packages listed in Suggests or Recommends are used by some of the
 modules.
Homepage: https://wiki.debian.org/Teams/Dpkg

Package: ntp
Status: install ok installed
Priority: optional
Section: net
Installed-Size: 965
Maintainer: Debian NTP Team <pkg-ntp-maintainers@lists.alioth.debian.org>
Architecture: armhf
Version: 1:4.2.6.p5+dfsg-7+deb8u2
Depends: adduser, lsb-base (>= 3.2-13), netbase, libc6 (>= 2.17), libcap2 (>= 1:2.10), libedit2 (>= 2.11-20080614), libopts25 (>= 1:5.18.4), libssl1.0.0 (>= 1.0.1d)
Pre-Depends: dpkg (>= 1.15.7.2)
Recommends: perl
Suggests: ntp-doc
Breaks: dhcp3-client (<< 4.1.0-1)
Conffiles:
 /etc/cron.daily/ntp af4becca9dde009fc606dae1575cf551
 /etc/default/ntp cd7a62fbb18fa8fe5893dee93064b328
 /etc/dhcp/dhclient-exit-hooks.d/ntp fbc234ecd0f7e8bc1c394bbde5867be1
 /etc/init.d/ntp 1593209e2edaef7930940759b07caee1
 /etc/ntp.conf 3e250ecaf470e1d3a2b68edd5de46bfd
Description: Network Time Protocol daemon and utility programs
 NTP, the Network Time Protocol, is used to keep computer clocks
 accurate by synchronizing them over the Internet or a local network,
 or by following an accurate hardware receiver that interprets GPS,
 DCF-77, NIST or similar time signals.
 .
 This package contains the NTP daemon and utility programs.  An NTP
 daemon needs to be running on each host that is to have its clock
 accuracy controlled by NTP.  The same NTP daemon is also used to
 provide NTP service to other hosts.
 .
 For more information about the NTP protocol and NTP server
 configuration and operation, install the package "ntp-doc".
Homepage: http://support.ntp.org/

Package: libpsl0
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 419
Maintainer: Tim Rühsen <tim.ruehsen@gmx.de>
Architecture: armhf
Multi-Arch: same
Source: libpsl
Version: 0.5.1-1
Depends: libc6 (>= 2.8), libicu52 (>= 52~m1-1~)
Description: Library for Public Suffix List (shared libraries)
 Libpsl allows checking domains against the Public Suffix List,
 It can be used to avoid privacy-leaking 'super-cookies',
 'super domain' certificates, for domain highlighting purposes
 sorting domain lists by site and more.
 .
 This package contains runtime libraries.
Homepage: https://github.com/rockdaboot/libpsl

Package: libc6
Status: install ok installed
Priority: required
Section: libs
Installed-Size: 8812
Maintainer: GNU Libc Maintainers <debian-glibc@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: glibc
Version: 2.19-18+deb8u9
Depends: libgcc1
Suggests: glibc-doc, debconf | debconf-2.0, locales
Breaks: hurd (<< 1:0.5.git20140203-1), libtirpc1 (<< 0.2.3), locales (<< 2.19), locales-all (<< 2.19), nscd (<< 2.19)
Conflicts: prelink (<= 0.0.20090311-1), tzdata (<< 2007k-1), tzdata-etch
Conffiles:
 /etc/ld.so.conf.d/arm-linux-gnueabihf.conf fcce838d54cc444500f01049db2aae8c
Description: GNU C Library: Shared libraries
 Contains the standard libraries that are used by nearly all programs on
 the system. This package includes shared versions of the standard C library
 and the standard math library, as well as many others.
Homepage: http://www.gnu.org/software/libc/libc.html

Package: netcat-traditional
Status: install ok installed
Priority: important
Section: net
Installed-Size: 101
Maintainer: Ruben Molina <rmolina@udea.edu.co>
Architecture: armhf
Source: netcat
Version: 1.10-41
Provides: netcat
Depends: libc6 (>= 2.15)
Description: TCP/IP swiss army knife
 A simple Unix utility which reads and writes data across network
 connections using TCP or UDP protocol. It is designed to be a reliable
 "back-end" tool that can be used directly or easily driven by other
 programs and scripts. At the same time it is a feature-rich network
 debugging and exploration tool, since it can create almost any kind
 of connection you would need and has several interesting built-in
 capabilities.
 .
 This is the "classic" netcat, written by *Hobbit*. It lacks many
 features found in netcat-openbsd.

Package: wpasupplicant
Status: install ok installed
Priority: optional
Section: net
Installed-Size: 1977
Maintainer: Debian wpasupplicant Maintainers <pkg-wpa-devel@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: foreign
Source: wpa
Version: 2.3-1+deb8u4
Depends: libc6 (>= 2.15), libdbus-1-3 (>= 1.1.4), libnl-3-200 (>= 3.2.7), libnl-genl-3-200 (>= 3.2.7), libpcsclite1 (>= 1.0.0), libreadline6 (>= 6.0), libssl1.0.0 (>= 1.0.1), lsb-base, adduser
Suggests: wpagui, libengine-pkcs11-openssl
Breaks: initscripts (<< 2.88dsf-13.3)
Conffiles:
 /etc/dbus-1/system.d/wpa_supplicant.conf b6e52e30f79834d19db8311417ee0a86
 /etc/wpa_supplicant/action_wpa.sh 41b2e273d616b1c7e7b605bbe8648d8b
 /etc/wpa_supplicant/functions.sh 0b4f01dfefc23b7bbd22b48c8bf2a4b3
 /etc/wpa_supplicant/ifupdown.sh 4c82dbf7e1d8c5ddd70e40b9665cfeee
Description: client support for WPA and WPA2 (IEEE 802.11i)
 WPA and WPA2 are methods for securing wireless networks, the former
 using IEEE 802.1X, and the latter using IEEE 802.11i. This software
 provides key negotiation with the WPA Authenticator, and controls
 association with IEEE 802.11i networks.
Homepage: http://w1.fi/wpa_supplicant/

Package: libprocps3
Status: install ok installed
Priority: important
Section: libs
Installed-Size: 91
Maintainer: Craig Small <csmall@debian.org>
Architecture: armhf
Multi-Arch: same
Source: procps
Version: 2:3.3.9-9
Replaces: procps (<< 1:3.3.2-1)
Depends: libc6 (>= 2.4)
Pre-Depends: multiarch-support
Description: library for accessing process information from /proc
 The libprocps library is a way of accessing information out of the /proc
 filesystem.
 .
 This package contains the shared libraries necessary to run programs
 compilied with libprocps.
Homepage: http://gitorious.org/procps

Package: python2.7
Status: install ok installed
Priority: standard
Section: python
Installed-Size: 292
Maintainer: Matthias Klose <doko@debian.org>
Architecture: armhf
Multi-Arch: allowed
Version: 2.7.9-2+deb8u1
Replaces: python-profiler (<= 2.7.1-2), python2.7-minimal (<< 2.7.3-7~)
Depends: python2.7-minimal (= 2.7.9-2+deb8u1), libpython2.7-stdlib (= 2.7.9-2+deb8u1), mime-support
Suggests: python2.7-doc, binutils
Breaks: python-virtualenv (<< 1.7.1.2-2~), vim-athena (<< 2:7.3.547-4), vim-gnome (<< 2:7.3.547-4), vim-gtk (<< 2:7.3.547-4), vim-nox (<< 2:7.3.547-4)
Conflicts: python-profiler (<= 2.7.1-2)
Description: Interactive high-level object-oriented language (version 2.7)
 Python is a high-level, interactive, object-oriented language. Its 2.7 version
 includes an extensive class library with lots of goodies for
 network programming, system administration, sounds and graphics.

Package: libboost-iostreams1.55.0
Status: install ok installed
Priority: important
Section: libs
Installed-Size: 116
Maintainer: Debian Boost Team <pkg-boost-devel@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: boost1.55
Version: 1.55.0+dfsg-3
Depends: libbz2-1.0, libc6 (>= 2.4), libgcc1 (>= 1:4.4.0), libstdc++6 (>= 4.3.0), zlib1g (>= 1:1.1.4)
Pre-Depends: multiarch-support
Description: Boost.Iostreams Library
 This package forms part of the Boost C++ Libraries collection.
 .
 Boost.Iostreams are a collection of concepts and a set of templates
 which turn models of these concepts into C++ standard library streams
 and stream buffers.
Homepage: http://www.boost.org/libs/iostreams/

Package: samba-common
Status: install ok installed
Priority: optional
Section: net
Installed-Size: 660
Maintainer: Debian Samba Maintainers <pkg-samba-maint@lists.alioth.debian.org>
Architecture: all
Multi-Arch: foreign
Source: samba
Version: 2:4.2.14+dfsg-0+deb8u6
Replaces: samba (<< 3.0.20b-1), samba-doc (<< 2:4.0.5~), samba4-common (<< 4.0.0~alpha7-1)
Depends: ucf, debconf (>= 0.5) | debconf-2.0
Pre-Depends: dpkg (>= 1.15.6~)
Recommends: samba-common-bin
Conflicts: samba-doc (<< 2:4.0.5~), samba4-common (<< 4.0.0~alpha7-1), swat
Conffiles:
 /etc/dhcp/dhclient-enter-hooks.d/samba 732cae8c1d0d7a7f80e8597ae551ea0d
 /etc/pam.d/samba a69b859744494a52ecf10bb604544093
 /etc/samba/gdbcommands 898c523d1c11feeac45538a65d00c838
Description: common files used by both the Samba server and client
 Samba is an implementation of the SMB/CIFS protocol for Unix systems,
 providing support for cross-platform file and printer sharing with
 Microsoft Windows, OS X, and other Unix systems.
 .
 This package contains common files used by all parts of Samba.
Homepage: http://www.samba.org

Package: libtext-soundex-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 25
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: armhf
Source: libtext-soundex-perl (3.4-1)
Version: 3.4-1+b2
Depends: perl (>= 5.20.0-4), perlapi-5.20.0, libc6 (>= 2.4)
Description: implementation of the soundex algorithm
 Text::Soundex implements the original soundex algorithm developed by Robert
 Russell and Margaret Odell, patented in 1918 and 1922, as well as a variation
 called "American Soundex" used for US census data, and current maintained by
 the National Archives and Records Administration (NARA).
Homepage: https://metacpan.org/release/Text-Soundex/

Package: libnl-genl-3-200
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 32
Maintainer: Heiko Stuebner <mmind@debian.org>
Architecture: armhf
Multi-Arch: same
Source: libnl3
Version: 3.2.24-2
Depends: libnl-3-200 (= 3.2.24-2), libc6 (>= 2.4)
Pre-Depends: multiarch-support
Description: library for dealing with netlink sockets - generic netlink
 This is a library for applications dealing with netlink sockets.
 The library provides an interface for raw netlink messaging and various
 netlink family specific interfaces.
 .
 API to the generic netlink protocol, an extended version of the netlink
 protocol.
Homepage: http://people.suug.ch/~tgr/libnl/

Package: startpar
Status: install ok installed
Priority: required
Section: admin
Installed-Size: 42
Maintainer: Debian sysvinit maintainers <pkg-sysvinit-devel@lists.alioth.debian.org>
Architecture: armhf
Version: 0.59-3
Replaces: sysvinit-utils (<< 2.88dsf-52)
Depends: libc6 (>= 2.15)
Suggests: insserv, sysv-rc
Breaks: sysvinit-utils (<< 2.88dsf-52)
Conffiles:
 /etc/init/startpar-bridge.conf 152b77b1904939b461edc251844d0008
Description: run processes in parallel and multiplex their output
 Used by the sysv-rc boot system executor to run init.d scripts in parallel
 while making sure the script output is not completely messed up.
Homepage: http://savannah.nongnu.org/projects/sysvinit

Package: wireless-regdb
Status: install ok installed
Priority: optional
Section: net
Installed-Size: 51
Maintainer: Ben Hutchings <ben@decadent.org.uk>
Architecture: all
Multi-Arch: foreign
Version: 2016.06.10-1~deb8u1
Suggests: crda
Description: wireless regulatory database
 This package contains the wireless regulatory database used by the Central
 Regulatory Database Agent (CRDA) to configure wireless devices to operate
 within the radio spectrum allowed in the local jurisdiction.
 .
 This regulatory information is provided with no warranty either expressed or
 implied. Only Linux drivers which use cfg80211 framework can make use of the
 regulatory database and CRDA.
Homepage: https://wireless.wiki.kernel.org/en/developers/regulatory/wireless-regdb

Package: libirs-export91
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 60
Maintainer: LaMont Jones <lamont@debian.org>
Architecture: armhf
Source: bind9
Version: 1:9.9.5.dfsg-9+deb8u11
Depends: libc6 (>= 2.4), libdns-export100, libisc-export95, libisccfg-export90
Pre-Depends: multiarch-support
Description: Exported IRS Shared Library
 The Berkeley Internet Name Domain (BIND) implements an Internet domain
 name server.  BIND is the most widely-used name server software on the
 Internet, and is supported by the Internet Software Consortium, www.isc.org.
 .
 This package delivers the exported libirs shared library.

Package: libpipeline1
Status: install ok installed
Priority: important
Section: libs
Installed-Size: 54
Maintainer: Colin Watson <cjwatson@debian.org>
Architecture: armhf
Multi-Arch: same
Source: libpipeline
Version: 1.4.0-1
Depends: libc6 (>= 2.15)
Pre-Depends: multiarch-support
Description: pipeline manipulation library
 This is a C library for setting up and running pipelines of processes,
 without needing to involve shell command-line parsing which is often
 error-prone and insecure.
Homepage: http://libpipeline.nongnu.org/

Package: libroken18-heimdal
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 146
Maintainer: Brian May <bam@debian.org>
Architecture: armhf
Multi-Arch: same
Source: heimdal
Version: 1.6~rc2+dfsg-9+rpi1
Depends: libc6 (>= 2.15)
Pre-Depends: multiarch-support
Description: Heimdal Kerberos - roken support library
 Heimdal is a free implementation of Kerberos 5 that aims to be
 compatible with MIT Kerberos.
 .
 This package contains the library for roken support.
Homepage: http://www.h5l.org/

Package: libhdb9-heimdal
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 200
Maintainer: Brian May <bam@debian.org>
Architecture: armhf
Multi-Arch: same
Source: heimdal
Version: 1.6~rc2+dfsg-9+rpi1
Replaces: heimdal-lib (<< 0.3e-5)
Provides: heimdal-hdb-api-8
Depends: libasn1-8-heimdal (>= 1.6~git20120311g), libc6 (>= 2.8), libcomerr2 (>= 1.01), libdb5.3, libkrb5-26-heimdal (>= 1.6~git20131117), libldap-2.4-2 (>= 2.4.7), libroken18-heimdal (>= 1.4.0+git20110226), libsqlite3-0 (>= 3.5.9)
Pre-Depends: multiarch-support
Conflicts: heimdal-libs (<< 0.3e-5)
Description: Heimdal Kerberos - kadmin server library
 Heimdal is a free implementation of Kerberos 5 that aims to be
 compatible with MIT Kerberos.
 .
 This package contains the library for storing the KDC database.
Homepage: http://www.h5l.org/

Package: autoconf
Status: install ok installed
Priority: optional
Section: devel
Installed-Size: 1898
Maintainer: Ben Pfaff <pfaffben@debian.org>
Architecture: all
Multi-Arch: foreign
Version: 2.69-8
Depends: perl (>> 5.005), m4 (>= 1.4.13), debianutils (>= 1.8)
Recommends: automake | automaken
Suggests: autoconf-archive, gnu-standards, autoconf-doc, libtool, gettext
Breaks: gettext (<< 0.10.39), pkg-config (<< 0.25-1.1)
Conffiles:
 /etc/emacs/site-start.d/50autoconf.el 297521889d690871ec9d89c5eeff745a
Description: automatic configure script builder
 The standard for FSF source packages.  This is only useful if you
 write your own programs or if you extensively modify other people's
 programs.
 .
 For an extensive library of additional Autoconf macros, install the
 `autoconf-archive' package.
 .
 This version of autoconf is not compatible with scripts meant for
 Autoconf 2.13 or earlier.
Homepage: http://www.gnu.org/software/autoconf/

Package: initramfs-tools
Status: install ok installed
Priority: optional
Section: utils
Installed-Size: 348
Maintainer: Debian kernel team <debian-kernel@lists.debian.org>
Architecture: all
Multi-Arch: foreign
Version: 0.120+deb8u3
Provides: linux-initramfs-tool
Depends: klibc-utils (>= 2.0-1~), cpio, kmod | module-init-tools, udev, klibc-utils (>= 2.0.4-1.2~) | busybox (>= 1:1.01-3) | busybox-initramfs | busybox-static
Recommends: busybox (>= 1:1.01-3) | busybox-initramfs | busybox-static
Suggests: bash-completion
Breaks: console-setup (<< 1.72), cryptsetup (<< 2:1.6.6-4~), elilo (<< 3.12-3.1~), lilo (<< 22.8-8.2~), lvm2 (<< 2.02.111-2.1~), s390-tools (<< 1.8.3-2~), systemd-sysv (<< 186)
Conflicts: linux-initramfs-tool, usplash (<< 0.5.50)
Conffiles:
 /etc/bash_completion.d/initramfs-tools 7eeb7184772f3658e7cf446945c096b1
 /etc/initramfs-tools/initramfs.conf 42161705437308c44abc6d46395889c1
 /etc/initramfs-tools/update-initramfs.conf e2026d4603e7161efaccca519aeb1297
 /etc/kernel/postinst.d/initramfs-tools 1d77d3e4b57c3da299aacd44b1dc207c
 /etc/kernel/postrm.d/initramfs-tools f57d0b03f79fd46dd1a1fa3b00206070
Description: generic modular initramfs generator
 This package contains tools to create a bootable initramfs for Linux kernel
 packages. The initramfs is a compressed cpio archive. At boot time, the
 kernel unpacks that archive into RAM, mounts and uses it as initial root file
 system. The mounting of the real root file system occurs in early user space.
 klibc provides utilities to setup root. Having the root on MD, LVM2, LUKS or
 NFS is also supported.
 Any boot loader with initrd support is able to load an initramfs archive.

Package: libpcre3
Status: install ok installed
Priority: important
Section: libs
Installed-Size: 572
Maintainer: Mark Baker <mark@mnb.org.uk>
Architecture: armhf
Multi-Arch: same
Source: pcre3
Version: 2:8.35-3.3+deb8u4
Depends: libc6 (>= 2.4)
Pre-Depends: multiarch-support
Breaks: approx (<< 4.4-1~), cduce (<< 0.5.3-2~), cmigrep (<< 1.5-7~), galax (<< 1.1-7~), libpcre-ocaml (<< 6.0.1~), liquidsoap (<< 0.9.2-3~), ocsigen (<< 1.3.3-1~)
Conflicts: libpcre3-dev (<= 4.3-3)
Description: Perl 5 Compatible Regular Expression Library - runtime files
 This is a library of functions to support regular expressions whose syntax
 and semantics are as close as possible to those of the Perl 5 language.
 .
 This package contains the runtime libraries.

Package: libsysfs2
Status: install ok installed
Priority: important
Section: libs
Installed-Size: 46
Maintainer: Debian QA Group <packages@qa.debian.org>
Architecture: armhf
Multi-Arch: same
Source: sysfsutils
Version: 2.1.0+repack-4
Depends: libc6 (>= 2.4)
Pre-Depends: multiarch-support
Description: interface library to sysfs
 Sysfs is a virtual file system in Linux kernel 2.5+ that provides a
 tree of system devices. libsysfs provides a stable programming
 interface to sysfs and eases querying system devices and their
 attributes.
 .
 The package sysfsutils contains frontend programs that use this
 library. Development files and C examples are provided by the package
 libsysfs-dev.

Package: librtmp1
Status: install ok installed
Priority: extra
Section: libs
Installed-Size: 111
Maintainer: Debian Multimedia Maintainers <pkg-multimedia-maintainers@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: rtmpdump
Version: 2.4+20150115.gita107cef-1+deb8u1
Depends: libc6 (>= 2.7), libgmp10, libgnutls-deb0-28 (>= 3.3.0), libhogweed2, libnettle4, zlib1g (>= 1:1.1.4)
Pre-Depends: multiarch-support
Description: toolkit for RTMP streams (shared library)
 A small dumper for media content streamed over the RTMP protocol (like BBC's
 iPlayer high quality streams). Supplying an RTMP URL will result in a dumped
 flv file, which can be played/transcoded with standard tools.
 .
 This package contains the shared libraries, header files needed by
 programs that want to use librtmp.
Homepage: http://rtmpdump.mplayerhq.hu/

Package: libdevmapper1.02.1
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 340
Maintainer: Debian LVM Team <pkg-lvm-maintainers@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: lvm2 (2.02.111-2.2+deb8u1)
Version: 2:1.02.90-2.2+deb8u1
Depends: libc6 (>= 2.4), libselinux1 (>= 1.32), libudev1 (>= 183), dmsetup (>= 2:1.02.90-2.2+deb8u1)
Pre-Depends: multiarch-support
Breaks: lvm2 (<< 2.02.66)
Conflicts: libdevmapper1.02
Description: Linux Kernel Device Mapper userspace library
 The Linux Kernel Device Mapper is the LVM (Linux Logical Volume Management)
 Team's implementation of a minimalistic kernel-space driver that handles
 volume management, while keeping knowledge of the underlying device layout
 in user-space.  This makes it useful for not only LVM, but EVMS, software
 raid, and other drivers that create "virtual" block devices.
 .
 This package contains the (user-space) shared library for accessing the
 device-mapper; it allows usage of the device-mapper through a clean,
 consistent interface (as opposed to through kernel ioctls).
Homepage: http://sources.redhat.com/lvm2/

Package: libmro-compat-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 59
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: all
Version: 0.12-1
Depends: perl, libclass-c3-perl (>= 0.24)
Recommends: libclass-c3-xs-perl
Description: mro::* interface compatibility for Perls < 5.9.5
 The "mro" namespace provides several utilities for dealing with method
 resolution order and method caching in general in Perl 5.9.5 and higher.
 .
 MRO::Compat provides those interfaces for earlier versions of Perl
 (back to 5.6.0 anyway).
Homepage: http://search.cpan.org/dist/MRO-Compat/

Package: aptitude
Status: install ok installed
Priority: important
Section: admin
Installed-Size: 3839
Maintainer: Aptitude Development Team <aptitude-devel@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 0.6.11-1
Depends: aptitude-common (= 0.6.11-1), libapt-pkg4.12 (>= 0.9.16), libboost-iostreams1.55.0, libc6 (>= 2.4), libcwidget3, libgcc1 (>= 1:4.4.0), libncursesw5 (>= 5.6+20070908), libsigc++-2.0-0c2a (>= 2.2.0), libsqlite3-0 (>= 3.6.5), libstdc++6 (>= 4.6), libtinfo5, libxapian22
Recommends: aptitude-doc-en | aptitude-doc, sensible-utils, libparse-debianchangelog-perl
Suggests: tasksel, debtags, apt-xapian-index
Conffiles:
 /etc/cron.daily/aptitude f934222d5eb13cb132e2751bdb023318
 /etc/logrotate.d/aptitude fb66bc5dc8c13edbcb83cea15ff86959
Description: terminal-based package manager
 aptitude is a package manager with a number of useful features,
 including: a mutt-like syntax for matching packages in a flexible
 manner, dselect-like persistence of user actions, the ability to
 retrieve and display the Debian changelog of most packages, and a
 command-line mode similar to that of apt-get.
 .
 aptitude is also Y2K-compliant, non-fattening, naturally cleansing,
 and housebroken.
Homepage: http://aptitude.alioth.debian.org/

Package: cpp-4.9
Status: install ok installed
Priority: optional
Section: interpreters
Installed-Size: 13344
Maintainer: Debian GCC Maintainers <debian-gcc@lists.debian.org>
Architecture: armhf
Source: gcc-4.9
Version: 4.9.2-10
Replaces: gccgo-4.9 (<< 4.9.2-10)
Depends: gcc-4.9-base (= 4.9.2-10), libc6 (>= 2.11), libcloog-isl4 (>= 0.17), libgmp10 (>= 2:5.0.1~), libisl10 (>= 0.10), libmpc3, libmpfr4 (>= 3.1.2), zlib1g (>= 1:1.1.4)
Suggests: gcc-4.9-locales (>= 4.9)
Description: GNU C preprocessor
 A macro processor that is used automatically by the GNU C compiler
 to transform programs before actual compilation.
 .
 This package has been separated from gcc for the benefit of those who
 require the preprocessor but not the compiler.
Homepage: http://gcc.gnu.org/

Package: gcc
Status: install ok installed
Priority: optional
Section: devel
Installed-Size: 6
Maintainer: Debian GCC Maintainers <debian-gcc@lists.debian.org>
Architecture: armhf
Source: gcc-defaults (1.136)
Version: 4:4.9.2-2
Provides: c-compiler
Depends: cpp (>= 4:4.9.2-2), gcc-4.9 (>= 4.9.2-1~)
Recommends: libc6-dev | libc-dev
Suggests: gcc-multilib, make, manpages-dev, autoconf, automake, libtool, flex, bison, gdb, gcc-doc
Conflicts: gcc-doc (<< 1:2.95.3)
Description: GNU C compiler
 This is the GNU C compiler, a fairly portable optimizing compiler for C.
 .
 This is a dependency package providing the default GNU C compiler.

Package: m4
Status: install ok installed
Priority: standard
Section: interpreters
Installed-Size: 310
Maintainer: Santiago Vila <sanvila@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 1.4.17-4
Depends: libc6 (>= 2.17), libsigsegv2 (>= 2.9)
Description: macro processing language
 GNU `m4' is an implementation of the traditional UNIX macro
 processor.  It is mostly SVR4 compatible, although it has some
 extensions (for example, handling more than 9 positional parameters to
 macros).  `m4' also has builtin functions for including files, running
 shell commands, doing arithmetic, etc.  Autoconf needs GNU `m4' for
 generating `configure' scripts, but not for running them.
Homepage: http://www.gnu.org/software/m4/

Package: sgml-base
Status: install ok installed
Priority: optional
Section: text
Installed-Size: 113
Maintainer: Debian XML/SGML Group <debian-xml-sgml-pkgs@lists.alioth.debian.org>
Architecture: all
Version: 1.26+nmu4
Depends: perl
Pre-Depends: dpkg (>= 1.16.4)
Suggests: sgml-base-doc
Conflicts: sgml-data (<= 0.02), sgmltools-2 (<= 2.0.2-4)
Description: SGML infrastructure and SGML catalog file support
 This package creates the SGML infrastructure directories and provides
 SGML catalog file support in compliance with the current Debian SGML
 Policy draft:
 .
   * infrastructure directories:
      - /etc/sgml
      - /usr/share/sgml/{declaration,dtd,entities,misc,stylesheet}
      - /usr/share/local/sgml/{declaration,dtd,entities,misc,stylesheet}
 .
   * update-catalog(8): tool for maintaining the root SGML catalog
     file and the package SGML catalog files in the '/etc/sgml' directory

Package: libgeoip1
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 258
Maintainer: Patrick Matthäi <pmatthaei@debian.org>
Architecture: armhf
Multi-Arch: same
Source: geoip
Version: 1.6.2-4
Depends: libc6 (>= 2.4)
Pre-Depends: multiarch-support
Recommends: geoip-database
Suggests: geoip-bin
Description: non-DNS IP-to-country resolver library
 GeoIP is a C library that enables the user to find the country that any
 IP address or hostname originates from. It uses a file based database.
 .
 This database simply contains IP blocks as keys, and countries as values and
 it should be more complete and accurate than using reverse DNS lookups.
 .
 This package contains the shared library.
Homepage: http://www.maxmind.com/

Package: libpod-latex-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 129
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: all
Version: 0.61-1
Depends: perl
Description: module to convert Pod data to formatted LaTeX
 Pod::LaTeX is a module to convert documentation in the Pod format into LaTeX.
 The pod2latex command uses this module for translation.
 .
 Pod::LaTeX is a derived class from Pod::Select.
Homepage: https://metacpan.org/release/Pod-LaTeX/

Package: libisccfg90
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 114
Maintainer: LaMont Jones <lamont@debian.org>
Architecture: armhf
Source: bind9
Version: 1:9.9.5.dfsg-9+deb8u11
Replaces: libbind0
Depends: libc6 (>= 2.4), libcap2 (>= 1:2.10), libcomerr2 (>= 1.01), libdns100, libgssapi-krb5-2 (>= 1.6.dfsg.2), libisc95, libisccc90, libk5crypto3 (>= 1.6.dfsg.2), libkrb5-3 (>= 1.6.dfsg.2), libssl1.0.0 (>= 1.0.0), libxml2 (>= 2.6.27)
Conflicts: libbind0, libbind9-41
Description: Config File Handling Library used by BIND
 The Berkeley Internet Name Domain (BIND) implements an Internet domain
 name server.  BIND is the most widely-used name server software on the
 Internet, and is supported by the Internet Software Consortium, www.isc.org.
 .
 This package delivers the libisccfg shared library used by BIND's daemons
 and clients to read and write ISC-style configuration files like named.conf
 and rndc.conf.

Package: parted
Status: install ok installed
Priority: optional
Section: admin
Installed-Size: 247
Maintainer: Parted Maintainer Team <parted-maintainers@lists.alioth.debian.org>
Architecture: armhf
Version: 3.2-7
Replaces: fsresize, parted1.6
Depends: libc6 (>= 2.11), libparted2 (= 3.2-7), libreadline6 (>= 6.0), libtinfo5
Suggests: parted-doc
Conflicts: fsresize, parted1.6
Description: disk partition manipulator
 GNU Parted is a program that allows you to create, destroy, resize,
 move, and copy disk partitions. This is useful for creating space
 for new operating systems, reorganizing disk usage, and copying data
 to new hard disks.
 .
 This package contains the binary and manual page. Further
 documentation is available in parted-doc.
 .
 Parted currently supports DOS, Mac, Sun, BSD, GPT, MIPS, and PC98
 partitioning formats, as well as a "loop" (raw disk) type which
 allows use on RAID/LVM. It can detect and remove ASFS/AFFS/APFS,
 Btrfs, ext2/3/4, FAT16/32, HFS, JFS, linux-swap, UFS, XFS, and ZFS
 file systems. Parted also has the ability to create and modify file
 systems of some of these types, but using it to perform file system
 operations is now deprecated.
 .
 The nature of this software means that any bugs could cause massive
 data loss. While there are no such bugs known at the moment, they
 could exist, so please back up all important files before running
 it, and do so at your own risk.
Homepage: http://www.gnu.org/software/parted

Package: lsb-release
Status: install ok installed
Priority: optional
Section: misc
Installed-Size: 97
Maintainer: Debian LSB Team <debian-lsb@lists.debian.org>
Architecture: all
Multi-Arch: foreign
Source: lsb
Version: 4.1+Debian13+rpi1+nmu1
Depends: python (>= 2.7), python (<< 2.8)
Recommends: apt
Suggests: lsb
Description: Linux Standard Base version reporting utility
 The Linux Standard Base (http://www.linuxbase.org/) is a standard
 core system that third-party applications written for Linux can
 depend upon.
 .
 The lsb-release command is a simple tool to help identify the Linux
 distribution being used and its compliance with the Linux Standard Base.
 LSB conformance will not be reported unless the required metapackages are
 installed.
 .
 While it is intended for use by LSB packages, this command may also
 be useful for programmatically distinguishing between a pure Debian
 installation and derived distributions.
Homepage: http://www.linuxfoundation.org/collaborate/workgroups/lsb

Package: coreutils
Essential: yes
Status: install ok installed
Priority: required
Section: utils
Installed-Size: 12955
Maintainer: Michael Stone <mstone@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 8.23-4
Replaces: mktemp, realpath, timeout
Pre-Depends: libacl1 (>= 2.2.51-8), libattr1 (>= 1:2.4.46-8), libc6 (>= 2.17), libselinux1 (>= 2.1.13)
Conflicts: timeout
Description: GNU core utilities
 This package contains the basic file, shell and text manipulation
 utilities which are expected to exist on every operating system.
 .
 Specifically, this package includes:
 arch base64 basename cat chcon chgrp chmod chown chroot cksum comm cp
 csplit cut date dd df dir dircolors dirname du echo env expand expr
 factor false flock fmt fold groups head hostid id install join link ln
 logname ls md5sum mkdir mkfifo mknod mktemp mv nice nl nohup nproc numfmt
 od paste pathchk pinky pr printenv printf ptx pwd readlink realpath rm
 rmdir runcon sha*sum seq shred sleep sort split stat stty sum sync tac
 tail tee test timeout touch tr true truncate tsort tty uname unexpand
 uniq unlink users vdir wc who whoami yes
Homepage: http://gnu.org/software/coreutils

Package: ed
Status: install ok installed
Priority: optional
Section: editors
Installed-Size: 76
Maintainer: Martin Zobel-Helas <zobel@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 1.10-2
Depends: libc6 (>= 2.11)
Description: classic UNIX line editor
 ed is a line-oriented text editor.  It is used to
 create, display, modify and otherwise manipulate text
 files.
 .
 red is a restricted ed: it can only edit files in the
 current directory and cannot execute shell commands.
Homepage: http://www.gnu.org/software/ed/

Package: file
Status: install ok installed
Priority: standard
Section: utils
Installed-Size: 75
Maintainer: Christoph Biedl <debian.axhn@manchmal.in-ulm.de>
Architecture: armhf
Multi-Arch: foreign
Version: 1:5.22+15-2+deb8u3
Depends: libc6 (>= 2.4), libmagic1 (= 1:5.22+15-2+deb8u3), zlib1g (>= 1:1.1.4)
Description: Determines file type using "magic" numbers
 File tests each argument in an attempt to classify it. There are
 three sets of tests, performed in this order: filesystem tests,
 magic number tests, and language tests. The first test that
 succeeds causes the file type to be printed.
Homepage: http://www.darwinsys.com/file/

Package: libdns-export100
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 1129
Maintainer: LaMont Jones <lamont@debian.org>
Architecture: armhf
Source: bind9
Version: 1:9.9.5.dfsg-9+deb8u11
Depends: libc6 (>= 2.4), libisc-export95
Pre-Depends: multiarch-support
Description: Exported DNS Shared Library
 The Berkeley Internet Name Domain (BIND) implements an Internet domain
 name server.  BIND is the most widely-used name server software on the
 Internet, and is supported by the Internet Software Consortium, www.isc.org.
 .
 This package delivers the exported libdns shared library.

Package: libbind9-90
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 72
Maintainer: LaMont Jones <lamont@debian.org>
Architecture: armhf
Source: bind9
Version: 1:9.9.5.dfsg-9+deb8u11
Replaces: libbind0
Depends: libc6 (>= 2.4), libcap2 (>= 1:2.10), libcomerr2 (>= 1.01), libdns100, libgssapi-krb5-2 (>= 1.6.dfsg.2), libisc95, libisccfg90, libk5crypto3 (>= 1.6.dfsg.2), libkrb5-3 (>= 1.6.dfsg.2), libssl1.0.0 (>= 1.0.0), libxml2 (>= 2.6.27)
Conflicts: libbind0, libbind9-41
Description: BIND9 Shared Library used by BIND
 The Berkeley Internet Name Domain (BIND) implements an Internet domain
 name server.  BIND is the most widely-used name server software on the
 Internet, and is supported by the Internet Software Consortium, www.isc.org.
 .
 This package delivers the libbind9 shared library used by BIND's daemons and
 clients.

Package: fakeroot
Status: install ok installed
Priority: optional
Section: utils
Installed-Size: 167
Maintainer: Clint Adams <clint@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 1.20.2-1
Depends: libc6 (>= 2.7), libfakeroot (>= 1.20.2-1)
Description: tool for simulating superuser privileges
 fakeroot provides a fake "root environment" by means of LD_PRELOAD and
 SysV IPC (or TCP) trickery. It puts wrappers around getuid(), chown(),
 stat(), and other file-manipulation functions, so that unprivileged
 users can (for instance) populate .deb archives with root-owned files;
 various build tools use fakeroot for this by default.
 .
 This package contains fakeroot command and the daemon that remembers
 fake ownership/permissions of files manipulated by fakeroot
 processes.

Package: usbutils
Status: install ok installed
Priority: optional
Section: utils
Installed-Size: 629
Maintainer: Aurelien Jarno <aurel32@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 1:007-2
Depends: libc6 (>= 2.4), libusb-1.0-0 (>= 2:1.0.8), zlib1g (>= 1:1.2.3.3)
Suggests: wget (>= 1.8.1-6) | lynx-cur
Description: Linux USB utilities
 This package contains the lsusb utility for inspecting the devices
 connected to the USB bus. It shows a graphical representation of the
 devices that are currently plugged in, showing the topology of the
 USB bus. It also displays information on each individual device on
 the bus.
 .
 More information can be found at the Linux USB web site
 http://www.linux-usb.org/ .

Package: iproute2
Status: install ok installed
Priority: important
Section: net
Installed-Size: 962
Maintainer: Debian iproute2 Maintainers <ah-iproute@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 3.16.0-2
Replaces: iproute
Provides: arpd
Depends: libc6 (>= 2.14), libdb5.3, libselinux1 (>= 2.0.15)
Recommends: libatm1 (>= 2.4.1-17~), libxtables10
Suggests: iproute2-doc
Conflicts: arpd, iproute (<< 20130000-1)
Conffiles:
 /etc/iproute2/ematch_map b91e7f9b26918449bade9573f8871d61
 /etc/iproute2/group 3aea2c0e0dd75e13a5f8f48f2936915f
 /etc/iproute2/rt_dsfield 4264d5c7c8298300185aa04e1a736934
 /etc/iproute2/rt_protos 95ce0b4b5b79f5a8a45941fb418a904c
 /etc/iproute2/rt_realms 7137bdf40e8d58c87ac7e3bba503767f
 /etc/iproute2/rt_scopes 6298b8df09e9bda23ea7da49021ca457
 /etc/iproute2/rt_tables a1313318d6778fe6b8c680248ef5a463
Description: networking and traffic control tools
 The iproute2 suite is a collection of utilities for networking and
 traffic control.
 .
 These tools communicate with the Linux kernel via the (rt)netlink
 interface, providing advanced features not available through the
 legacy net-tools commands 'ifconfig' and 'route'.
Homepage: http://www.linux-foundation.org/en/Net:Iproute2

Package: tcpd
Status: install ok installed
Priority: optional
Section: net
Installed-Size: 50
Maintainer: Marco d'Itri <md@linux.it>
Architecture: armhf
Multi-Arch: foreign
Source: tcp-wrappers
Version: 7.6.q-25
Replaces: libwrap0 (<< 7.6-8)
Depends: libc6 (>= 2.4), libwrap0 (>= 7.6-4~)
Description: Wietse Venema's TCP wrapper utilities
 Wietse Venema's network logger, also known as TCPD or LOG_TCP.
 .
 These programs log the client host name of incoming telnet,
 ftp, rsh, rlogin, finger etc. requests.
 .
 Security options are:
  - access control per host, domain and/or service;
  - detection of host name spoofing or host address spoofing;
  - booby traps to implement an early-warning system.

Package: libbsd0
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 111
Maintainer: Guillem Jover <guillem@debian.org>
Architecture: armhf
Multi-Arch: same
Source: libbsd
Version: 0.7.0-2
Depends: libc6 (>= 2.8)
Pre-Depends: multiarch-support
Description: utility functions from BSD systems - shared library
 This library provides some C functions such as strlcpy() that are commonly
 available on BSD systems but not on others like GNU systems.
 .
 For a detailed list of the provided functions, please see the libbsd-dev
 package description.
Homepage: http://libbsd.freedesktop.org/

Package: e2fsprogs
Essential: yes
Status: install ok installed
Priority: required
Section: admin
Installed-Size: 2687
Maintainer: Theodore Y. Ts'o <tytso@mit.edu>
Architecture: armhf
Multi-Arch: foreign
Version: 1.42.12-2
Replaces: hurd (<= 20040301-1), libblkid1 (<< 1.38+1.39-WIP-2005.12.10-2), libuuid1 (<< 1.38+1.39-WIP-2005.12.10-2)
Pre-Depends: e2fslibs (= 1.42.12-2), libblkid1 (>= 2.17.2), libc6 (>= 2.11), libcomerr2 (>= 1.42~WIP-2011-10-05-1), libss2 (>= 1.34-1), libuuid1 (>= 2.16), util-linux (>= 2.15~rc1-1)
Suggests: gpart, parted, e2fsck-static
Conflicts: dump (<< 0.4b4-4), initscripts (<< 2.85-4), quota (<< 1.55-8.1), sysvinit (<< 2.85-4)
Conffiles:
 /etc/mke2fs.conf e2cdbf0620e93949af5857eb4739f949
Description: ext2/ext3/ext4 file system utilities
 The ext2, ext3 and ext4 file systems are successors of the original ext
 ("extended") file system. They are the main file system types used for
 hard disks on Debian and other Linux systems.
 .
 This package contains programs for creating, checking, and maintaining
 ext2/3/4-based file systems.  It also includes the "badblocks" program,
 which can be used to scan for bad blocks on a disk or other storage device.
Homepage: http://e2fsprogs.sourceforge.net

Package: libpng12-0
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 238
Maintainer: Anibal Monsalve Salazar <anibal@debian.org>
Architecture: armhf
Multi-Arch: same
Source: libpng
Version: 1.2.50-2+deb8u3
Replaces: libpng12-dev (<= 1.2.8rel-7)
Depends: libc6 (>= 2.11), zlib1g (>= 1:1.1.4)
Pre-Depends: multiarch-support
Conflicts: libpng12-dev (<= 1.2.8rel-7), mzscheme (<= 1:209-5), pngcrush (<= 1.5.10-2), pngmeta (<= 1.11-3), povray-3.5 (<= 3.5.0c-10), qemacs (<= 0.3.1-5)
Description: PNG library - runtime
 libpng is a library implementing an interface for reading and writing
 PNG (Portable Network Graphics) format files.
 .
 This package contains the runtime library files needed to run software
 using libpng.
Homepage: http://libpng.org/pub/png/libpng.html

Package: tar
Essential: yes
Status: install ok installed
Priority: required
Section: utils
Installed-Size: 2181
Maintainer: Bdale Garbee <bdale@gag.com>
Architecture: armhf
Multi-Arch: foreign
Version: 1.27.1-2
Replaces: cpio (<< 2.4.2-39)
Pre-Depends: libacl1 (>= 2.2.51-8), libc6 (>= 2.17), libselinux1 (>= 1.32)
Suggests: bzip2, ncompress, xz-utils, tar-scripts
Breaks: dpkg-dev (<< 1.14.26)
Conflicts: cpio (<= 2.4.2-38)
Conffiles:
 /etc/rmt 3c58b7cd13da1085eff0acc6a00f43c7
Description: GNU version of the tar archiving utility
 Tar is a program for packaging a set of files as a single archive in tar
 format.  The function it performs is conceptually similar to cpio, and to
 things like PKZIP in the DOS world.  It is heavily used by the Debian package
 management system, and is useful for performing system backups and exchanging
 sets of files with others.

Package: liblog-message-simple-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 57
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: all
Version: 0.10-2
Depends: perl, liblog-message-perl
Description: simplified interface to Log::Message
 Log::Message::Simple provides standardized logging facilities using the
 Log::Message module.
Homepage: https://metacpan.org/release/Log-Message-Simple

Package: libkrb5support0
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 123
Maintainer: Sam Hartman <hartmans@debian.org>
Architecture: armhf
Multi-Arch: same
Source: krb5
Version: 1.12.1+dfsg-19+deb8u2
Depends: libc6 (>= 2.4), libkeyutils1 (>= 1.4)
Pre-Depends: multiarch-support
Breaks: libgssapi-krb5-2 (<< 1.12.1+dfsg-8), libk5crypto3 (<< 1.12.1+dfsg-8), libkadm5clnt-mit9 (<< 1.12.1+dfsg-8), libkadm5srv-mit9 (<< 1.12.1+dfsg-8), libkdb5-7 (<< 1.12.1+dfsg-8)
Conflicts: libkrb53
Description: MIT Kerberos runtime libraries - Support library
 Kerberos is a system for authenticating users and services on a network.
 Kerberos is a trusted third-party service.  That means that there is a
 third party (the Kerberos server) that is trusted by all the entities on
 the network (users and services, usually called "principals").
 .
 This is the MIT reference implementation of Kerberos V5.
 .
 This package contains an internal runtime support library used by other
 Kerberos libraries.
Homepage: http://web.mit.edu/kerberos/

Package: libhx509-5-heimdal
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 315
Maintainer: Brian May <bam@debian.org>
Architecture: armhf
Multi-Arch: same
Source: heimdal
Version: 1.6~rc2+dfsg-9+rpi1
Depends: libasn1-8-heimdal (>= 1.4.0+git20110226), libc6 (>= 2.8), libcomerr2 (>= 1.34), libhcrypto4-heimdal (>= 1.4.0+git20110226), libheimbase1-heimdal (>= 1.6~git20131117), libroken18-heimdal (>= 1.4.0+git20110226), libwind0-heimdal (>= 1.4.0+git20110226)
Pre-Depends: multiarch-support
Description: Heimdal Kerberos - X509 support library
 Heimdal is a free implementation of Kerberos 5 that aims to be
 compatible with MIT Kerberos.
Homepage: http://www.h5l.org/

Package: libbz2-1.0
Status: install ok installed
Priority: important
Section: libs
Installed-Size: 81
Maintainer: Anibal Monsalve Salazar <anibal@debian.org>
Architecture: armhf
Multi-Arch: same
Source: bzip2
Version: 1.0.6-7
Depends: libc6 (>= 2.4)
Pre-Depends: multiarch-support
Description: high-quality block-sorting file compressor library - runtime
 This package contains libbzip2 which is used by the bzip2 compressor.
 .
 bzip2 is a freely available, patent free, high-quality data compressor.
 It typically compresses files to within 10% to 15% of the best available
 techniques, whilst being around twice as fast at compression and six
 times faster at decompression.
 .
 bzip2 compresses files using the Burrows-Wheeler block-sorting text
 compression algorithm, and Huffman coding. Compression is generally
 considerably better than that achieved by more conventional
 LZ77/LZ78-based compressors, and approaches the performance of the PPM
 family of statistical compressors.
 .
 The archive file format of bzip2 (.bz2) is incompatible with that of its
 predecessor, bzip (.bz).
Homepage: http://www.bzip.org/

Package: ucf
Status: install ok installed
Priority: standard
Section: utils
Installed-Size: 229
Maintainer: Manoj Srivastava <srivasta@debian.org>
Architecture: all
Multi-Arch: foreign
Version: 3.0030
Depends: debconf (>= 1.5.19), coreutils (>= 5.91)
Conffiles:
 /etc/ucf.conf 5565b8b26108c49ba575ba452cd69b3e
Description: Update Configuration File(s): preserve user changes to config files
 Debian policy mandates that user changes to configuration files must be
 preserved during package upgrades. The easy way to achieve this behavior
 is to make the configuration file a 'conffile', in which case dpkg
 handles the file specially during upgrades, prompting the user as
 needed.
 .
 This is appropriate only if it is possible to distribute a default
 version that will work for most installations, although some system
 administrators may choose to modify it. This implies that the
 default version will be part of the package distribution, and must
 not be modified by the maintainer scripts during installation (or at
 any other time).
 .
 This script attempts to provide conffile-like handling for files that
 may not be labelled conffiles, and are not shipped in a Debian package,
 but handled by the postinst instead. This script allows one to
 maintain files in /etc, preserving user changes and in general
 offering the same facilities while upgrading that dpkg normally
 provides for 'conffiles'.
 .
 Additionally, this script provides facilities for transitioning a
 file that had not been provided with conffile-like protection to come
 under this schema, and attempts to minimize questions asked at
 installation time. Indeed, the transitioning facility is better than the
 one offered by dpkg while transitioning a file from a non-conffile to
 conffile status.

Package: libkmod2
Status: install ok installed
Priority: important
Section: libs
Installed-Size: 89
Maintainer: Marco d'Itri <md@linux.it>
Architecture: armhf
Multi-Arch: same
Source: kmod
Version: 18-3
Depends: libc6 (>= 2.17)
Pre-Depends: multiarch-support
Description: libkmod shared library
 This library provides an API for insertion, removal, configuration and
 listing of kernel modules.

Package: libxmuu1
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 30
Maintainer: Debian X Strike Force <debian-x@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: libxmu
Version: 2:1.1.2-1
Depends: libc6 (>= 2.4), libx11-6
Pre-Depends: multiarch-support
Description: X11 miscellaneous micro-utility library
 libXmuu provides a set of miscellaneous utility convenience functions for X
 libraries to use.  It is a lighter version of libXmu that does not depend
 on libXt or libXext; for more information on libXmu, see libxmu6.
 .
 More information about X.Org can be found at:
 <URL:http://www.X.org>
 .
 This module can be found at
 git://anongit.freedesktop.org/git/xorg/lib/libXmu

Package: libisc95
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 369
Maintainer: LaMont Jones <lamont@debian.org>
Architecture: armhf
Source: bind9
Version: 1:9.9.5.dfsg-9+deb8u11
Replaces: libbind0
Depends: libc6 (>= 2.15), libcap2 (>= 1:2.10), libxml2 (>= 2.7.4)
Conflicts: libbind0, libbind9-41
Description: ISC Shared Library used by BIND
 The Berkeley Internet Name Domain (BIND) implements an Internet domain
 name server.  BIND is the most widely-used name server software on the
 Internet, and is supported by the Internet Software Consortium, www.isc.org.
 .
 This package delivers the libisc shared library used by BIND's daemons and
 clients.

Package: libxml2
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 1542
Maintainer: Debian XML/SGML Group <debian-xml-sgml-pkgs@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Version: 2.9.1+dfsg1-5+deb8u4
Depends: libc6 (>= 2.15), liblzma5 (>= 5.1.1alpha+20120614), zlib1g (>= 1:1.2.3.3)
Pre-Depends: multiarch-support
Recommends: xml-core
Description: GNOME XML library
 XML is a metalanguage to let you design your own markup language.
 A regular markup language defines a way to describe information in
 a certain class of documents (eg HTML). XML lets you define your
 own customized markup languages for many classes of document. It
 can do this because it's written in SGML, the international standard
 metalanguage for markup languages.
 .
 This package provides a library providing an extensive API to handle
 such XML data files.
Homepage: http://xmlsoft.org/

Package: iftop
Status: install ok installed
Priority: optional
Section: net
Installed-Size: 73
Maintainer: Markus Koschany <apo@gambaru.de>
Architecture: armhf
Version: 1.0~pre4-2
Depends: libc6 (>= 2.7), libncurses5 (>= 5.5-5~), libpcap0.8 (>= 0.9.8), libtinfo5
Description: displays bandwidth usage information on an network interface
 iftop does for network usage what top(1) does for CPU usage. It listens to
 network traffic on a named interface and displays a table of current bandwidth
 usage by pairs of hosts. Handy for answering the question "Why is my Internet
 link so slow?".
Homepage: http://www.ex-parrot.com/~pdw/iftop/

Package: aptitude-common
Status: install ok installed
Priority: important
Section: admin
Installed-Size: 9930
Maintainer: Aptitude Development Team <aptitude-devel@lists.alioth.debian.org>
Architecture: all
Multi-Arch: foreign
Source: aptitude
Version: 0.6.11-1
Replaces: aptitude (<< 0.6.8-1)
Recommends: aptitude
Breaks: aptitude (<< 0.6.8-1)
Description: architecture independent files for the aptitude package manager
 aptitude is a package manager with a number of useful features,
 including: a mutt-like syntax for matching packages in a flexible
 manner, dselect-like persistence of user actions, the ability to
 retrieve and display the Debian changelog of most packages, and a
 command-line mode similar to that of apt-get.
 .
 This package contains the data files and translations used by
 aptitude.
Homepage: http://aptitude.alioth.debian.org/

Package: libblkid1
Status: install ok installed
Priority: required
Section: libs
Installed-Size: 288
Maintainer: Debian util-linux Maintainers <ah-util-linux@debian.org>
Architecture: armhf
Multi-Arch: same
Source: util-linux
Version: 2.25.2-6
Depends: libc6 (>= 2.17), libuuid1 (>= 2.16)
Pre-Depends: multiarch-support
Description: block device id library
 The blkid library which allows system programs like fsck and
 mount to quickly and easily find block devices by filesystem UUID and
 LABEL.  This allows system administrators to avoid specifying
 filesystems by hard-coded device names, but via a logical naming
 system instead.

Package: libcgi-fast-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 55
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: all
Version: 1:2.04-1
Replaces: libcgi-pm-perl (<< 4)
Depends: perl, libcgi-pm-perl (>= 4), libfcgi-perl
Breaks: libcgi-pm-perl (<< 4)
Description: CGI subclass for work with FCGI
 CGI::Fast is a subclass of the CGI object created by CGI.pm. It is
 specialized to work with the FCGI module, which greatly speeds up CGI scripts
 by turning them into persistently running server processes. Scripts that
 perform time-consuming initialization processes, such as loading large
 modules or opening persistent database connections, will see large
 performance improvements.
Homepage: https://metacpan.org/release/CGI-Fast

Package: libfreetype6
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 777
Maintainer: Steve Langasek <vorlon@debian.org>
Architecture: armhf
Multi-Arch: same
Source: freetype
Version: 2.6-2rpi1rpi1g
Depends: libc6 (>= 2.11), libpng12-0 (>= 1.2.13-4), zlib1g (>= 1:1.1.4)
Pre-Depends: multiarch-support
Description: FreeType 2 font engine, shared library files
 The FreeType project is a team of volunteers who develop free,
 portable and high-quality software solutions for digital typography.
 They specifically target embedded systems and focus on bringing small,
 efficient and ubiquitous products.
 .
 The FreeType 2 library is their new software font engine.  It has been
 designed to provide the following important features:
  * A universal and simple API to manage font files
  * Support for several font formats through loadable modules
  * High-quality anti-aliasing
  * High portability & performance
 .
 Supported font formats include:
  * TrueType files (.ttf) and collections (.ttc)
  * Type 1 font files both in ASCII (.pfa) or binary (.pfb) format
  * Type 1 Multiple Master fonts.  The FreeType 2 API also provides
    routines to manage design instances easily
  * Type 1 CID-keyed fonts
  * OpenType/CFF (.otf) fonts
  * CFF/Type 2 fonts
  * Adobe CEF fonts (.cef), used to embed fonts in SVG documents with
    the Adobe SVG viewer plugin.
  * Windows FNT/FON bitmap fonts
 .
 This package contains the files needed to run programs that use the
 FreeType 2 library.
 .
  Home Page: http://www.freetype.org/
  Authors: David Turner   <david.turner@freetype.org>
           Robert Wilhelm <robert.wilhelm@freetype.org>
           Werner Lemberg <werner.lemberg@freetype.org>
Homepage: http://www.freetype.org

Package: libtasn1-6
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 83
Maintainer: Debian GnuTLS Maintainers <pkg-gnutls-maint@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Version: 4.2-3+deb8u3
Depends: libc6 (>= 2.4)
Pre-Depends: multiarch-support
Description: Manage ASN.1 structures (runtime)
 Manage ASN1 (Abstract Syntax Notation One) structures.
 The main features of this library are:
   * on-line ASN1 structure management that doesn't require any C code
     file generation.
   * off-line ASN1 structure management with C code file generation
     containing an array.
   * DER (Distinguish Encoding Rules) encoding
   * no limits for INTEGER and ENUMERATED values
 .
 This package contains runtime libraries.
Homepage: http://www.gnu.org/software/libtasn1/

Package: python-minimal
Status: install ok installed
Priority: standard
Section: python
Installed-Size: 119
Maintainer: Matthias Klose <doko@debian.org>
Architecture: armhf
Multi-Arch: allowed
Source: python-defaults
Version: 2.7.9-1
Replaces: python (<= 2.7.3-1~)
Depends: python2.7-minimal (>= 2.7.9-1~), dpkg (>= 1.13.20)
Recommends: python
Breaks: idle (<< 2.6), python (<= 2.7.3-1~), python-all (<< 2.6), python-all-dbg (<< 2.6), python-all-dev (<< 2.6), python-dbg (<< 2.6), python-dev (<< 2.6), python-examples (<< 2.6), python-support (<< 1.0.10ubuntu2), python2.5-minimal (<< 2.5.5-7), python2.6-minimal (<< 2.6.5~rc2-2), python3.1-minimal (<< 3.1.2~rc1-2)
Conflicts: python-central (<< 0.5.5)
Description: minimal subset of the Python language (default version)
 This package contains the interpreter and some essential modules.  It's used
 in the boot process for some basic tasks.
 See /usr/share/doc/python2.7-minimal/README.Debian for a list of the modules
 contained in this package.
Homepage: http://www.python.org/

Package: libasound2
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 997
Maintainer: Debian ALSA Maintainers <pkg-alsa-devel@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: alsa-lib
Version: 1.0.28-1+rpi2
Depends: libc6 (>= 2.16), libasound2-data (>= 1.0.28-1+rpi2)
Suggests: libasound2-plugins (>= 1.0.24)
Breaks: bluez-alsa (<= 4.94-2), libasound2-plugin-equal (<= 0.6-1), libasound2-plugins (<< 1.0.24)
Description: shared library for ALSA applications
 This package contains the ALSA library and its standard plugins, as well
 as the required configuration files.
 .
 ALSA is the Advanced Linux Sound Architecture.
Homepage: http://www.alsa-project.org/

Package: libdrm2
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 111
Maintainer: Debian X Strike Force <debian-x@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: libdrm
Version: 2.4.71-1+rpi1
Depends: libc6 (>= 2.17)
Pre-Depends: multiarch-support
Description: Userspace interface to kernel DRM services -- runtime
 This library implements the userspace interface to the kernel DRM
 services.  DRM stands for "Direct Rendering Manager", which is the
 kernelspace portion of the "Direct Rendering Infrastructure" (DRI).
 The DRI is currently used on Linux to provide hardware-accelerated
 OpenGL drivers.
 .
 This package provides the runtime environment for libdrm.
Homepage: http://cgit.freedesktop.org/mesa/drm/

Package: isc-dhcp-client
Status: install ok installed
Priority: important
Section: net
Installed-Size: 511
Maintainer: Debian ISC DHCP maintainers <pkg-dhcp-devel@lists.alioth.debian.org>
Architecture: armhf
Source: isc-dhcp
Version: 4.3.1-6+deb8u2
Provides: dhcp-client
Depends: libc6 (>= 2.15), libdns-export100, libirs-export91, libisc-export95, debianutils (>= 2.8.2), isc-dhcp-common (= 4.3.1-6+deb8u2), iproute2
Suggests: resolvconf, avahi-autoipd
Conffiles:
 /etc/dhcp/dhclient-enter-hooks.d/debug 72de8917c04f1dd3003459b35adcc66d
 /etc/dhcp/dhclient-exit-hooks.d/debug 72de8917c04f1dd3003459b35adcc66d
 /etc/dhcp/dhclient-exit-hooks.d/rfc3442-classless-routes 9f5b3bd5f605e2debf1a7a88a705c1ba
 /etc/dhcp/dhclient.conf ed8f55fbf1e31a2ab1ac263818c99773
Description: DHCP client for automatically obtaining an IP address
 This is the Internet Software Consortium's DHCP client.
 .
 Dynamic Host Configuration Protocol (DHCP) is a protocol like BOOTP
 (actually dhcpd includes much of the functionality of bootpd). It
 gives client machines "leases" for IP addresses and can
 automatically set their network configuration. If your machine
 depends on DHCP (especially likely if it's a workstation on a large
 network, or a laptop, or attached to a cable modem), keep this or
 another DHCP client installed.
 .
 Extra documentation can be found in the package isc-dhcp-common.
Homepage: http://www.isc.org

Package: bzip2
Status: install ok installed
Priority: standard
Section: utils
Installed-Size: 78
Maintainer: Anibal Monsalve Salazar <anibal@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 1.0.6-7
Replaces: libbz2 (<< 0.9.5d-3)
Depends: libbz2-1.0 (= 1.0.6-7), libc6 (>= 2.4)
Suggests: bzip2-doc
Description: high-quality block-sorting file compressor - utilities
 bzip2 is a freely available, patent free, high-quality data compressor.
 It typically compresses files to within 10% to 15% of the best available
 techniques, whilst being around twice as fast at compression and six
 times faster at decompression.
 .
 bzip2 compresses files using the Burrows-Wheeler block-sorting text
 compression algorithm, and Huffman coding.  Compression is generally
 considerably better than that achieved by more conventional
 LZ77/LZ78-based compressors, and approaches the performance of the PPM
 family of statistical compressors.
 .
 The archive file format of bzip2 (.bz2) is incompatible with that of its
 predecessor, bzip (.bz).
Homepage: http://www.bzip.org/

Package: libmagic1
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 3148
Maintainer: Christoph Biedl <debian.axhn@manchmal.in-ulm.de>
Architecture: armhf
Multi-Arch: same
Source: file
Version: 1:5.22+15-2+deb8u3
Depends: libc6 (>= 2.15), zlib1g (>= 1:1.1.4)
Pre-Depends: multiarch-support
Suggests: file
Conffiles:
 /etc/magic 272913026300e7ae9b5e2d51f138e674
 /etc/magic.mime 272913026300e7ae9b5e2d51f138e674
Description: File type determination library using "magic" numbers
 This library can be used to classify files according to magic
 number tests. It implements the core functionality of the file
 command.
Homepage: http://www.darwinsys.com/file/

Package: lsb-base
Status: install ok installed
Priority: required
Section: misc
Installed-Size: 72
Maintainer: Debian LSB Team <debian-lsb@lists.debian.org>
Architecture: all
Multi-Arch: foreign
Source: lsb
Version: 4.1+Debian13+rpi1+nmu1
Description: Linux Standard Base 4.1 init script functionality
 The Linux Standard Base (http://www.linuxbase.org/) is a standard
 core system that third-party applications written for Linux can
 depend upon.
 .
 This package only includes the init-functions shell library, which
 may be used by other packages' initialization scripts for console
 logging and other purposes.
Homepage: http://www.linuxfoundation.org/collaborate/workgroups/lsb

Package: netcat-openbsd
Status: install ok installed
Priority: important
Section: net
Installed-Size: 103
Maintainer: Aron Xu <aron@debian.org>
Architecture: armhf
Version: 1.105-7
Replaces: netcat (<< 1.10-35)
Provides: netcat
Depends: libbsd0 (>= 0.2.0), libc6 (>= 2.13-28)
Breaks: netcat (<< 1.10-35)
Description: TCP/IP swiss army knife
 A simple Unix utility which reads and writes data across network
 connections using TCP or UDP protocol.  It is designed to be a reliable
 "back-end" tool that can be used directly or easily driven by other
 programs and scripts. At the same time it is a feature-rich network
 debugging and exploration tool, since it can create almost any kind of
 connection you would need and has several interesting built-in
 capabilities.
 .
 This package contains the OpenBSD rewrite of netcat, including support
 for IPv6, proxies, and Unix sockets.

Package: rsync
Status: install ok installed
Priority: optional
Section: net
Installed-Size: 630
Maintainer: Paul Slootman <paul@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 3.1.1-3
Depends: libacl1 (>= 2.2.51-8), libattr1 (>= 1:2.4.46-8), libc6 (>= 2.15), libpopt0 (>= 1.14), lsb-base (>= 3.2-14), base-files (>= 4.0.1)
Suggests: openssh-client, openssh-server
Breaks: duplicity (<< 0.6.11)
Conffiles:
 /etc/default/rsync e0d7efac23e911c65f44b08de446e837
 /etc/init.d/rsync c5d89677f904551f5b192f35ad98d73c
Description: fast, versatile, remote (and local) file-copying tool
 rsync is a fast and versatile file-copying tool which can copy locally
 and to/from a remote host. It offers many options to control its behavior,
 and its remote-update protocol can minimize network traffic to make
 transferring updates between machines fast and efficient.
 .
 It is widely used for backups and mirroring and as an improved copy
 command for everyday use.
 .
 This package provides both the rsync command line tool and optional
 daemon functionality.
Homepage: http://rsync.samba.org/

Package: procps
Status: install ok installed
Priority: important
Section: admin
Installed-Size: 494
Maintainer: Craig Small <csmall@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 2:3.3.9-9
Provides: watch
Depends: libc6 (>= 2.15), libncurses5 (>= 5.5-5~), libncursesw5 (>= 5.6+20070908), libprocps3, libtinfo5, lsb-base (>= 3.0-10), initscripts
Recommends: psmisc
Breaks: guymager (<= 0.5.9-1), open-vm-tools (<= 2011.12.20-562307-1), xmem (<= 1.20-27.1)
Conflicts: pgrep (<< 3.3-5), w-bassman (<< 1.0-3)
Conffiles:
 /etc/init.d/procps 021482ebab1024f5ed76e650e5191e8f
 /etc/sysctl.conf 76c1d8285c578d5e827c3e07b9738112
 /etc/sysctl.d/README.sysctl 026e08987e39bd612ae311f2d9fc2089
Description: /proc file system utilities
 This package provides command line and full screen utilities for browsing
 procfs, a "pseudo" file system dynamically generated by the kernel to
 provide information about the status of entries in its process table
 (such as whether the process is running, stopped, or a "zombie").
 .
 It contains free, kill, pkill, pgrep, pmap, ps, pwdx, skill, slabtop,
 snice, sysctl, tload, top, uptime, vmstat, w, and watch.
Homepage: http://gitorious.org/procps

Package: usb-modeswitch-data
Status: install ok installed
Priority: extra
Section: comm
Installed-Size: 165
Maintainer: Didier Raboud <odyx@debian.org>
Architecture: all
Version: 20150115-1
Replaces: usb-modeswitch (<< 1.0.7-1), usb-modeswitch-data-packed
Provides: usb-modeswitch-data-packed
Recommends: usb-modeswitch (>= 2.2.0), udev (>= 0.140)
Breaks: usb-modeswitch (<< 2.2.0)
Conflicts: usb-modeswitch-data-packed
Description: mode switching data for usb-modeswitch
 Several new USB devices have their proprietary Windows drivers onboard,
 especially WAN dongles. When plugged in for the first time, they act
 like a flash storage and start installing the driver from there. If
 the driver is already installed, the storage device vanishes and
 a new device, such as an USB modem, shows up. This is called the
 "ZeroCD" feature.
 .
 On Debian, this is not needed, since the driver is included as a
 Linux kernel module, such as "usbserial". However, the device still
 shows up as "usb-storage" by default. usb-modeswitch solves that
 issue by sending the command which actually performs the switching
 of the device from "usb-storage" to "usbserial".
 .
 This package contains the commands data needed for usb-modeswitch.
Homepage: http://www.draisberghof.de/usb_modeswitch/

Package: libsoftware-license-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 497
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: all
Version: 0.103010-3
Depends: libdata-section-perl, libsub-install-perl, libtext-template-perl, perl
Description: module providing templated software licenses
 Software::License is a Perl module used by various tools for module building,
 installation, and distribution to provide a simple way of referencing popular
 free and open-source software licenses.
Homepage: https://metacpan.org/release/Software-License

Package: libsub-exporter-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 135
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: all
Version: 0.986-1
Depends: perl, libdata-optlist-perl, libsub-install-perl
Description: sophisticated exporter for custom-built routines
 When you use a perl module, first it is "required" function used, then its
 import method is called.
 .
 Sub::Exporter provides a sophisticated alternative to Exporter.pm.  It allows
 for renaming, currying/sub-generation etc.
 .
 Sub::Exporter builds a custom exporter which can then be installed into your
 module. It builds this method based on configuration passed to its
 setup_exporter method.
Homepage: https://metacpan.org/release/Sub-Exporter/

Package: libgssapi-krb5-2
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 326
Maintainer: Sam Hartman <hartmans@debian.org>
Architecture: armhf
Multi-Arch: same
Source: krb5
Version: 1.12.1+dfsg-19+deb8u2
Depends: libc6 (>= 2.4), libcomerr2 (>= 1.34), libk5crypto3 (>= 1.8+dfsg), libkeyutils1 (>= 1.4), libkrb5-3 (= 1.12.1+dfsg-19+deb8u2), libkrb5support0 (>= 1.12~alpha1+dfsg)
Pre-Depends: multiarch-support
Suggests: krb5-doc, krb5-user
Breaks: libgssglue1 (<< 0.2-2)
Conffiles:
 /etc/gss/mech.d/README 27e753ba1dc72900d2892b8efef6e35e
Description: MIT Kerberos runtime libraries - krb5 GSS-API Mechanism
 Kerberos is a system for authenticating users and services on a network.
 Kerberos is a trusted third-party service.  That means that there is a
 third party (the Kerberos server) that is trusted by all the entities on
 the network (users and services, usually called "principals").
 .
 This is the MIT reference implementation of Kerberos V5.
 .
 This package contains the runtime library for the MIT Kerberos
 implementation of GSS-API used by applications and Kerberos clients.
Homepage: http://web.mit.edu/kerberos/

Package: raspi-config
Status: install ok installed
Priority: extra
Section: utils
Installed-Size: 62
Maintainer: Serge Schneider <serge@raspberrypi.org>
Architecture: all
Version: 20170503
Depends: whiptail, parted, lua5.1, alsa-utils, psmisc
Recommends: triggerhappy
Conffiles:
 /etc/init.d/raspi-config ddad8bff3b372a8827ab7b01c0e1a2f7
 /etc/systemd/system/autologin@.service 1c384df7639a0390e93c2a394c382a4b
Description: Raspberry Pi configuration tool
 A simple configuration tool for common Raspberry Pi administrative tasks

Package: xauth
Status: install ok installed
Priority: optional
Section: x11
Installed-Size: 53
Maintainer: Debian X Strike Force <debian-x@lists.debian.org>
Architecture: armhf
Version: 1:1.0.9-1
Depends: libc6 (>= 2.4), libx11-6, libxau6, libxext6, libxmuu1
Description: X authentication utility
 xauth is a small utility to read and manipulate Xauthority files, which
 are used by servers and clients alike to control authentication and access
 to X sessions.

Package: libjim0.75
Status: install ok installed
Priority: extra
Section: libs
Installed-Size: 256
Maintainer: Didier Raboud <odyx@debian.org>
Architecture: armhf
Multi-Arch: same
Source: jimtcl
Version: 0.75-1
Depends: libc6 (>= 2.15)
Pre-Depends: multiarch-support
Description: small-footprint implementation of Tcl - shared library
 Jim is an opensource small-footprint implementation of the Tcl programming
 language. It implements a large subset of Tcl and adds new features like
 references with garbage collection, closures, built-in Object Oriented
 Programming system, Functional Programming commands, first-class arrays and
 UTF-8 support. All this with a binary size of about 100-200kB (depending upon
 selected options).
 .
 This package provides the libjim shared library.
Homepage: http://jim.tcl.tk/

Package: ssh
Status: install ok installed
Priority: extra
Section: net
Installed-Size: 128
Maintainer: Debian OpenSSH Maintainers <debian-ssh@lists.debian.org>
Architecture: all
Source: openssh
Version: 1:6.7p1-5+deb8u3
Depends: openssh-client (>= 1:6.7p1-5+deb8u3), openssh-server (>= 1:6.7p1-5+deb8u3)
Pre-Depends: dpkg (>= 1.17.5)
Description: secure shell client and server (metapackage)
 This metapackage is a convenient way to install both the OpenSSH client
 and the OpenSSH server. It provides nothing in and of itself, so you
 may remove it if nothing depends on it.
Homepage: http://www.openssh.org/

Package: perl
Status: install ok installed
Priority: standard
Section: perl
Installed-Size: 10774
Maintainer: Niko Tyni <ntyni@debian.org>
Architecture: armhf
Multi-Arch: allowed
Version: 5.20.2-3+deb8u7
Replaces: libarchive-tar-perl (<= 1.38-2), libcompress-raw-bzip2-perl, libcompress-raw-zlib-perl, libcompress-zlib-perl, libdigest-md5-perl, libdigest-sha-perl, libencode-perl, libio-compress-base-perl, libio-compress-bzip2-perl, libio-compress-perl, libio-compress-zlib-perl, libmime-base64-perl, libmodule-corelist-perl (<< 2.14-2), libstorable-perl, libsys-syslog-perl, libthreads-perl, libthreads-shared-perl, libtime-hires-perl, libtime-piece-perl, perl-base (<< 5.10.1-12), perl-doc (<< 5.8.0-1), perl-modules (<< 5.8.1-1)
Provides: data-dumper, libcompress-raw-bzip2-perl, libcompress-raw-zlib-perl, libcompress-zlib-perl, libdigest-md5-perl, libdigest-sha-perl, libencode-perl, libio-compress-base-perl, libio-compress-bzip2-perl, libio-compress-perl, libio-compress-zlib-perl, libmime-base64-perl, libstorable-perl, libsys-syslog-perl, libthreads-perl, libthreads-shared-perl, libtime-hires-perl, libtime-piece-perl, perl5
Depends: perl-base (= 5.20.2-3+deb8u7), perl-modules (>= 5.20.2-3+deb8u7), libbz2-1.0, libc6 (>= 2.11), libdb5.3, libgdbm3 (>= 1.8.3), zlib1g (>= 1:1.2.2.3)
Pre-Depends: dpkg (>= 1.17.17)
Recommends: netbase, rename
Suggests: perl-doc, libterm-readline-gnu-perl | libterm-readline-perl-perl, make
Breaks: dh-make-perl (<< 0.73-1), ftpmirror (<< 1.96+dfsg-13), libcompress-raw-bzip2-perl (<< 2.064), libcompress-raw-zlib-perl (<< 2.065), libcompress-zlib-perl (<< 2.064), libdigest-md5-perl (<< 2.53), libdigest-sha-perl (<< 5.88), libencode-perl (<< 2.63-1+deb8u1), libhtml-template-compiled-perl (<< 0.95-1), libio-compress-base-perl (<< 2.064), libio-compress-bzip2-perl (<< 2.064), libio-compress-perl (<< 2.064), libio-compress-zlib-perl (<< 2.064), libload-perl (<< 0.20-1), libmime-base64-perl (<< 3.14), libnet-jifty-perl (<< 0.14-1), libperl-apireference-perl (<< 0.09-1), libregexp-optimizer-perl (<< 0.15-3), libsoap-lite-perl (<< 0.712-4), libstorable-perl (<< 2.49.01), libsys-syslog-perl (<< 0.33), libthreads-perl (<< 1.93), libthreads-shared-perl (<< 1.46), libtime-hires-perl (<< 1.9726), libtime-piece-perl (<< 1.27), libxml-parser-lite-tree-perl (<< 0.14-1), libyaml-perl (<< 0.73-1), mrtg (<< 2.16.3-3.1), perl-doc (<< 5.20.2-1)
Conflicts: libjson-pp-perl (<< 2.27200-2)
Description: Larry Wall's Practical Extraction and Report Language
 Perl is a highly capable, feature-rich programming language with over
 20 years of development. Perl 5 runs on over 100 platforms from
 portables to mainframes. Perl is suitable for both rapid prototyping
 and large scale development projects.
 .
 Perl 5 supports many programming styles, including procedural,
 functional, and object-oriented. In addition to this, it is supported
 by an ever-growing collection of reusable modules which accelerate
 development. Some of these modules include Web frameworks, database
 integration, networking protocols, and encryption. Perl provides
 interfaces to C and C++ for custom extension development.
Homepage: http://dev.perl.org/perl5/

Package: libgpg-error0
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 426
Maintainer: Debian GnuPG Maintainers <pkg-gnupg-maint@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: libgpg-error
Version: 1.17-3
Depends: libc6 (>= 2.4)
Pre-Depends: multiarch-support
Description: library for common error values and messages in GnuPG components
 Library that defines common error values for all GnuPG
 components.  Among these are GPG, GPGSM, GPGME, GPG-Agent, libgcrypt,
 pinentry, SmartCard Daemon and possibly more in the future.
Homepage: http://www.gnupg.org/related_software/libgpg-error/

Package: avahi-daemon
Status: install ok installed
Priority: optional
Section: net
Installed-Size: 192
Maintainer: Utopia Maintenance Team <pkg-utopia-maintainers@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: foreign
Source: avahi
Version: 0.6.31-5
Depends: libavahi-common3 (>= 0.6.16), libavahi-core7 (>= 0.6.24), libc6 (>= 2.8), libcap2 (>= 1:2.10), libdaemon0 (>= 0.13), libdbus-1-3 (>= 1.1.1), libexpat1 (>= 2.0.1), init-system-helpers (>= 1.18~), adduser, dbus (>= 0.60), lsb-base (>= 3.0-6), bind9-host | host
Recommends: libnss-mdns
Suggests: avahi-autoipd
Conffiles:
 /etc/avahi/avahi-daemon.conf bd8d4eda789abe26c48c1f1f74d19551
 /etc/avahi/hosts 186990ae1edac95a88dbef6a36a07716
 /etc/dbus-1/system.d/avahi-dbus.conf 4b8ff37c10615ae704b7827a438ff534
 /etc/default/avahi-daemon 292bdbb95b392a71a0c363eb58b3a119
 /etc/init.d/avahi-daemon 7e648c77846d70c4ef1b49c0c4f7cfad
 /etc/network/if-up.d/avahi-daemon 6dbf1a91ab420a99d1205972d6401e67
 /etc/resolvconf/update-libc.d/avahi-daemon 2cf53ff5a00f9d1fed653a2913de5bc7
Description: Avahi mDNS/DNS-SD daemon
 Avahi is a fully LGPL framework for Multicast DNS Service Discovery.
 It allows programs to publish and discover services and hosts
 running on a local network with no specific configuration. For
 example you can plug into a network and instantly find printers to
 print to, files to look at and people to talk to.
 .
 This package contains the Avahi Daemon which represents your machine
 on the network and allows other applications to publish and resolve
 mDNS/DNS-SD records.
Homepage: http://avahi.org/

Package: plymouth
Status: install ok installed
Priority: optional
Section: misc
Installed-Size: 304
Maintainer: Laurent Bigonville <bigon@debian.org>
Architecture: armhf
Version: 0.9.2-3+rpi1
Replaces: plymouth-drm (<< 0.9.0-6~), plymouth-themes (<< 0.9.0-8~)
Depends: libc6 (>= 2.10), libdrm2 (>= 2.4.25), libplymouth4 (>= 0.9.2), initramfs-tools | dracut, init-system-helpers (>= 1.18)
Suggests: desktop-base, plymouth-themes
Breaks: plymouth-drm (<< 0.9.0-6~), plymouth-themes (<< 0.9.0-8~)
Conflicts: console-common
Conffiles:
 /etc/init.d/plymouth 7603d0f581e54fdbe31ad62cbb4cfd22
 /etc/init.d/plymouth-log 0f1be14b21796a952e115c03a86787e0
 /etc/plymouth/plymouthd.conf 5c2a5b4b4cb7cbbad0beaab8558200ce
Description: boot animation, logger and I/O multiplexer
 Plymouth provides a boot-time I/O multiplexing framework - the most obvious
 use for which is to provide an attractive graphical animation in place of
 the text messages that normally get shown during boot. (The messages are
 instead redirected to a logfile for later viewing.) However, in event-driven
 boot systems Plymouth can also usefully handle user interaction such as
 password prompts for encrypted file systems.
 .
 This package provides the basic framework, enabling a text-mode animation.
Homepage: http://www.freedesktop.org/wiki/Software/Plymouth

Package: libpython-stdlib
Status: install ok installed
Priority: optional
Section: python
Installed-Size: 30
Maintainer: Matthias Klose <doko@debian.org>
Architecture: armhf
Multi-Arch: same
Source: python-defaults
Version: 2.7.9-1
Depends: libpython2.7-stdlib (>= 2.7.9-1~)
Description: interactive high-level object-oriented language (default python version)
 Python, the high-level, interactive object oriented language,
 includes an extensive class library with lots of goodies for
 network programming, system administration, sounds and graphics.
 .
 This package is a dependency package, which depends on Debian's default
 Python version (currently v2.7).
Homepage: http://www.python.org/

Package: libtevent0
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 58
Maintainer: Debian Samba Maintainers <pkg-samba-maint@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: tevent
Version: 0.9.28-0+deb8u1
Depends: libc6 (>= 2.15), libtalloc2 (>= 2.1.0)
Pre-Depends: multiarch-support
Description: talloc-based event loop library - shared library
 tevent is a simple library that can handle the main event loop for an
 application. It supports three kinds of events: timed events, file
 descriptors becoming readable or writable and signals.
 .
 Talloc is used for memory management, both internally and for private
 data provided by users of the library.
 .
 This package provides the shared library file.
Homepage: http://tevent.samba.org/

Package: libfile-fcntllock-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 100
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: armhf
Source: libfile-fcntllock-perl (0.22-1)
Version: 0.22-1+b1
Depends: perl (>= 5.20.0-4), perlapi-5.20.0, libc6 (>= 2.4)
Description: Perl module for file locking with fcntl(2)
 File::FcntlLock is a Perl module to do file locking in an object oriented
 fashion using the fcntl(2) system call. This allows locks on parts of a file
 as well as on the whole file and overcomes some known problems with flock(2),
 on which Perl's flock() function is based.
 .
 Furthermore due to its design it supports reliable locking over NFS.
Homepage: https://metacpan.org/release/File-FcntlLock

Package: libalgorithm-merge-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 71
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: all
Version: 0.08-2
Depends: perl, libalgorithm-diff-perl
Description: Perl module for three-way merge of textual data
 Algorithm::Merge provides three-way merge and diff functions, complementing
 the functionality offered by Algorithm::Diff (libalgorithm-diff-perl). Given
 three sets of items, known as the original, left and right, this module can
 take a three-way difference or merge them. Taking a difference provides an
 array reference that is very similar to the behaviour of Algorithm::Diff. One
 can also implement custom conflict resolution using the CONFLICT callback.
Homepage: http://search.cpan.org/dist/Algorithm-Merge/

Package: nano
Status: install ok installed
Priority: important
Section: editors
Installed-Size: 1324
Maintainer: Jordi Mallach <jordi@debian.org>
Architecture: armhf
Version: 2.2.6-3
Replaces: pico
Provides: editor
Depends: dpkg (>= 1.15.4) | install-info, libc6 (>= 2.11), libncursesw5 (>= 5.6+20070908), libtinfo5
Suggests: spell
Breaks: alpine-pico (<= 2.00+dfsg-5)
Conflicts: pico
Conffiles:
 /etc/nanorc fc57b93c907fefbccf12317d40b4a204
Description: small, friendly text editor inspired by Pico
 GNU nano is an easy-to-use text editor originally designed as a replacement
 for Pico, the ncurses-based editor from the non-free mailer package Pine
 (itself now available under the Apache License as Alpine).
 .
 However, nano also implements many features missing in pico, including:
  - feature toggles;
  - interactive search and replace (with regular expression support);
  - go to line (and column) command;
  - auto-indentation and color syntax-highlighting;
  - filename tab-completion and support for multiple buffers;
  - full internationalization support.
Homepage: http://www.nano-editor.org/

Package: lua5.1
Status: install ok installed
Priority: optional
Section: interpreters
Installed-Size: 228
Maintainer: John V. Belmonte <jbelmonte@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 5.1.5-7.1
Provides: lua
Depends: libc6 (>= 2.11), libreadline6 (>= 6.0)
Description: Simple, extensible, embeddable programming language
 Lua is a powerful, light-weight programming language designed for extending
 applications.  The language engine is accessible as a library, having a C
 API which allows the application to exchange data with Lua programs and also
 to extend Lua with C functions.  Lua is also used as a general-purpose,
 stand-alone language through the simple command line interpreter provided.
 .
 This package contains the Lua command line interpreter and bytecode compiler.
 Install it if you are developing or using Lua scripts.
Homepage: http://www.lua.org

Package: pkg-config
Status: install ok installed
Priority: optional
Section: devel
Installed-Size: 95
Maintainer: Tollef Fog Heen <tfheen@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 0.28-1
Depends: libc6 (>= 2.4), libglib2.0-0 (>= 2.16.0)
Description: manage compile and link flags for libraries
 pkg-config is a system for managing library compile and link flags that
 works with automake and autoconf.
 .
 Increasingly libraries ship with ".pc" files that allow querying of the
 compiler and linker flags needed to use them through the pkg-config(1)
 program.
Homepage: http://pkg-config.freedesktop.org

Package: base-files
Essential: yes
Status: install ok installed
Priority: required
Section: admin
Installed-Size: 413
Maintainer: Santiago Vila <sanvila@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 8+rpi1
Replaces: base, dpkg (<= 1.15.0), miscutils
Provides: base
Pre-Depends: awk
Breaks: initscripts (<< 2.88dsf-13.3), sendfile (<< 2.1b.20080616-5.2~)
Conffiles:
 /etc/debian_version 7d853d51115a660afdd028c89a4f7761
 /etc/dpkg/origins/debian 731423fa8ba067262f8ef37882d1e742
 /etc/dpkg/origins/raspbian 759c556ddf77629de852f78389ad87ce
 /etc/host.conf 4eb63731c9f5e30903ac4fc07a7fe3d6
 /etc/issue 2cf1bb0be14146c214461ea6531f09a2
 /etc/issue.net 6df8f2e818bfeb64325ba8af86b29bb6
Description: Debian base system miscellaneous files
 This package contains the basic filesystem hierarchy of a Debian system, and
 several important miscellaneous files, such as /etc/debian_version,
 /etc/host.conf, /etc/issue, /etc/motd, /etc/profile, and others,
 and the text of several common licenses in use on Debian systems.

Package: libgmp10
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 454
Maintainer: Debian Science Team <debian-science-maintainers@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: gmp
Version: 2:6.0.0+dfsg-6+rpi1
Depends: libc6 (>= 2.7)
Pre-Depends: multiarch-support
Description: Multiprecision arithmetic library
 GNU MP is a programmer's library for arbitrary precision
 arithmetic (ie, a bignum package).  It can operate on signed
 integer, rational, and floating point numeric types.
 .
 It has a rich set of functions, and the functions have a regular
 interface.
Homepage: http://gmplib.org/

Package: sensible-utils
Status: install ok installed
Priority: required
Section: utils
Installed-Size: 110
Maintainer: Anibal Monsalve Salazar <anibal@debian.org>
Architecture: all
Multi-Arch: foreign
Version: 0.0.9
Replaces: debianutils (<= 2.32.3), manpages-pl (<= 20060617-3~)
Description: Utilities for sensible alternative selection
 This package provides a number of small utilities which are used
 by programs to sensibly select and spawn an appropriate browser,
 editor, or pager.
 .
 The specific utilities included are: sensible-browser sensible-editor
 sensible-pager

Package: libarchive-extract-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 105
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: all
Version: 0.72-1
Depends: perl (>= 5.13.6)
Description: generic archive extracting module
 Archive::Extract is a generic archive extraction mechanism.
 .
 It allows you to extract any archive file of the type .tar, .tar.gz, .gz, .Z,
 tar.bz2, .tbz, .bz2, .zip, .xz,, .txz, .tar.xz or .lzma without having to
 worry how it does so, or use different interfaces for each type by using
 either perl modules, or commandline tools on your system.
Homepage: https://metacpan.org/release/Archive-Extract/

Package: libisc-export95
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 313
Maintainer: LaMont Jones <lamont@debian.org>
Architecture: armhf
Source: bind9
Version: 1:9.9.5.dfsg-9+deb8u11
Depends: libc6 (>= 2.15)
Pre-Depends: multiarch-support
Description: Exported ISC Shared Library
 The Berkeley Internet Name Domain (BIND) implements an Internet domain
 name server.  BIND is the most widely-used name server software on the
 Internet, and is supported by the Internet Software Consortium, www.isc.org.
 .
 This package delivers the exported libisc shared library.

Package: module-init-tools
Status: install ok installed
Priority: extra
Section: admin
Installed-Size: 31
Maintainer: Marco d'Itri <md@linux.it>
Architecture: all
Source: kmod
Version: 18-3
Depends: libkmod2 (= 18-3), kmod
Pre-Depends: dpkg (>= 1.15.7.2)
Description: transitional dummy package (module-init-tools to kmod)
 This dummy package is provided to support the transition from
 module-init-tools to kmod and should be removed afterwards.

Package: libmodule-signature-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 108
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: all
Version: 0.73-1+deb8u2
Depends: perl
Recommends: gnupg | gnupg2
Description: module to manipulate CPAN SIGNATURE files
 Module::Signature is a Perl module that adds cryptographic authentications to
 CPAN distributions, via the special SIGNATURE file. It also includes various
 tools to sign distributions and to verify signatures and supports using many
 different cryptographic hashing algorithms.
Homepage: https://metacpan.org/release/Module-Signature/

Package: dpkg-dev
Status: install ok installed
Priority: optional
Section: utils
Installed-Size: 1791
Origin: debian
Maintainer: Dpkg Developers <debian-dpkg@lists.debian.org>
Bugs: debbugs://bugs.debian.org
Architecture: all
Multi-Arch: foreign
Source: dpkg
Version: 1.17.27
Replaces: manpages-it (<< 2.80-4)
Depends: libdpkg-perl (= 1.17.27), bzip2, xz-utils, patch (>= 2.7), make, binutils, base-files (>= 5.0.0)
Recommends: gcc | c-compiler, build-essential, fakeroot, gnupg | gnupg2, gpgv | gpgv2, libalgorithm-merge-perl
Suggests: debian-keyring
Breaks: devscripts (<< 2.14.10), dpkg-cross (<< 2.0.0)
Conffiles:
 /etc/dpkg/shlibs.default 1a2b9d0a869e2aa885ae3621c557fb95
 /etc/dpkg/shlibs.override 84b1e69080569cc5c613a50887af5200
Description: Debian package development tools
 This package provides the development tools (including dpkg-source)
 required to unpack, build and upload Debian source packages.
 .
 Most Debian source packages will require additional tools to build;
 for example, most packages need make and the C compiler gcc.
Homepage: https://wiki.debian.org/Teams/Dpkg

Package: libssh2-1
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 199
Maintainer: Mikhail Gusarov <dottedmag@debian.org>
Architecture: armhf
Multi-Arch: same
Source: libssh2
Version: 1.4.3-4.1+deb8u1
Depends: libc6 (>= 2.4), libgcrypt20 (>= 1.6.1), zlib1g (>= 1:1.1.4)
Pre-Depends: multiarch-support
Description: SSH2 client-side library
 libssh2 is a client-side C library implementing the SSH2 protocol.
 It supports regular terminal, SCP and SFTP (v1-v5) sessions;
 port forwarding, X11 forwarding; password, key-based and
 keyboard-interactive authentication.
 .
 This package contains the runtime library.
Homepage: http://libssh2.org/

Package: patch
Status: install ok installed
Priority: standard
Section: vcs
Installed-Size: 171
Maintainer: Laszlo Boszormenyi (GCS) <gcs@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 2.7.5-1
Depends: libc6 (>= 2.17)
Suggests: ed, diffutils-doc
Description: Apply a diff file to an original
 Patch will take a patch file containing any of the four forms
 of difference listing produced by the diff program and apply
 those differences to an original file, producing a patched
 version.
Homepage: http://savannah.gnu.org/projects/patch/

Package: libglib2.0-data
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 9045
Maintainer: Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>
Architecture: all
Multi-Arch: foreign
Source: glib2.0
Version: 2.42.1-1
Description: Common files for GLib library
 GLib is a library containing many useful C routines for things such
 as trees, hashes, lists, and strings.  It is a useful general-purpose
 C library used by projects such as GTK+, GIMP, and GNOME.
 .
 This package is needed for the runtime libraries to display messages in
 languages other than English.
Homepage: http://www.gtk.org/

Package: usb-modeswitch
Status: install ok installed
Priority: extra
Section: comm
Installed-Size: 116
Maintainer: Didier Raboud <odyx@debian.org>
Architecture: armhf
Version: 2.2.0+repack0-2
Depends: libc6 (>= 2.4), libjim0.75 (>= 0.72), libusb-1.0-0 (>= 2:1.0.8), usb-modeswitch-data (>= 20140529)
Suggests: comgt, wvdial
Breaks: usb-modeswitch-data (<< 20100127)
Conffiles:
 /etc/usb_modeswitch.conf b8fcd7f4e9e0173139b36cb56469377f
 /etc/init/usb-modeswitch-upstart.conf 8972963f876f7717c4c0f267de97b278
Description: mode switching tool for controlling "flip flop" USB devices
 Several new USB devices have their proprietary Windows drivers onboard,
 especially WAN dongles. When plugged in for the first time, they act
 like a flash storage and start installing the driver from there. If
 the driver is already installed, the storage device vanishes and
 a new device, such as an USB modem, shows up. This is called the
 "ZeroCD" feature.
 .
 On Debian, this is not needed, since the driver is included as a
 Linux kernel module, such as "usbserial". However, the device still
 shows up as "usb-storage" by default. usb-modeswitch solves that
 issue by sending the command which actually performs the switching
 of the device from "usb-storage" to "usbserial".
 .
 This package contains the binaries and the brother scripts.
Homepage: http://www.draisberghof.de/usb_modeswitch/

Package: passwd
Status: install ok installed
Priority: required
Section: admin
Installed-Size: 1862
Maintainer: Shadow package maintainers <pkg-shadow-devel@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: foreign
Source: shadow
Version: 1:4.2-3+deb8u4
Replaces: manpages-tr (<< 1.0.5), manpages-zh (<< 1.5.1-1)
Depends: libaudit1 (>= 1:2.2.1), libc6 (>= 2.8), libpam0g (>= 0.99.7.1), libselinux1 (>= 1.32), libsemanage1 (>= 2.0.3), libpam-modules, debianutils (>= 2.15.2)
Conffiles:
 /etc/cron.daily/passwd db990990933b6f56322725223f13c2bc
 /etc/default/useradd cc9f9a7713ab62a32cd38363d958f396
 /etc/pam.d/chfn 4d466e00a348ba426130664d795e8afa
 /etc/pam.d/chpasswd 9900720564cb4ee98b7da29e2d183cb2
 /etc/pam.d/chsh a6e9b589e90009334ffd030d819290a6
 /etc/pam.d/newusers 1454e29bfa9f2a10836563e76936cea5
 /etc/pam.d/passwd eaf2ad85b5ccd06cceb19a3e75f40c63
Description: change and administer password and group data
 This package includes passwd, chsh, chfn, and many other programs to
 maintain password and group data.
 .
 Shadow passwords are supported.  See /usr/share/doc/passwd/README.Debian
Homepage: http://pkg-shadow.alioth.debian.org/

Package: init-system-helpers
Status: install ok installed
Priority: extra
Section: admin
Installed-Size: 97
Maintainer: pkg-systemd-maintainers <pkg-systemd-maintainers@lists.alioth.debian.org>
Architecture: all
Multi-Arch: foreign
Version: 1.22
Depends: perl-base (>= 5.20.1-3)
Breaks: systemd (<< 44-12)
Description: helper tools for all init systems
 This package contains helper tools that are necessary for switching between
 the various init systems that Debian contains (e.g. sysvinit, upstart,
 systemd). An example is deb-systemd-helper, a script that enables systemd unit
 files without depending on a running systemd.
 .
 While this package is maintained by pkg-systemd-maintainers, it is NOT
 specific to systemd at all. Maintainers of other init systems are welcome to
 include their helpers in this package.

Package: libpod-readme-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 36
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: all
Version: 0.11-1
Depends: perl, libregexp-common-perl
Description: Perl module to convert POD to README file
 Pod::Readme is a subclass of Pod::PlainText which provides
 additional POD markup for generating README files
 .
 This module allows authors to mark portions of the POD to
 be included only in, or to be excluded from the README file.
 It also allows you to include portions of another file (such
 as a separate ChangeLog).
Homepage: http://search.cpan.org/dist/Pod-Readme/

Package: openssh-server
Status: install ok installed
Priority: optional
Section: net
Installed-Size: 801
Maintainer: Debian OpenSSH Maintainers <debian-ssh@lists.debian.org>
Architecture: armhf
Multi-Arch: foreign
Source: openssh
Version: 1:6.7p1-5+deb8u3
Replaces: ssh, ssh-krb5
Provides: ssh-server
Depends: libc6 (>= 2.17), libcomerr2 (>= 1.01), libgssapi-krb5-2 (>= 1.12.1+dfsg-2), libkrb5-3 (>= 1.6.dfsg.2), libpam0g (>= 0.99.7.1), libselinux1 (>= 1.32), libssl1.0.0 (>= 1.0.1), libwrap0 (>= 7.6-4~), zlib1g (>= 1:1.1.4), debconf (>= 0.5) | debconf-2.0, init-system-helpers (>= 1.18~), openssh-client (= 1:6.7p1-5+deb8u3), libpam-runtime (>= 0.76-14), libpam-modules (>= 0.72-9), adduser (>= 3.9), dpkg (>= 1.9.0), lsb-base (>= 4.1+Debian3), procps, openssh-sftp-server
Recommends: xauth, ncurses-term
Suggests: ssh-askpass, rssh, molly-guard, ufw, monkeysphere
Conflicts: sftp, ssh-socks, ssh2
Conffiles:
 /etc/default/ssh 500e3cf069fe9a7b9936108eb9d9c035
 /etc/init.d/ssh aca247a51227a8f8b37a8c2a4a703571
 /etc/init/ssh.conf 9e5ed011987e63f8035fb847170dfa3f
 /etc/network/if-up.d/openssh-server 615af9ea3307b85023a35f4ed3c8ff96
 /etc/pam.d/sshd 8b4c7a12b031424b2a9946881da59812
 /etc/ufw/applications.d/openssh-server 486b78d54b93cc9fdc950c1d52ff479e
Description: secure shell (SSH) server, for secure access from remote machines
 This is the portable version of OpenSSH, a free implementation of
 the Secure Shell protocol as specified by the IETF secsh working
 group.
 .
 Ssh (Secure Shell) is a program for logging into a remote machine
 and for executing commands on a remote machine.
 It provides secure encrypted communications between two untrusted
 hosts over an insecure network. X11 connections and arbitrary TCP/IP
 ports can also be forwarded over the secure channel.
 It can be used to provide applications with a secure communication
 channel.
 .
 This package provides the sshd server.
 .
 In some countries it may be illegal to use any encryption at all
 without a special permit.
 .
 sshd replaces the insecure rshd program, which is obsolete for most
 purposes.
Homepage: http://www.openssh.org/

Package: libusb-1.0-0
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 94
Maintainer: Aurelien Jarno <aurel32@debian.org>
Architecture: armhf
Multi-Arch: same
Source: libusb-1.0
Version: 2:1.0.19-1
Depends: libc6 (>= 2.17), libudev1 (>= 183)
Pre-Depends: multiarch-support
Description: userspace USB programming library
 Library for programming USB applications without the knowledge
 of Linux kernel internals.
 .
 This package contains what you need to run programs that use this
 library.
Homepage: http://www.linux-usb.org/

Package: libalgorithm-diff-xs-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 19
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: armhf
Source: libalgorithm-diff-xs-perl (0.04-3)
Version: 0.04-3+b1
Depends: perl (>= 5.20.0-4), perlapi-5.20.0, libc6 (>= 2.4), libalgorithm-diff-perl
Description: module to find differences between files (XS accelerated)
 Algorithm::Diff::XS is a Perl diff utility module based on Joe Schaefer's
 excellent but not very well-known Algorithm::LCS module, with a drop-in
 interface identical to Algorithm::Diff.
 .
 Note that only the LCSidx function is optimized in XS at the moment, which
 means only compact_diff will get significantly faster for large data sets,
 while diff and sdiff will run in identical speed as Algorithm::Diff.
Homepage: https://metacpan.org/release/Algorithm-Diff-XS

Package: openssh-sftp-server
Status: install ok installed
Priority: optional
Section: net
Installed-Size: 77
Maintainer: Debian OpenSSH Maintainers <debian-ssh@lists.debian.org>
Architecture: armhf
Source: openssh
Version: 1:6.7p1-5+deb8u3
Replaces: openssh-server (<< 1:6.5p1-5)
Depends: libc6 (>= 2.17), openssh-client (= 1:6.7p1-5+deb8u3)
Recommends: openssh-server | ssh-server
Breaks: openssh-server (<< 1:6.5p1-5)
Enhances: openssh-server, ssh-server
Description: secure shell (SSH) sftp server module, for SFTP access from remote machines
 This is the portable version of OpenSSH, a free implementation of
 the Secure Shell protocol as specified by the IETF secsh working
 group.
 .
 Ssh (Secure Shell) is a program for logging into a remote machine
 and for executing commands on a remote machine.
 It provides secure encrypted communications between two untrusted
 hosts over an insecure network. X11 connections and arbitrary TCP/IP
 ports can also be forwarded over the secure channel.
 It can be used to provide applications with a secure communication
 channel.
 .
 This package provides the SFTP server module for the SSH server. It
 is needed if you want to access your SSH server with SFTP. The SFTP
 server module also works with other SSH daemons like dropbear.
Homepage: http://www.openssh.org/

Package: ncurses-base
Essential: yes
Status: install ok installed
Priority: required
Section: misc
Installed-Size: 371
Maintainer: Craig Small <csmall@debian.org>
Architecture: all
Multi-Arch: foreign
Source: ncurses
Version: 5.9+20140913-1
Provides: ncurses-runtime
Breaks: ncurses-term (<< 5.7+20100313-3)
Conflicts: ncurses, ncurses-runtime
Conffiles:
 /etc/terminfo/README 45b6df19fb5e21f55717482fa7a30171
Description: basic terminal type definitions
 The ncurses library routines are a terminal-independent method of
 updating character screens with reasonable optimization.
 .
 This package contains terminfo data files to support the most common types of
 terminal, including ansi, dumb, linux, rxvt, screen, sun, vt100, vt102, vt220,
 vt52, and xterm.
Homepage: http://invisible-island.net/ncurses/

Package: libc-bin
Essential: yes
Status: install ok installed
Priority: required
Section: libs
Installed-Size: 2917
Maintainer: GNU Libc Maintainers <debian-glibc@lists.debian.org>
Architecture: armhf
Multi-Arch: foreign
Source: glibc
Version: 2.19-18+deb8u9
Replaces: libc0.1, libc0.3, libc6, libc6.1
Depends: libc6 (>> 2.19), libc6 (<< 2.20)
Breaks: libc0.1 (<< 2.10), libc0.3 (<< 2.10), libc6 (<< 2.10), libc6.1 (<< 2.10)
Conffiles:
 /etc/bindresvport.blacklist 4c09213317e4e3dd3c71d74404e503c5
 /etc/default/nss d6d5d6f621fb3ead2548076ce81e309c
 /etc/gai.conf 28fa76ff5a9e0566eaa1e11f1ce51f09
 /etc/ld.so.conf 4317c6de8564b68d628c21efa96b37e4
 /etc/ld.so.conf.d/libc.conf d4d833fd095fb7b90e1bb4a547f16de6
Description: GNU C Library: Binaries
 This package contains utility programs related to the GNU C Library.
 .
  * catchsegv: catch segmentation faults in programs
  * getconf: query system configuration variables
  * getent: get entries from administrative databases
  * iconv, iconvconfig: convert between character encodings
  * ldd, ldconfig: print/configure shared library dependencies
  * locale, localedef: show/generate locale definitions
  * tzselect, zdump, zic: select/dump/compile time zones
Homepage: http://www.gnu.org/software/libc/libc.html

Package: libaio1
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 13
Maintainer: Guillem Jover <guillem@debian.org>
Architecture: armhf
Multi-Arch: same
Source: libaio
Version: 0.3.110-1
Depends: libc6 (>= 2.4)
Pre-Depends: multiarch-support
Description: Linux kernel AIO access library - shared library
 This library enables userspace to use Linux kernel asynchronous I/O
 system calls, important for the performance of databases and other
 advanced applications.
Homepage: http://www.kernel.org/pub/linux/libs/aio/

Package: libsemanage1
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 193
Maintainer: Debian SELinux maintainers <selinux-devel@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: libsemanage
Version: 2.3-1
Depends: libsemanage-common (= 2.3-1), libaudit1 (>= 1:2.2.1), libbz2-1.0, libc6 (>= 2.8), libselinux1 (>= 2.1.12), libsepol1 (>= 2.1.4), libustr-1.0-1 (>= 1.0.4)
Pre-Depends: multiarch-support
Description: SELinux policy management library
 This package provides the shared libraries for SELinux policy management.
 It uses libsepol for binary policy manipulation and libselinux for
 interacting with the SELinux system.  It also exec's helper programs
 for loading policy and for checking whether the file_contexts
 configuration is valid (load_policy and setfiles from
 policycoreutils) presently, although this may change at least for the
 bootstrapping case
 .
 Security-enhanced Linux is a patch of the Linux kernel and a
 number of utilities with enhanced security functionality designed to
 add mandatory access controls to Linux.  The Security-enhanced Linux
 kernel contains new architectural components originally developed to
 improve the security of the Flask operating system. These
 architectural components provide general support for the enforcement
 of many kinds of mandatory access control policies, including those
 based on the concepts of Type Enforcement, Role-based Access
 Control, and Multi-level Security.
Homepage: http://userspace.selinuxproject.org/

Package: libserf-1-1
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 101
Maintainer: Peter Samuelson <peter@p12n.org>
Architecture: armhf
Multi-Arch: same
Source: serf
Version: 1.3.8-1
Depends: libapr1 (>= 1.4.8-2~), libaprutil1 (>= 1.2.7+dfsg), libc6 (>= 2.4), libgssapi-krb5-2 (>= 1.10+dfsg~), libssl1.0.0 (>= 1.0.0), zlib1g (>= 1:1.1.4)
Pre-Depends: multiarch-support
Description: high-performance asynchronous HTTP client library
 serf library is a C-based HTTP client library built upon the Apache
 Portable Runtime (APR) library.  It multiplexes connections, running the
 read/write communication asynchronously.  Memory copies and
 transformations are kept to a minimum to provide high performance
 operation.
Homepage: http://code.google.com/p/serf/

Package: firmware-libertas
Status: install ok installed
Priority: optional
Section: non-free/kernel
Installed-Size: 5010
Maintainer: Debian Kernel Team <debian-kernel@lists.debian.org>
Architecture: all
Multi-Arch: foreign
Source: firmware-nonfree
Version: 0.43+rpi5
Replaces: libertas-firmware
Provides: libertas-firmware
Suggests: initramfs-tools
Breaks: libertas-firmware (<< 9.70.7.p0.0-2)
Description: Binary firmware for Marvell Libertas 8xxx wireless cards
 This package contains the binary firmware for wireless network cards with
 Marvell Libertas 8xxx chips supported by the libertas_cs, libertas_sdio,
 libertas_spi, libertas_tf_usb, mwifiex_sdio, mwifiex_usb, mwl8k and
 usb8xxx drivers.
 .
 Contents:
  * USB8388 'Thinfirm' firmware (lbtf_usb.bin)
  * CF8381 main code (libertas/cf8381.bin)
  * CF8381 boot code (libertas/cf8381_helper.bin)
  * CF8385 main code (libertas/cf8385.bin, libertas_cs.fw)
  * CF8385 boot code (libertas/cf8385_helper.bin, libertas_cs_helper.fw)
  * GSPI8686 main code, version 9.x (libertas/gspi8686_v9.bin,
    libertas/gspi8686.bin)
  * GSPI8686 boot code, version 9.x (libertas/gspi8686_v9_helper.bin,
    libertas/gspi8686_hlp.bin)
  * GSPI8688 main code (libertas/gspi8688.bin)
  * GSPI8688 boot code (libertas/gspi8688_helper.bin)
  * SD8385 main code (libertas/sd8385.bin, sd8385.bin)
  * SD8385 boot code (libertas/sd8385_helper.bin, sd8385_helper.bin)
  * SD8686 main code, version 8.x (libertas/sd8686_v8.bin, sd8686.bin)
  * SD8686 boot code, version 8.x (libertas/sd8686_v8_helper.bin,
    sd8686_helper.bin)
  * SD8686 main code, version 9.x (libertas/sd8686_v9.bin)
  * SD8686 boot code, version 9.x (libertas/sd8686_v9_helper.bin)
  * USB8388 OLPC firmware, version 5.110.22.p23
    (libertas/usb8388_olpc.bin)
  * USB8388 firmware, version 5.x (libertas/usb8388_v5.bin, usb8388.bin)
  * USB8388 firmware, version 9.x (libertas/usb8388_v9.bin)
  * USB8682 firmware (libertas/usb8682.bin)
  * PCIE8897 firmware, version 15.69.2.p11 (WLAN) / 15.28.2.p11 (BT)
    (mrvl/pcie8897_uapsta.bin)
  * SD8688 main code (mrvl/sd8688.bin, sd8688.bin, libertas/sd8688.bin)
  * SD8688 boot code (mrvl/sd8688_helper.bin, sd8688_helper.bin,
    libertas/sd8688_helper.bin)
  * SD8787 firmware, version 14.66.9.p96 (mrvl/sd8787_uapsta.bin)
  * SD8797 firmware, version 14.66.11.p151 (mrvl/sd8797_uapsta.bin)
  * SD8897 firmware, version 15.69.2.p11 (WLAN) / 15.28.2.p11 (BT)
    (mrvl/sd8897_uapsta.bin)
  * USB8797 firmware, version 14.69.11.p179 (mrvl/usb8797_uapsta.bin)
  * MWL8366 main code (mwl8k/fmimage_8366.fw)
  * MWL8366 AP-mode main code (mwl8k/fmimage_8366_ap-2.fw)
  * MWL8366 AP-mode main code, version 5.2.8.16
    (mwl8k/fmimage_8366_ap-3.fw)
  * MWL8687 main code (mwl8k/fmimage_8687.fw)
  * MWL8764 AP-mode firmware, version 7.4.0.9
    (mwl8k/fmimage_8764_ap-1.fw)
  * MWL8366 boot code (mwl8k/helper_8366.fw)
  * MWL8687 boot code (mwl8k/helper_8687.fw)
Homepage: http://git.kernel.org/?p=linux/kernel/git/firmware/linux-firmware.git

Package: libfreetype6-dev
Status: install ok installed
Priority: optional
Section: libdevel
Installed-Size: 3749
Maintainer: Steve Langasek <vorlon@debian.org>
Architecture: armhf
Source: freetype
Version: 2.6-2rpi1rpi1g
Depends: libfreetype6 (= 2.6-2rpi1rpi1g), libc6-dev | libc-dev, zlib1g-dev | libz-dev, libpng-dev
Description: FreeType 2 font engine, development files
 The FreeType project is a team of volunteers who develop free,
 portable and high-quality software solutions for digital typography.
 They specifically target embedded systems and focus on bringing small,
 efficient and ubiquitous products.
 .
 This package contains all supplementary files (static library, headers
 and documentation) you need to develop your own programs using the
 FreeType 2 library.
Homepage: http://www.freetype.org

Package: alsa-utils
Status: install ok installed
Priority: optional
Section: sound
Installed-Size: 1805
Maintainer: Debian ALSA Maintainers <pkg-alsa-devel@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 1.0.28-1
Provides: audio-mixer
Depends: lsb-base (>= 3.0-9), kmod (>= 17-1~), whiptail | dialog, libasound2 (>= 1.0.27), libc6 (>= 2.15), libncursesw5 (>= 5.6+20080119), libsamplerate0 (>= 0.1.7), libtinfo5
Conffiles:
 /etc/init.d/alsa-utils f7d21c215b2e784d8ab51df0d1ade809
Description: Utilities for configuring and using ALSA
 Included tools:
  - alsactl: advanced controls for ALSA sound drivers
  - alsaloop: create loopbacks between PCM capture and playback devices
  - alsamixer: curses mixer
  - alsaucm: alsa use case manager
  - amixer: command line mixer
  - amidi: read from and write to ALSA RawMIDI ports
  - aplay, arecord: command line playback and recording
  - aplaymidi, arecordmidi: command line MIDI playback and recording
  - aconnect, aseqnet, aseqdump: command line MIDI sequencer control
  - iecset: set or dump IEC958 status bits
  - speaker-test: speaker test tone generator
 .
 ALSA is the Advanced Linux Sound Architecture.
Homepage: http://www.alsa-project.org/

Package: autotools-dev
Status: install ok installed
Priority: optional
Section: devel
Installed-Size: 129
Maintainer: Henrique de Moraes Holschuh <hmh@debian.org>
Architecture: all
Multi-Arch: foreign
Version: 20140911.1
Enhances: cdbs, debhelper
Description: Update infrastructure for config.{guess,sub} files
 This package installs an up-to-date version of config.guess and
 config.sub, used by the automake and libtool packages.  It provides
 the canonical copy of those files for other packages as well.
 .
 It also documents in /usr/share/doc/autotools-dev/README.Debian.gz
 best practices and guidelines for using autoconf, automake and
 friends on Debian packages.  This is a must-read for any developers
 packaging software that uses the GNU autotools, or GNU gettext.
 .
 Additionally this package provides seamless integration into Debhelper
 or CDBS, allowing maintainers to easily update config.{guess,sub} files
 in their packages.
Homepage: http://savannah.gnu.org/projects/config/

Package: udev
Status: install ok installed
Priority: important
Section: admin
Installed-Size: 5806
Maintainer: Debian systemd Maintainers <pkg-systemd-maintainers@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: foreign
Source: systemd
Version: 215-17+deb8u7
Depends: libacl1 (>= 2.2.51-8), libblkid1 (>= 2.19.1), libc6 (>= 2.17), libkmod2 (>= 5~), libselinux1 (>= 2.0.65), libudev1 (= 215-17+deb8u7), adduser, lsb-base (>= 3.0-6), util-linux (>= 2.16), procps
Pre-Depends: debconf (>= 1.4.69) | debconf-2.0
Breaks: consolekit (<< 0.4.6-1), kmod (<< 14), plymouth (<< 0.9.0-7), systemd (<< 215-1)
Conffiles:
 /etc/init.d/udev 988e81a81706a99e7f4b83988b386b00
 /etc/init.d/udev-finish fd3ce194c134bcd790681ea487b19126
 /etc/init/udev-fallback-graphics.conf b8bfe7164e10cd0e53494b243c5728b1
 /etc/init/udev-finish.conf 089140a32d519840674be9a274da1a42
 /etc/init/udev.conf 41c0081f3a830e0902aaff76a53edf98
 /etc/init/udevmonitor.conf b541dfb5aa4958e9a5336ecaec00ca15
 /etc/init/udevtrigger.conf 651ff2421dde80be7ce7ccbf7fa8cf18
 /etc/modprobe.d/fbdev-blacklist.conf 0b9c466830040ec52986cc3ea117bef5
 /etc/udev/udev.conf ae415f84e2967eff580089fb08aa0a61
Description: /dev/ and hotplug management daemon
 udev is a daemon which dynamically creates and removes device nodes from
 /dev/, handles hotplug events and loads drivers at boot time.
Homepage: http://www.freedesktop.org/wiki/Software/systemd

Package: libnettle4
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 291
Maintainer: Magnus Holmgren <holmgren@debian.org>
Architecture: armhf
Multi-Arch: same
Source: nettle
Version: 2.7.1-5+deb8u2
Depends: libc6 (>= 2.4)
Pre-Depends: multiarch-support
Description: low level cryptographic library (symmetric and one-way cryptos)
 Nettle is a cryptographic library that is designed to fit easily in more or
 less any context: In crypto toolkits for object-oriented languages (C++,
 Python, Pike, ...), in applications like LSH or GNUPG, or even in kernel
 space.
 .
 It tries to solve a problem of providing a common set of cryptographic
 algorithms for higher-level applications by implementing a
 context-independent set of cryptographic algorithms. In that light, Nettle
 doesn't do any memory allocation or I/O, it simply provides the
 cryptographic algorithms for the application to use in any environment and
 in any way it needs.
 .
 This package contains the symmetric and one-way cryptographic
 algorithms. To avoid having this package depend on libgmp, the
 asymmetric cryptos reside in a separate library, libhogweed.
Homepage: http://www.lysator.liu.se/~nisse/nettle/

Package: iptables
Status: install ok installed
Priority: important
Section: net
Installed-Size: 1107
Maintainer: Laurence J. Lane <ljlane@debian.org>
Architecture: armhf
Version: 1.4.21-2
Depends: libc6 (>= 2.15), libnfnetlink0, libxtables10 (= 1.4.21-2)
Description: administration tools for packet filtering and NAT
 iptables is the userspace command line program used to configure
 the Linux packet filtering ruleset. It is targeted towards system
 administrators. Since Network Address Translation is also configured
 from the packet filter ruleset, iptables is used for this, too. The
 iptables package also includes ip6tables. ip6tables is used for
 configuring the IPv6 packet filter
Homepage: http://www.netfilter.org/

Package: libldap-2.4-2
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 404
Maintainer: Debian OpenLDAP Maintainers <pkg-openldap-devel@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: openldap
Version: 2.4.40+dfsg-1+deb8u2
Replaces: libldap-2.3-0, libldap2
Depends: libc6 (>= 2.12), libgnutls-deb0-28 (>= 3.3.0), libsasl2-2
Pre-Depends: multiarch-support
Conflicts: ldap-utils (<= 2.1.23-1)
Conffiles:
 /etc/ldap/ldap.conf 0b3f4d19d88498314478273ce10b0a70
Description: OpenLDAP libraries
 These are the run-time libraries for the OpenLDAP (Lightweight Directory
 Access Protocol) servers and clients.
Homepage: http://www.openldap.org/

Package: luajit
Status: install ok installed
Priority: optional
Section: interpreters
Installed-Size: 369
Maintainer: Enrico Tassi <gareuselesinge@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 2.0.3+dfsg-3
Depends: libc6 (>= 2.4), libgcc1 (>= 1:4.4.0), libluajit-5.1-common (= 2.0.3+dfsg-3)
Pre-Depends: multiarch-support
Description: Just in time compiler for Lua programming language version 5.1
 LuaJIT implements the full set of language features defined by Lua 5.1. The
 virtual machine (VM) is API- and ABI-compatible to the standard Lua interpreter
 and can be deployed as a drop-in replacement.
 .
 This package contains the standalone interpreter/jitter that can be used
 as a replacement for the standard lua5.1 interpreter.
Homepage: http://luajit.org

Package: kbd
Status: install ok installed
Priority: optional
Section: utils
Installed-Size: 1180
Maintainer: Console utilities maintainers <pkg-kbd-devel@lists.alioth.debian.org>
Architecture: armhf
Version: 1.15.5-2
Provides: console-utilities
Depends: libc6 (>= 2.7), lsb-base (>= 3.0-10)
Recommends: console-setup | console-data
Conflicts: console-utilities
Conffiles:
 /etc/init.d/kbd 7742d1e18a9cb625f9c838668fa1ab4e
 /etc/kbd/config 7675e7d682fcc2633d00990fc1a38c29
 /etc/kbd/remap 2f1f15d62b45ab43c04b3ddbfcf591ec
Description: Linux console font and keytable utilities
 This package allows you to set up the Linux console, change the font,
 resize text mode virtual consoles and remap the keyboard.
 .
 You will probably want to install a set of data files, such as the one
 in the “console-data” package.

Package: libtirpc1
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 168
Maintainer: Anibal Monsalve Salazar <anibal@debian.org>
Architecture: armhf
Multi-Arch: same
Source: libtirpc
Version: 0.2.5-1+deb8u1
Depends: libc6 (>= 2.16), libcomerr2 (>= 1.01), libgssapi-krb5-2 (>= 1.10+dfsg~), libk5crypto3 (>= 1.6.dfsg.2), libkrb5-3 (>= 1.6.dfsg.2)
Pre-Depends: multiarch-support
Breaks: nfs-common (<< 1:1.2.8-7), nfs-kernel-server (<< 1:1.2.8-7)
Conffiles:
 /etc/netconfig ca8db53e3af4d735335c2607d21c7195
Description: transport-independent RPC library
 This package contains a port of Sun's transport-independent RPC library to
 Linux. The library is intended as a replacement for the RPC code in the GNU C
 library, providing among others support for RPC (and in turn, NFS) over IPv6.
Homepage: http://sourceforge.net/projects/libtirpc

Package: sysvinit-utils
Essential: yes
Status: install ok installed
Priority: required
Section: admin
Installed-Size: 130
Maintainer: Debian sysvinit maintainers <pkg-sysvinit-devel@lists.alioth.debian.org>
Architecture: armhf
Source: sysvinit
Version: 2.88dsf-59
Replaces: last, sysvinit (<= 2.86.ds1-65)
Depends: libc6 (>= 2.7), libselinux1 (>= 1.32), startpar
Suggests: bootlogd, sash
Breaks: upstart (<< 1.5-0ubuntu5)
Conflicts: chkconfig (<< 11.0-79.1-2), last, startpar (<< 0.58-2), sysvconfig
Description: System-V-like utilities
 This package contains the important System-V-like utilities.
 .
 Specifically, this package includes:
 killall5, last, lastb, mesg, pidof, service, sulogin
Homepage: http://savannah.nongnu.org/projects/sysvinit

Package: xz-utils
Status: install ok installed
Priority: required
Section: utils
Installed-Size: 466
Maintainer: Jonathan Nieder <jrnieder@gmail.com>
Architecture: armhf
Multi-Arch: foreign
Version: 5.1.1alpha+20120614-2
Replaces: lzip (<< 1.8~rc2), xz-lzma
Provides: lzma
Depends: libc6 (>= 2.13-28), libgcc1 (>= 1:4.4.0), liblzma5 (>= 5.1.1alpha+20120614)
Breaks: lzip (<< 1.8~rc2)
Conflicts: lzma (<< 9.22-1), xz-lzma
Description: XZ-format compression utilities
 XZ is the successor to the Lempel-Ziv/Markov-chain Algorithm
 compression format, which provides memory-hungry but powerful
 compression (often better than bzip2) and fast, easy decompression.
 .
 This package provides the command line tools for working with XZ
 compression, including xz, unxz, xzcat, xzgrep, and so on. They can
 also handle the older LZMA format, and if invoked via appropriate
 symlinks will emulate the behavior of the commands in the lzma
 package.
 .
 The XZ format is similar to the older LZMA format but includes some
 improvements for general use:
 .
  * 'file' magic for detecting XZ files;
  * crc64 data integrity check;
  * limited random-access reading support;
  * improved support for multithreading (not used in xz-utils);
  * support for flushing the encoder.
Homepage: http://tukaani.org/xz/

Package: libtext-iconv-perl
Status: install ok installed
Priority: required
Section: perl
Installed-Size: 26
Maintainer: Anibal Monsalve Salazar <anibal@debian.org>
Architecture: armhf
Source: libtext-iconv-perl (1.7-5)
Version: 1.7-5+b5
Depends: libc6 (>= 2.4), perl-base (>= 5.20.0-4), perlapi-5.20.0
Description: converts between character sets in Perl
 The iconv() family of functions from XPG4 defines an API for converting
 between character sets (e.g. UTF-8 to Latin1, EBCDIC to ASCII). They
 are provided by libc6.
 .
 This package allows access to them from Perl via the Text::Iconv
 package.
Homepage: http://search.cpan.org/search?module=Text::Iconv

Package: libaprutil1
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 185
Maintainer: Debian Apache Maintainers <debian-apache@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: apr-util
Version: 1.5.4-1
Depends: libapr1 (>= 1.4.8-2~), libc6 (>= 2.4), libdb5.3, libexpat1 (>= 2.0.1), libssl1.0.0 (>= 1.0.0), libuuid1 (>= 2.16)
Pre-Depends: multiarch-support
Breaks: libapr1 (<< 1.4.8-2~)
Description: Apache Portable Runtime Utility Library
 APR is Apache's Portable Runtime Library, designed to be a support library
 that provides a predictable and consistent interface to underlying
 platform-specific implementations.
 .
 APR Util is a utilities library implemented on top of apr, providing database
 access, xml parsing, and other useful functionality.
Homepage: http://apr.apache.org/

Package: libheimbase1-heimdal
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 122
Maintainer: Brian May <bam@debian.org>
Architecture: armhf
Multi-Arch: same
Source: heimdal
Version: 1.6~rc2+dfsg-9+rpi1
Depends: libc6 (>= 2.8)
Pre-Depends: multiarch-support
Description: Heimdal Kerberos - Base library
 Heimdal is a free implementation of Kerberos 5 that aims to be
 compatible with MIT Kerberos.
 .
 This package contains the base library.
Homepage: http://www.h5l.org/

Package: raspberrypi-kernel
Status: hold ok installed
Priority: extra
Section: kernel
Installed-Size: 103825
Maintainer: Serge Schneider <serge@raspberrypi.org>
Architecture: armhf
Source: raspberrypi-firmware
Version: 1.20160523-1
Replaces: raspberrypi-bootloader (<< 1.20160324-1)
Provides: linux-image
Breaks: raspberrypi-bootloader (<< 1.20160324-1)
Description: Raspberry Pi bootloader
 This package contains the Raspberry Pi Linux kernel.
Homepage: https://github.com/raspberrypi/firmware

Package: libapt-inst1.5
Status: install ok installed
Priority: important
Section: libs
Installed-Size: 340
Maintainer: APT Development Team <deity@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: apt
Version: 1.0.9.8.4
Depends: libapt-pkg4.12 (>= 0.8.16~exp9), libc6 (>= 2.4), libgcc1 (>= 1:4.4.0), libstdc++6 (>= 4.4.0)
Pre-Depends: multiarch-support
Description: deb package format runtime library
 This library provides methods to query and extract information
 from deb packages. This includes the control data and the package
 file content.

Package: libisl10
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 1027
Maintainer: Debian GCC Maintainers <debian-gcc@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: isl
Version: 0.12.2-2
Depends: libc6 (>= 2.4), libgmp10
Pre-Depends: multiarch-support
Breaks: libcloog-isl4 (<< 0.18.1)
Description: manipulating sets and relations of integer points bounded by linear constraints
 isl is a library for manipulating sets and relations of integer points
 bounded by linear constraints. Supported operations on sets include
 intersection, union, set difference, emptiness check, convex hull,
 (integer) affine hull, integer projection, and computing the lexicographic
 minimum using parametric integer programming. It also includes an ILP solver
 based on generalized basis reduction.
 .
 This package contains the runtime library.
Homepage: http://freecode.com/projects/isl

Package: dc
Status: install ok installed
Priority: standard
Section: math
Installed-Size: 108
Maintainer: Ryan Kavanagh <rak@debian.org>
Architecture: armhf
Multi-Arch: foreign
Source: bc
Version: 1.06.95-9
Depends: libc6 (>= 2.4)
Description: GNU dc arbitrary precision reverse-polish calculator
 GNU dc is a reverse-polish desk calculator which supports unlimited
 precision arithmetic.  It also allows you to define and call macros.
 .
 A reverse-polish calculator stores numbers on a stack. Entering a number
 pushes it on the stack.  Arithmetic operations pop arguments off the
 stack and push the results.
Homepage: http://ftp.gnu.org/gnu/bc/

Package: firmware-ralink
Status: install ok installed
Priority: optional
Section: non-free/kernel
Installed-Size: 145
Maintainer: Debian Kernel Team <debian-kernel@lists.debian.org>
Architecture: all
Multi-Arch: foreign
Source: firmware-nonfree
Version: 0.43+rpi5
Suggests: initramfs-tools
Description: Binary firmware for Ralink wireless cards
 This package contains the binary firmware for wireless network cards with
 the Ralink RT2501 [Turbo], RT2600, RT5201 [Turbo], RT5600, RT5201USB,
 RT2800P[D], RT2700P[D], RT2700E[D], RT2800E[D], RT2800U[D] or RT3000E[D]
 chipsets or RT3070/RT3071/RT3072 chips, supported by the rt61/rt61pci,
 rt73/rt73usb, rt2860sta, rt2870sta/rt2870, rt3070sta or rt3090sta drivers.
 .
 Contents:
  * Ralink RT2561 (RT2501/RT5201 chipset) firmware, version 1.2
    (rt2561.bin)
  * Ralink RT2561S (RT2501 Turbo/RT5201 Turbo chipset) firmware, version
    1.2 (rt2561s.bin)
  * Ralink RT2661 (RT2600/RT5600 chipset) firmware, version 1.2
    (rt2661.bin)
  * Ralink RT2760/RT2790/RT2860/RT2890/RT3090
    (RT2700P[D]/RT2700E[D]/RT2800P[D]/RT2800E[D]/RT3000E[D] chipset)
    firmware, version 34 (rt2860.bin, rt3090.bin)
  * Ralink RT2870/RT3070/RT3071/RT3072 (RT2800U[D] chipset) firmware,
    version 29 (rt2870.bin, rt3070.bin)
  * Ralink RT3071/RT3072 firmware, version 29 (rt3071.bin)
  * Ralink RT3290 firmware, version 1 (rt3290.bin)
  * Ralink RT2571W/RT2671 (RT2501USB/RT5201USB chipset) firmware,
    version 1.8 (rt73.bin)
  * Mediatek MT7601U firmware, version 1 (mt7601u.bin)
Homepage: http://git.kernel.org/?p=linux/kernel/git/firmware/linux-firmware.git

Package: libtext-wrapi18n-perl
Status: install ok installed
Priority: required
Section: perl
Installed-Size: 53
Maintainer: Anibal Monsalve Salazar <anibal@debian.org>
Architecture: all
Version: 0.06-7
Depends: libtext-charwidth-perl
Description: internationalized substitute of Text::Wrap
 This module is a substitution for Text::Wrap, supporting
 multibyte characters such as UTF-8, EUC-JP, and GB2312, fullwidth
 characters such as east Asian characters, combining characters
 such as diacritical marks and Thai, and languages which don't
 use whitespaces between words such as Chinese and Japanese.
 .
 It provides wrap().
Homepage: http://search.cpan.org/search?module=Text::WrapI18N

Package: libsemanage-common
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 65
Maintainer: Debian SELinux maintainers <selinux-devel@lists.alioth.debian.org>
Architecture: all
Multi-Arch: foreign
Source: libsemanage
Version: 2.3-1
Replaces: libsemanage1 (<= 2.0.41-1), libsemanage1-dev (<< 2.1.6-3~)
Breaks: libsemanage1 (<= 2.0.41-1), libsemanage1-dev (<< 2.1.6-3~)
Conffiles:
 /etc/selinux/semanage.conf e69d42a4d98a93c3b8e201bdda367c55
Description: Common files for SELinux policy management libraries
 This package provides the common files used by the shared libraries
 for SELinux policy management.
 .
 Security-enhanced Linux is a patch of the Linux kernel and a
 number of utilities with enhanced security functionality designed to
 add mandatory access controls to Linux.  The Security-enhanced Linux
 kernel contains new architectural components originally developed to
 improve the security of the Flask operating system. These
 architectural components provide general support for the enforcement
 of many kinds of mandatory access control policies, including those
 based on the concepts of Type Enforcement, Role-based Access
 Control, and Multi-level Security.
Homepage: http://userspace.selinuxproject.org/

Package: libfakeroot
Status: install ok installed
Priority: optional
Section: utils
Installed-Size: 101
Maintainer: Clint Adams <clint@debian.org>
Architecture: armhf
Multi-Arch: same
Source: fakeroot
Version: 1.20.2-1
Replaces: fakeroot (<< 1.20-2~)
Depends: libc6 (>= 2.4)
Breaks: fakeroot (<< 1.20-2~)
Conffiles:
 /etc/ld.so.conf.d/fakeroot-arm-linux-gnueabihf.conf d25f10d5ed2988daa84e1d495ea75bd3
Description: tool for simulating superuser privileges - shared libraries
 fakeroot provides a fake "root environment" by means of LD_PRELOAD and
 SysV IPC (or TCP) trickery. It puts wrappers around getuid(), chown(),
 stat(), and other file-manipulation functions, so that unprivileged
 users can (for instance) populate .deb archives with root-owned files;
 various build tools use fakeroot for this by default.
 .
 This package contains the LD_PRELOAD libraries.

Package: libasan1
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 627
Maintainer: Debian GCC Maintainers <debian-gcc@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: gcc-4.9
Version: 4.9.2-10
Provides: libasan1-armhf
Depends: gcc-4.9-base (= 4.9.2-10), libc6 (>= 2.4), libgcc1 (>= 1:4.4.0), libstdc++6 (>= 4.1.1)
Pre-Depends: multiarch-support
Description: AddressSanitizer -- a fast memory error detector
 AddressSanitizer (ASan) is a fast memory error detector.  It finds
 use-after-free and {heap,stack,global}-buffer overflow bugs in C/C++ programs.
Homepage: http://gcc.gnu.org/

Package: libp11-kit0
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 216
Maintainer: Debian GnuTLS Maintainers <pkg-gnutls-maint@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: p11-kit
Version: 0.20.7-1
Depends: libc6 (>= 2.16), libffi6 (>= 3.0.4)
Pre-Depends: multiarch-support
Description: Library for loading and coordinating access to PKCS#11 modules - runtime
 Provides a way to load and enumerate PKCS#11 modules. Provides a standard
 configuration setup for installing PKCS#11 modules in such a way that
 they're discoverable.
 .
 Also solves problems with coordinating the use of PKCS#11 by different
 components or libraries living in the same process.
 .
 This package contains the shared library required for applications loading
 and accessing PKCS#11 modules.
Homepage: http://p11-glue.freedesktop.org/p11-kit.html

Package: libgnutls-openssl27
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 165
Maintainer: Debian GnuTLS Maintainers <pkg-gnutls-maint@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: gnutls28
Version: 3.3.8-6+deb8u5
Depends: libgnutls-deb0-28 (= 3.3.8-6+deb8u5), libc6 (>= 2.4)
Pre-Depends: multiarch-support
Description: GNU TLS library - OpenSSL wrapper
 GnuTLS is a portable library which implements the Transport Layer
 Security (TLS 1.0, 1.1, 1.2) and Secure Sockets Layer (SSL) 3.0 and Datagram
 Transport Layer Security (DTLS 1.0, 1.2) protocols.
 .
 GnuTLS features support for:
  - TLS extensions: server name indication, max record size, opaque PRF
    input, etc.
  - authentication using the SRP protocol.
  - authentication using both X.509 certificates and OpenPGP keys.
  - TLS Pre-Shared-Keys (PSK) extension.
  - Inner Application (TLS/IA) extension.
  - X.509 and OpenPGP certificate handling.
  - X.509 Proxy Certificates (RFC 3820).
  - all the strong encryption algorithms (including SHA-256/384/512 and
    Camellia (RFC 4132)).
 .
 This package contains the runtime library of the GnuTLS OpenSSL wrapper.
Homepage: http://www.gnutls.org/

Package: libdebconfclient0
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 48
Maintainer: Debian Install System Team <debian-boot@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: cdebconf
Version: 0.192
Depends: libc6 (>= 2.4)
Pre-Depends: multiarch-support
Description: Debian Configuration Management System (C-implementation library)
 Debconf is a configuration management system for Debian packages. It is
 used by some packages to prompt you for information before they are
 installed. This is a reimplementation of the original debconf version
 in C.
 .
 This is the libraries needed by libdebconfclient-dev and cdebconf.

Package: libgnutls-deb0-28
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 1674
Maintainer: Debian GnuTLS Maintainers <pkg-gnutls-maint@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: gnutls28
Version: 3.3.8-6+deb8u5
Replaces: gnutls0, gnutls0.4, gnutls3
Depends: libc6 (>= 2.17), libgmp10 (>= 2:6), libhogweed2 (>= 2.7), libnettle4 (>= 2.7), libp11-kit0 (>= 0.20.7), libtasn1-6 (>= 4.1-0), zlib1g (>= 1:1.1.4)
Pre-Depends: multiarch-support
Suggests: gnutls-bin
Conflicts: gnutls0, gnutls0.4
Description: GNU TLS library - main runtime library
 GnuTLS is a portable library which implements the Transport Layer
 Security (TLS 1.0, 1.1, 1.2) and Secure Sockets Layer (SSL) 3.0 and Datagram
 Transport Layer Security (DTLS 1.0, 1.2) protocols.
 .
 GnuTLS features support for:
  - TLS extensions: server name indication, max record size, opaque PRF
    input, etc.
  - authentication using the SRP protocol.
  - authentication using both X.509 certificates and OpenPGP keys.
  - TLS Pre-Shared-Keys (PSK) extension.
  - Inner Application (TLS/IA) extension.
  - X.509 and OpenPGP certificate handling.
  - X.509 Proxy Certificates (RFC 3820).
  - all the strong encryption algorithms (including SHA-256/384/512 and
    Camellia (RFC 4132)).
 .
 This package contains the main runtime library.
Homepage: http://www.gnutls.org/

Package: libselinux1
Status: install ok installed
Priority: required
Section: libs
Installed-Size: 152
Maintainer: Debian SELinux maintainers <selinux-devel@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: libselinux
Version: 2.3-2
Depends: libc6 (>= 2.8), libpcre3 (>= 8.10)
Pre-Depends: multiarch-support
Description: SELinux runtime shared libraries
 This package provides the shared libraries for Security-enhanced
 Linux that provides interfaces (e.g. library functions for the
 SELinux kernel APIs like getcon(), other support functions like
 getseuserbyname()) to SELinux-aware applications. Security-enhanced
 Linux is a patch of the Linux kernel and a number of utilities with
 enhanced security functionality designed to add mandatory access
 controls to Linux.  The Security-enhanced Linux kernel contains new
 architectural components originally developed to improve the security
 of the Flask operating system. These architectural components provide
 general support for the enforcement of many kinds of mandatory access
 control policies, including those based on the concepts of Type
 Enforcement, Role-based Access Control, and Multi-level Security.
 .
 libselinux1 provides an API for SELinux applications to get and set
 process and file security contexts and to obtain security policy
 decisions.  Required for any applications that use the SELinux
 API. libselinux may use the shared libsepol to manipulate the binary
 policy if necessary (e.g. to downgrade the policy format to an older
 version supported by the kernel) when loading policy.
Homepage: http://userspace.selinuxproject.org/

Package: systemd
Status: install ok installed
Priority: optional
Section: admin
Installed-Size: 10445
Maintainer: Debian systemd Maintainers <pkg-systemd-maintainers@lists.alioth.debian.org>
Architecture: armhf
Version: 215-17+deb8u7
Depends: libacl1 (>= 2.2.51-8), libaudit1 (>= 1:2.2.1), libblkid1 (>= 2.19.1), libcap2 (>= 1:2.10), libcryptsetup4 (>= 2:1.4.3), libkmod2 (>= 5~), libpam0g (>= 0.99.7.1), libselinux1 (>= 2.1.9), libsystemd0 (= 215-17+deb8u7), util-linux (>= 2.19.1-2), mount (>= 2.21), initscripts (>= 2.88dsf-53.2), sysv-rc, udev (>= 208-8), acl, adduser, libcap2-bin
Pre-Depends: libc6 (>= 2.17), libgcrypt20 (>= 1.6.1), liblzma5 (>= 5.1.1alpha+20120614), libselinux1 (>= 1.32)
Recommends: libpam-systemd, dbus
Suggests: systemd-ui
Breaks: lsb-base (<< 4.1+Debian4), lvm2 (<< 2.02.104-1), systemd-shim (<< 8-2)
Conflicts: klogd
Conffiles:
 /etc/dbus-1/system.d/org.freedesktop.hostname1.conf f55c94d000b5d62b5f06d38852977dd1
 /etc/dbus-1/system.d/org.freedesktop.locale1.conf 5893ab03e7e96aa3759baceb4dd04190
 /etc/dbus-1/system.d/org.freedesktop.login1.conf 96bf488f3da8f0ca813cc78e71eeb605
 /etc/dbus-1/system.d/org.freedesktop.machine1.conf d658acaf7192de735ab798c58ab149ae
 /etc/dbus-1/system.d/org.freedesktop.systemd1.conf 46533268285a0df22b1f1667ddc05642
 /etc/dbus-1/system.d/org.freedesktop.timedate1.conf 682369fbf3de26b21e775732c89a2bbe
 /etc/pam.d/systemd-user aebb8b8a2c698614b00961f327a683ef
 /etc/systemd/bootchart.conf 838a83315ad2f9d4c4b7f20b7475ba28
 /etc/systemd/journald.conf 51f19202dcc5aff6d2c3448dbf92f354
 /etc/systemd/logind.conf 747ae2312b6922546190bf806d8d12be
 /etc/systemd/resolved.conf 81a9c57d4eb587decc49040595674c5a
 /etc/systemd/system.conf 3d0e13a72d72acb55409a831b72a15e6
 /etc/systemd/timesyncd.conf 605e4f25097b8ea22f2f5cb3fde3f13c
 /etc/systemd/user.conf 9eaad8fbb7bb6230d4b28abb76b4e81c
Description: system and service manager
 systemd is a replacement for sysvinit.  It is dependency-based and
 able to read the LSB init script headers in addition to parsing rcN.d
 links as hints.
 .
 It also provides process supervision using cgroups and the ability to
 not only depend on other init script being started, but also
 availability of a given mount point or dbus service.
 .
 Installing the systemd package will not switch your init system unless you
 boot with init=/bin/systemd or install systemd-sysv in addition.
Homepage: http://www.freedesktop.org/wiki/Software/systemd

Package: libltdl7
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 60
Maintainer: Kurt Roeckx <kurt@roeckx.be>
Architecture: armhf
Multi-Arch: same
Source: libtool
Version: 2.4.2-1.11
Depends: libc6 (>= 2.4)
Pre-Depends: multiarch-support
Description: System independent dlopen wrapper for GNU libtool
 This package contains the run-time libltdl library.
 .
 A small library that aims at hiding the various difficulties of
 dlopening libraries from programmers.  It is a system independent
 dlopen wrapper for GNU libtool.
 .
 It supports the following dlopen interfaces:
   * dlopen (Solaris, Linux and various BSD flavors)
   * shl_load (HP-UX)
   * LoadLibrary (Win16 and Win32)
   * load_add_on (BeOS)
   * GNU DLD (emulates dynamic linking for static libraries)
   * libtool's dlpreopen
Homepage: http://www.gnu.org/software/libtool/

Package: libpython2.7
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 3134
Maintainer: Matthias Klose <doko@debian.org>
Architecture: armhf
Multi-Arch: same
Source: python2.7
Version: 2.7.9-2+deb8u1
Replaces: python2.7 (<< 2.6)
Depends: libpython2.7-stdlib (= 2.7.9-2+deb8u1), libc6 (>= 2.15), zlib1g (>= 1:1.2.0)
Pre-Depends: multiarch-support
Description: Shared Python runtime library (version 2.7)
 Python is a high-level, interactive, object-oriented language. Its 2.7 version
 includes an extensive class library with lots of goodies for
 network programming, system administration, sounds and graphics.
 .
 This package contains the shared runtime library, normally not needed
 for programs using the statically linked interpreter.

Package: dpkg
Essential: yes
Status: install ok installed
Priority: required
Section: admin
Installed-Size: 6435
Origin: debian
Maintainer: Dpkg Developers <debian-dpkg@lists.debian.org>
Bugs: debbugs://bugs.debian.org
Architecture: armhf
Multi-Arch: foreign
Version: 1.17.27
Replaces: manpages-it (<< 2.80-4)
Pre-Depends: libbz2-1.0, libc6 (>= 2.11), liblzma5 (>= 5.1.1alpha+20120614), libselinux1 (>= 2.3), zlib1g (>= 1:1.1.4), tar (>= 1.23)
Suggests: apt
Breaks: apt (<< 0.7.7~), apt-cudf (<< 3.3~beta1-3~), aptitude (<< 0.4.7-1~), auctex (<< 11.87-3+deb8u1~), ccache (<< 3.1.10-1~), cups (<< 1.7.5-10~), debian-security-support (<< 2014.10.26~), distcc (<< 3.1-6.1~), doc-base (<< 0.10.5~), dpkg-dev (<< 1.15.8), fontconfig (<< 2.11.0-6.2~), fusionforge-plugin-mediawiki (<< 5.3.2+20141104-3~), gap-core (<< 4r7p5-2~), gitweb (<< 1:2.1.4-2.1~), grace (<< 1:5.1.24-3~), gxine (<< 0.5.908-3.1~), hoogle (<< 4.2.33-4~), icecc (<< 1.0.1-2~), install-info (<< 5.1.dfsg.1-3~), libapache2-mod-php5 (<< 5.6.4+dfsg-3~), libapache2-mod-php5filter (<< 5.6.4+dfsg-3~), libdpkg-perl (<< 1.15.8), libjs-protoaculous (<< 5~), man-db (<< 2.6.3-6~), mcollective (<< 2.6.0+dfsg-2.1~), php5-fpm (<< 5.6.4+dfsg-3~), pypy (<< 2.4.0+dfsg-3~), readahead-fedora (<< 2:1.5.6-5.2~), wordpress (<< 4.1+dfsg-1~), xfonts-traditional (<< 1.7~), xine-ui (<< 0.99.9-1.2~)
Conflicts: ada-mode (<< 3.6-3+rm), ada-reference-manual (<< 20021112web-4~), asn1-mode (<< 2.7-7~), bogosort (<< 0.4.2-3~), cl-yacc (<< 0.3-3~), cpp-4.1-doc (<< 4.1.2.nf2-4~), cpp-4.2-doc (<< 4.2.4.nf1-4~), gcc-4.1-doc (<< 4.1.2.nf2-4~), gcc-4.2-doc (<< 4.2.4.nf1-4~), gcj-4.1-doc (<< 4.1.2.nf2-4~), gcj-4.2-doc (<< 4.2.4.nf1-4~), gfortran-4.1-doc (<< 4.1.2.nf2-4~), gfortran-4.2-doc (<< 4.2.4.nf1-4~), ggz-docs (<< 0.0.14.1-2~), glame (<< 2.0.1-6~), gnat-4.1-doc (<< 4.1.2.nf2-4~), gnat-4.2-doc (<< 4.2.4.nf1-4~), gtalk (<< 0.99.10-16~), libalogg-dev (<< 1.3.7-2~), libgtk1.2-doc (<< 1.2.10-19~), libnettle-dev (<< 2~), liborbit-dev (<< 0.5.17-12~), libreadline5-dev (<< 5.2-8~), librep-doc (<< 0.90~), mmucl (<< 1.5.2-3~), nxml-mode (<< 20041004-9~), octave2.1-info (<< 1:2.1.73-19+rm), octave3.0-info (<< 1:3.0.5-7+rm), octave3.2-info (<< 3.2.4-12+rm), polgen-doc (<< 1.3-3+rm), r6rs-doc (<< 1.0-2~), serveez-doc (<< 0.1.5-3~), slat (<< 2.0-6~), texlive-base-bin-doc (<< 2007.dfsg.2-9~), ttcn-el (<< 0.6.9-2~), ulog-acctd (<< 0.4.3-3~), xconq-doc (<< 7.4.1-5~), zenirc (<< 2.112.dfsg-1~)
Conffiles:
 /etc/alternatives/README 69c4ba7f08363e998e0f2e244a04f881
 /etc/cron.daily/dpkg b8065b6bfc248caba501c3f5bb508e66
 /etc/dpkg/dpkg.cfg f4413ffb515f8f753624ae3bb365b81b
 /etc/logrotate.d/dpkg 782ea5ae536f67ff51dc8c3e2eeb4cf9
Description: Debian package management system
 This package provides the low-level infrastructure for handling the
 installation and removal of Debian software packages.
 .
 For Debian package development tools, install dpkg-dev.
Homepage: https://wiki.debian.org/Teams/Dpkg

Package: libgcc-4.9-dev
Status: install ok installed
Priority: optional
Section: libdevel
Installed-Size: 3898
Maintainer: Debian GCC Maintainers <debian-gcc@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: gcc-4.9
Version: 4.9.2-10
Replaces: gccgo-4.9 (<< 4.9.2-10)
Depends: gcc-4.9-base (= 4.9.2-10), libgcc1 (>= 1:4.9.2-10), libgomp1 (>= 4.9.2-10), libatomic1 (>= 4.9.2-10), libasan1 (>= 4.9.2-10), libubsan0 (>= 4.9.2-10)
Recommends: libc6-dev (>= 2.13-5)
Description: GCC support library (development files)
 This package contains the headers and static library files necessary for
 building C programs which use libgcc, libgomp, libquadmath, libssp or libitm.
Homepage: http://gcc.gnu.org/

Package: automake
Status: install ok installed
Priority: optional
Section: devel
Installed-Size: 1699
Maintainer: Eric Dorland <eric@debian.org>
Architecture: all
Multi-Arch: foreign
Source: automake-1.14
Version: 1:1.14.1-4+deb8u1
Provides: automake-1.14, automaken
Depends: autoconf (>= 2.65), autotools-dev (>= 20020320.1)
Conflicts: automake (<< 1:1.4-p5-1), automake1.10-doc, automake1.5 (<< 1.5-2), automake1.6 (<< 1.6.1-4)
Description: Tool for generating GNU Standards-compliant Makefiles
 Automake is a tool for automatically generating `Makefile.in's from
 files called `Makefile.am'.
 .
 The goal of Automake is to remove the burden of Makefile maintenance
 from the back of the individual GNU maintainer (and put it on the back
 of the Automake maintainer).
 .
 The `Makefile.am' is basically a series of `make' macro definitions
 (with rules being thrown in occasionally).  The generated
 `Makefile.in's are compliant with the GNU Makefile standards.
 .
 Automake 1.14 fails to work in a number of situations that Automake
 1.4, 1.6, 1.7, 1.8, 1.9, 1.10 and 1.11 did, so previous versions are
 available as separate packages.
Homepage: http://www.gnu.org/software/automake/

Package: openssl
Status: install ok installed
Priority: optional
Section: utils
Installed-Size: 976
Maintainer: Debian OpenSSL Team <pkg-openssl-devel@lists.alioth.debian.org>
Architecture: armhf
Version: 1.0.1t-1+deb8u6
Depends: libc6 (>= 2.15), libssl1.0.0 (>= 1.0.1k-3+deb8u3)
Suggests: ca-certificates
Conffiles:
 /etc/ssl/openssl.cnf 7df26c55291b33344dc15e3935dabaf3
Description: Secure Sockets Layer toolkit - cryptographic utility
 This package is part of the OpenSSL project's implementation of the SSL
 and TLS cryptographic protocols for secure communication over the
 Internet.
 .
 It contains the general-purpose command line binary /usr/bin/openssl,
 useful for cryptographic operations such as:
  * creating RSA, DH, and DSA key parameters;
  * creating X.509 certificates, CSRs, and CRLs;
  * calculating message digests;
  * encrypting and decrypting with ciphers;
  * testing SSL/TLS clients and servers;
  * handling S/MIME signed or encrypted mail.

Package: libplymouth4
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 239
Maintainer: Laurent Bigonville <bigon@debian.org>
Architecture: armhf
Multi-Arch: same
Source: plymouth
Version: 0.9.2-3+rpi1
Replaces: plymouth (<< 0.9.2-1~)
Depends: libc6 (>= 2.9), libpng12-0 (>= 1.2.13-4), libudev1 (>= 183)
Pre-Depends: multiarch-support
Breaks: plymouth (<< 0.9.2-1~)
Description: graphical boot animation and logger - shared libraries
 Plymouth is an application that runs very early in the boot process
 (even before the root filesystem is mounted!) that provides a graphical
 boot animation while the boot process happens in the background.
 .
 This package contains the shared libraries.
Homepage: http://www.freedesktop.org/wiki/Software/Plymouth

Package: wget
Status: install ok installed
Priority: important
Section: web
Installed-Size: 1683
Maintainer: Noël Köthe <noel@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 1.16-1+deb8u2
Depends: libc6 (>= 2.17), libgnutls-deb0-28 (>= 3.3.0), libidn11 (>= 1.13), libnettle4, libpsl0 (>= 0.4.0), libuuid1 (>= 2.16), zlib1g (>= 1:1.1.4)
Recommends: ca-certificates
Conflicts: wget-ssl
Conffiles:
 /etc/wgetrc 618c05b4106ad20141dcf6deada2e87f
Description: retrieves files from the web
 Wget is a network utility to retrieve files from the web
 using HTTP(S) and FTP, the two most widely used internet
 protocols. It works non-interactively, so it will work in
 the background, after having logged off. The program supports
 recursive retrieval of web-authoring pages as well as FTP
 sites -- you can use Wget to make mirrors of archives and
 home pages or to travel the web like a WWW robot.
 .
 Wget works particularly well with slow or unstable connections
 by continuing to retrieve a document until the document is fully
 downloaded. Re-getting files from where it left off works on
 servers (both HTTP and FTP) that support it. Both HTTP and FTP
 retrievals can be time stamped, so Wget can see if the remote
 file has changed since the last retrieval and automatically
 retrieve the new version if it has.
 .
 Wget supports proxy servers; this can lighten the network load,
 speed up retrieval, and provide access behind firewalls.
Homepage: http://www.gnu.org/software/wget/

Package: tdb-tools
Status: install ok installed
Priority: optional
Section: utils
Installed-Size: 67
Maintainer: Debian Samba Maintainers <pkg-samba-maint@lists.alioth.debian.org>
Architecture: armhf
Source: tdb
Version: 1.3.6-0+deb8u1
Depends: libc6 (>= 2.4), libtdb1 (>= 1.2.11)
Description: Trivial Database - bundled binaries
 This is a simple database API. It is modelled after the structure
 of GDBM. TDB features, unlike GDBM, multiple writers support with
 appropriate locking and transactions.
 .
 This package contains bundled test and utility binaries
Homepage: http://tdb.samba.org/

Package: subversion
Status: install ok installed
Priority: optional
Section: vcs
Installed-Size: 4347
Maintainer: Peter Samuelson <peter@p12n.org>
Architecture: armhf
Version: 1.8.10-6+deb8u4
Depends: libsvn1 (= 1.8.10-6+deb8u4), libapr1 (>= 1.4.8-2~), libaprutil1 (>= 1.2.7+dfsg), libc6 (>= 2.4), libldap-2.4-2 (>= 2.4.7), libsasl2-2
Suggests: subversion-tools, db5.3-util, patch
Conffiles:
 /etc/bash_completion.d/subversion 179099d243faa0852bf51b1f57729630
 /etc/subversion/config 18cbc7ec20a022f1eadf30bfe89eacce
 /etc/subversion/servers 222e81a462455bd7d6f72c211ff33d71
Description: Advanced version control system
 Apache Subversion, also known as svn, is a centralised version control
 system.  Version control systems allow many individuals (who may be
 distributed geographically) to collaborate on a set of files (source
 code, websites, etc).  Subversion began with a CVS paradigm and
 supports all the major features of CVS, but has evolved to support
 many features that CVS users often wish they had.
 .
 This package includes the Subversion client (svn), repository
 administration tools (svnadmin, svnlook) and a network server (svnserve).
Homepage: http://subversion.apache.org/

Package: libterm-ui-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 79
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: all
Version: 0.42-1
Depends: perl, liblog-message-simple-perl | perl (<< 5.17)
Description: Term::ReadLine UI made easy
 Term::UI is a transparent way of eliminating the overhead of having to format
 a question and then validate the reply, informing the user if the answer was
 not proper and re-issuing the question.
 .
 Simply give it the question you want to ask, optionally with choices the user
 can pick from and a default and Term::UI will DWYM.
 .
 For asking a yes or no question, there's even a shortcut.
Homepage: https://metacpan.org/release/Term-UI/

Package: vim-common
Status: install ok installed
Priority: important
Section: editors
Installed-Size: 233
Maintainer: Debian Vim Maintainers <pkg-vim-maintainers@lists.alioth.debian.org>
Architecture: armhf
Source: vim
Version: 2:7.4.488-7+deb8u3
Replaces: vim-gui-common (<< 2:7.4.488-4~)
Depends: libc6 (>= 2.4)
Recommends: vim | vim-gnome | vim-gtk | vim-athena | vim-nox | vim-tiny
Breaks: vim-gui-common (<< 2:7.4.488-4~)
Conffiles:
 /etc/vim/vimrc 5fd31a932a5738dd87418b1b201dcf7c
Description: Vi IMproved - Common files
 Vim is an almost compatible version of the UNIX editor Vi.
 .
 Many new features have been added: multi level undo, syntax
 highlighting, command line history, on-line help, filename
 completion, block operations, folding, Unicode support, etc.
 .
 This package contains files shared by all non GUI-enabled vim
 variants (vim and vim-tiny currently) available in Debian.
 Examples of such shared files are: manpages, common executables
 like xxd, and configuration files.
Homepage: http://www.vim.org/

Package: libcgi-pm-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 526
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: all
Version: 4.09-1
Depends: perl
Recommends: libcgi-fast-perl (>= 1:2.01)
Breaks: libcgi-fast-perl (<< 1:2)
Description: module for Common Gateway Interface applications
 CGI.pm is a Perl module that provides classes useful for creating Web forms
 and for parsing their contents. It defines CGI objects, entities that contain
 the values of the current query string and other state variables.
Homepage: https://metacpan.org/release/CGI

Package: apt-listchanges
Status: install ok installed
Priority: standard
Section: utils
Installed-Size: 446
Maintainer: Sandro Tosi <morph@debian.org>
Architecture: all
Version: 2.85.13+nmu1
Depends: python (>= 2.4), python-support (>= 0.90.0), apt (>= 0.5.3), python-apt (>= 0.7.93), ucf (>= 0.28), debianutils (>= 2.0.2), debconf (>= 0.5) | debconf-2.0
Suggests: x-terminal-emulator, www-browser, python-glade2, python-gtk2, default-mta | mail-transport-agent
Conffiles:
 /etc/apt/apt.conf.d/20listchanges 39204938ee32c5ebd503167ace5c1d0c
Description: package change history notification tool
 The tool apt-listchanges can compare a new version of a
 package with the one currently installed and show what has been
 changed, by extracting the relevant entries from the Debian changelog
 and NEWS files.
 .
 It can be run on several .deb archives at a time to get a list of all
 changes that would be caused by installing or upgrading a group of
 packages. When configured as an APT plugin it will do this
 automatically during upgrades.

Package: libopts25
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 134
Maintainer: Andreas Metzler <ametzler@debian.org>
Architecture: armhf
Multi-Arch: same
Source: autogen
Version: 1:5.18.4-3
Replaces: autogen
Depends: libc6 (>= 2.7)
Pre-Depends: multiarch-support
Description: automated option processing library based on autogen
 This package contains the shared libraries needed by binaries that use
 autoopts for option processing. The package containing the header files
 and static libraries is libopts25-dev. The package containing the
 development tools is autogen.
Homepage: http://www.gnu.org/software/autogen/

Package: liblwres90
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 92
Maintainer: LaMont Jones <lamont@debian.org>
Architecture: armhf
Source: bind9
Version: 1:9.9.5.dfsg-9+deb8u11
Replaces: libbind0
Depends: libc6 (>= 2.15), libcap2 (>= 1:2.10), libxml2 (>= 2.6.27)
Conflicts: libbind0
Description: Lightweight Resolver Library used by BIND
 The Berkeley Internet Name Domain (BIND) implements an Internet domain
 name server.  BIND is the most widely-used name server software on the
 Internet, and is supported by the Internet Software Consortium, www.isc.org.
 .
 This package delivers the liblwres shared library used by BIND's daemons
 and clients.

Package: libsqlite3-0
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 753
Maintainer: Laszlo Boszormenyi (GCS) <gcs@debian.org>
Architecture: armhf
Multi-Arch: same
Source: sqlite3
Version: 3.8.7.1-1+deb8u2
Depends: libc6 (>= 2.4)
Pre-Depends: multiarch-support
Description: SQLite 3 shared library
 SQLite is a C library that implements an SQL database engine.
 Programs that link with the SQLite library can have SQL database
 access without running a separate RDBMS process.
Homepage: http://www.sqlite.org/

Package: firmware-atheros
Status: install ok installed
Priority: optional
Section: non-free/kernel
Installed-Size: 1761
Maintainer: Debian Kernel Team <debian-kernel@lists.debian.org>
Architecture: all
Multi-Arch: foreign
Source: firmware-nonfree
Version: 0.43+rpi5
Suggests: initramfs-tools
Description: Binary firmware for Atheros wireless cards
 This package contains the binary firmware for USB wireless network and
 Bluetooth cards supported by the ar5523, ar9170, ath3k, ath6kl_sdio,
 ath6kl_usb or ath9k_htc drivers.
 .
 Contents:
  * Atheros AR3012 rev 01020001 patch (ar3k/AthrBT_0x01020001.dfu)
  * Atheros AR3012 rev 01020200 patch (ar3k/AthrBT_0x01020200.dfu)
  * Atheros AR3012 rev 01020201 patch (ar3k/AthrBT_0x01020201.dfu)
  * Atheros AR3012 rev 11020000 patch (ar3k/AthrBT_0x11020000.dfu)
  * Atheros AR3012 rev 31010000 patch (ar3k/AthrBT_0x31010000.dfu)
  * Atheros AR3012 rev 41020000 patch (ar3k/AthrBT_0x41020000.dfu)
  * Atheros AR3012 rev 01020001 config (ar3k/ramps_0x01020001_26.dfu)
  * Atheros AR3012 rev 01020200 26 MHz config
    (ar3k/ramps_0x01020200_26.dfu)
  * Atheros AR3012 rev 01020200 40 MHz config
    (ar3k/ramps_0x01020200_40.dfu)
  * Atheros AR3012 rev 01020201 26 MHz config
    (ar3k/ramps_0x01020201_26.dfu)
  * Atheros AR3012 rev 01020201 40 MHz config
    (ar3k/ramps_0x01020201_40.dfu)
  * Atheros AR3012 rev 11020000 config (ar3k/ramps_0x11020000_40.dfu)
  * Atheros AR3012 rev 31010000 config (ar3k/ramps_0x31010000_40.dfu)
  * Atheros AR3012 rev 41020000 config (ar3k/ramps_0x41020000_40.dfu)
  * Atheros AR5523 firmware (ar5523.bin)
  * Atheros AR7010 rev 1.0 firmware (ar7010.fw)
  * Atheros AR7010 rev 1.1 firmware (ar7010_1_1.fw)
  * Atheros AR9170 firmware (ar9170.fw)
  * Atheros AR9271 firmware (ar9271.fw)
  * Atheros AR3011 firmware (ath3k-1.fw)
  * ath6k/AR6003.1/hw2.1.1/athwlan.bin
  * ath6k/AR6003.1/hw2.1.1/bdata.SD31.bin
  * ath6k/AR6003.1/hw2.1.1/bdata.SD32.bin
  * ath6k/AR6003.1/hw2.1.1/bdata.WB31.bin
  * ath6k/AR6003.1/hw2.1.1/data.patch.bin
  * ath6k/AR6003.1/hw2.1.1/endpointping.bin
  * ath6k/AR6003.1/hw2.1.1/otp.bin
  * ath6k/AR6003/hw1.0/athwlan.bin.z77
  * ath6k/AR6003/hw1.0/bdata.SD31.bin
  * ath6k/AR6003/hw1.0/bdata.SD32.bin
  * ath6k/AR6003/hw1.0/bdata.WB31.bin
  * ath6k/AR6003/hw1.0/data.patch.bin
  * ath6k/AR6003/hw1.0/otp.bin.z77
  * ath6k/AR6003/hw2.0/athwlan.bin.z77
  * ath6k/AR6003/hw2.0/bdata.SD31.bin
  * ath6k/AR6003/hw2.0/bdata.SD32.bin
  * ath6k/AR6003/hw2.0/bdata.WB31.bin
  * ath6k/AR6003/hw2.0/data.patch.bin
  * ath6k/AR6003/hw2.0/otp.bin.z77
  * ath6k/AR6003/hw2.1.1/athwlan.bin
  * ath6k/AR6003/hw2.1.1/bdata.SD31.bin
  * ath6k/AR6003/hw2.1.1/bdata.SD32.bin
  * ath6k/AR6003/hw2.1.1/bdata.WB31.bin
  * ath6k/AR6003/hw2.1.1/data.patch.bin
  * ath6k/AR6003/hw2.1.1/endpointping.bin
  * ath6k/AR6003/hw2.1.1/fw-2.bin
  * ath6k/AR6003/hw2.1.1/fw-3.bin
  * ath6k/AR6003/hw2.1.1/otp.bin
  * ath6k/AR6004/hw1.2/bdata.bin
  * ath6k/AR6004/hw1.2/fw-2.bin
  * ath6k/AR6004/hw1.3/bdata.bin
  * ath6k/AR6004/hw1.3/fw-3.bin
  * Atheros AR7010 firmware, version 1.3 (htc_7010.fw)
  * Atheros AR9271 firmware, version 1.3 (htc_9271.fw)
Homepage: http://git.kernel.org/?p=linux/kernel/git/firmware/linux-firmware.git

Package: sysv-rc
Status: install ok installed
Priority: required
Section: admin
Installed-Size: 125
Maintainer: Debian sysvinit maintainers <pkg-sysvinit-devel@lists.alioth.debian.org>
Architecture: all
Multi-Arch: foreign
Source: sysvinit
Version: 2.88dsf-59
Replaces: file-rc
Depends: debconf (>= 0.5) | debconf-2.0, sysvinit-utils (>= 2.86.ds1-62), insserv (>> 1.12.0-10), startpar
Recommends: lsb-base (>= 3.2-14)
Suggests: bum
Breaks: initscripts (<< 2.86.ds1-63)
Conflicts: file-rc
Description: System-V-like runlevel change mechanism
 This package provides support for the System-V like system
 for booting, changing runlevels, and shutting down,
 configured through symbolic links in /etc/rc?.d/.
Homepage: http://savannah.nongnu.org/projects/sysvinit

Package: libudev0
Status: install ok installed
Priority: important
Section: libs
Installed-Size: 181
Maintainer: Marco d'Itri <md@linux.it>
Architecture: armhf
Multi-Arch: same
Source: udev
Version: 175-7.2
Depends: libc6 (>= 2.13-28), libgcc1 (>= 1:4.4.0)
Pre-Depends: multiarch-support
Description: libudev shared library
 This library provides access to udev device information.

Package: libalgorithm-diff-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 137
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: all
Version: 1.19.02-3
Depends: perl
Recommends: libalgorithm-diff-xs-perl
Description: module to find differences between files
 Algorithm::Diff is a Perl module that allows users to analyze text based on a
 Longest Common Subsequence (LCS) algorithm. It can compare two files and find
 the differences between them, which can produce the same information as the
 common Unix tool 'diff'.
 .
 There is an XS-optimized implementation of the core loop, which accelerates
 some types of diff output (see libalgorithm-diff-xs-perl).
Homepage: http://search.cpan.org/~tyemq/Algorithm-Diff/

Package: libiw30
Status: install ok installed
Priority: extra
Section: libs
Installed-Size: 79
Maintainer: Guus Sliepen <guus@debian.org>
Architecture: armhf
Multi-Arch: same
Source: wireless-tools
Version: 30~pre9-8
Depends: libc6 (>= 2.13-28)
Pre-Depends: multiarch-support
Description: Wireless tools - library
 Wireless tools are used to manipulate the Linux Wireless Extensions. The
 Wireless Extension is an interface allowing you to set Wireless LAN specific
 parameters and get the specific stats.
 .
 This package contains the dynamic library libiw.
Homepage: http://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux/Tools.html

Package: tasksel-data
Status: install ok installed
Priority: important
Section: admin
Installed-Size: 551
Maintainer: Debian Install System Team <debian-boot@lists.debian.org>
Architecture: all
Source: tasksel
Version: 3.31+deb8u1
Depends: tasksel (= 3.31+deb8u1)
Recommends: laptop-detect
Conflicts: tasksel (<< 2.67)
Description: official tasks used for installation of Debian systems
 This package contains data about the standard tasks available on a Debian
 system.

Package: apt
Status: install ok installed
Priority: important
Section: admin
Installed-Size: 3020
Maintainer: APT Development Team <deity@lists.debian.org>
Architecture: armhf
Version: 1.0.9.8.4
Replaces: manpages-it (<< 2.80-4~), manpages-pl (<< 20060617-3~), openjdk-6-jdk (<< 6b24-1.11-0ubuntu1~), sun-java5-jdk (>> 0), sun-java6-jdk (>> 0)
Depends: libapt-pkg4.12 (>= 1.0.9.8.4), libc6 (>= 2.15), libgcc1 (>= 1:4.4.0), libstdc++6 (>= 4.9), raspbian-archive-keyring, gnupg
Suggests: aptitude | synaptic | wajig, dpkg-dev (>= 1.17.2), apt-doc, python-apt
Breaks: manpages-it (<< 2.80-4~), manpages-pl (<< 20060617-3~), openjdk-6-jdk (<< 6b24-1.11-0ubuntu1~), sun-java5-jdk (>> 0), sun-java6-jdk (>> 0)
Conflicts: python-apt (<< 0.7.93.2~)
Conffiles:
 /etc/apt/apt.conf.d/01autoremove 5bf3e7bfa3bec23d634c9f3652da1787
 /etc/cron.daily/apt 4f33a76ad3e46913db2be02f0b587933
 /etc/kernel/postinst.d/apt-auto-removal 5d7236fb0c051eec2f5156b641fc447b
 /etc/logrotate.d/apt 179f2ed4f85cbaca12fa3d69c2a4a1c3
Description: commandline package manager
 This package provides commandline tools for searching and
 managing as well as querying information about packages
 as a low-level access to all features of the libapt-pkg library.
 .
 These include:
  * apt-get for retrieval of packages and information about them
    from authenticated sources and for installation, upgrade and
    removal of packages together with their dependencies
  * apt-cache for querying available information about installed
    as well as installable packages
  * apt-cdrom to use removable media as a source for packages
  * apt-config as an interface to the configuration settings
  * apt-key as an interface to manage authentication keys

Package: liblocale-gettext-perl
Status: install ok installed
Priority: required
Section: perl
Installed-Size: 32
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: armhf
Source: liblocale-gettext-perl (1.05-8)
Version: 1.05-8+b1
Depends: libc6 (>= 2.4)
Pre-Depends: perl-base (>= 5.20.0-4), perlapi-5.20.0
Description: module using libc functions for internationalization in Perl
 The gettext module permits access from perl to the gettext() family of
 functions for retrieving message strings from databases constructed
 to internationalize software.
 .
 It provides gettext(), dgettext(), dcgettext(), textdomain(),
 bindtextdomain(), bind_textdomain_codeset(), ngettext(), dcngettext()
 and dngettext().
Homepage: https://metacpan.org/release/gettext

Package: libmpfr4
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 704
Maintainer: Debian QA Group <packages@qa.debian.org>
Architecture: armhf
Multi-Arch: same
Source: mpfr4
Version: 3.1.2-2
Depends: libc6 (>= 2.4), libgmp10
Pre-Depends: multiarch-support
Conflicts: libgmp3 (<< 4.1.4-3)
Description: multiple precision floating-point computation
 MPFR provides a library for multiple-precision floating-point computation
 with correct rounding.  The computation is both efficient and has a
 well-defined semantics. It copies the good ideas from the
 ANSI/IEEE-754 standard for double-precision floating-point arithmetic
 (53-bit mantissa).
Homepage: http://www.mpfr.org/

Package: dmsetup
Status: install ok installed
Priority: optional
Section: admin
Installed-Size: 113
Maintainer: Debian LVM Team <pkg-lvm-maintainers@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: foreign
Source: lvm2 (2.02.111-2.2+deb8u1)
Version: 2:1.02.90-2.2+deb8u1
Depends: libc6 (>= 2.4), libdevmapper1.02.1 (>= 2:1.02.90), util-linux (>> 2.16)
Conflicts: devicekit-disks (<< 009)
Description: Linux Kernel Device Mapper userspace library
 The Linux Kernel Device Mapper is the LVM (Linux Logical Volume Management)
 Team's implementation of a minimalistic kernel-space driver that handles
 volume management, while keeping knowledge of the underlying device layout
 in user-space.  This makes it useful for not only LVM, but EVMS, software
 raid, and other drivers that create "virtual" block devices.
 .
 This package contains a utility for modifying device mappings.
Homepage: http://sources.redhat.com/lvm2/

Package: g++-4.9
Status: install ok installed
Priority: optional
Section: devel
Installed-Size: 21367
Maintainer: Debian GCC Maintainers <debian-gcc@lists.debian.org>
Architecture: armhf
Source: gcc-4.9
Version: 4.9.2-10
Provides: c++-compiler, c++abi2-dev
Depends: gcc-4.9-base (= 4.9.2-10), gcc-4.9 (= 4.9.2-10), libstdc++-4.9-dev (= 4.9.2-10), libc6 (>= 2.11), libcloog-isl4 (>= 0.17), libgmp10 (>= 2:5.0.1~), libisl10 (>= 0.10), libmpc3, libmpfr4 (>= 3.1.2), zlib1g (>= 1:1.1.4)
Suggests: gcc-4.9-doc (>= 4.9), libstdc++6-4.9-dbg (>= 4.9.2-10)
Description: GNU C++ compiler
 This is the GNU C++ compiler, a fairly portable optimizing compiler for C++.
Homepage: http://gcc.gnu.org/

Package: ncdu
Status: install ok installed
Priority: optional
Section: admin
Installed-Size: 69
Maintainer: Eugene V. Lyubimkin <jackyf@debian.org>
Architecture: armhf
Version: 1.10-1
Depends: libc6 (>= 2.4), libgcc1 (>= 1:4.4.0), libncursesw5 (>= 5.6+20070908), libtinfo5
Description: ncurses disk usage viewer
 Ncdu is a ncurses-based du viewer. It provides a fast and easy-to-use interface
 through famous du utility. It allows one to browse through the directories and
 show percentages of disk usage with ncurses library.
Homepage: http://dev.yorhel.nl/ncdu/

Package: iotop
Status: install ok installed
Priority: optional
Section: admin
Installed-Size: 72
Maintainer: Paul Wise <pabs@debian.org>
Architecture: armhf
Version: 0.6-1
Depends: python (>= 2.7), python (<< 2.8)
Description: simple top-like I/O monitor
 iotop does for I/O usage what top(1) does for CPU usage. It watches I/O
 usage information output by the Linux kernel and displays a table of
 current I/O usage by processes on the system. It is handy for answering
 the question "Why is the disk churning so much?".
 .
 iotop can only run under a Linux 2.6.20 or later kernel built with the
 CONFIG_TASKSTATS, CONFIG_TASK_DELAY_ACCT, CONFIG_TASK_IO_ACCOUNTING and
 CONFIG_VM_EVENT_COUNTERS build config options on.
Homepage: http://guichaz.free.fr/iotop/

Package: libpng12-dev
Status: install ok installed
Priority: optional
Section: libdevel
Installed-Size: 520
Maintainer: Anibal Monsalve Salazar <anibal@debian.org>
Architecture: armhf
Multi-Arch: same
Source: libpng
Version: 1.2.50-2+deb8u3
Replaces: libpng12-0-dev, libpng3-dev (<= 1.2.5)
Provides: libpng-dev, libpng12-0-dev, libpng3-dev
Depends: libpng12-0 (= 1.2.50-2+deb8u3), zlib1g-dev
Conflicts: libpng-dev, libpng12-0-dev, libpng2 (<< 1.0.12-3), libpng2-dev
Description: PNG library - development
 libpng is a library implementing an interface for reading and writing
 PNG (Portable Network Graphics) format files.
 .
 This package contains the header and development files needed to build
 programs and packages using libpng.
Homepage: http://libpng.org/pub/png/libpng.html

Package: diffutils
Essential: yes
Status: install ok installed
Priority: required
Section: utils
Installed-Size: 882
Maintainer: Santiago Vila <sanvila@debian.org>
Architecture: armhf
Version: 1:3.3-1
Replaces: diff
Pre-Depends: libc6 (>= 2.17), libgcc1 (>= 1:4.4.0)
Suggests: diffutils-doc, wdiff
Description: File comparison utilities
 The diffutils package provides the diff, diff3, sdiff, and cmp programs.
 .
 `diff' shows differences between two files, or each corresponding file
 in two directories.  `cmp' shows the offsets and line numbers where
 two files differ.  `cmp' can also show all the characters that
 differ between the two files, side by side.  `diff3' shows differences
 among three files.  `sdiff' merges two files interactively.
 .
 The set of differences produced by `diff' can be used to distribute
 updates to text files (such as program source code) to other people.
 This method is especially useful when the differences are small compared
 to the complete files.  Given `diff' output, the `patch' program can
 update, or "patch", a copy of the file.
Homepage: http://www.gnu.org/software/diffutils/

Package: liblog-message-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 88
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: all
Version: 0.8-1
Depends: perl
Description: powerful and flexible message logging mechanism
 Log::Message is a generic message storage mechanism. It allows you to store
 messages on a stack -- either shared or private -- and assign meta-data to
 it. Some meta-data will automatically be added for you, like a timestamp and
 a stack trace, but some can be filled in by the user, like a tag by which to
 identify it or group it, and a level at which to handle the message (for
 example, log it, or die with it)
 .
 Log::Message also provides a powerful way of searching through items by
 regexes on messages, tags and level.
Homepage: https://metacpan.org/release/Log-Message/

Package: libcloog-isl4
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 134
Maintainer: Debian GCC Maintainers <debian-gcc@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: cloog
Version: 0.18.2-1
Depends: libc6 (>= 2.7), libgmp10, libisl10 (>= 0.11)
Pre-Depends: multiarch-support
Description: Chunky Loop Generator (runtime library)
 CLooG is a software which generates loops for scanning Z-polyhedra.
 .
 This package contains the runtime library.
Homepage: http://www.CLooG.org

Package: triggerhappy
Status: install ok installed
Priority: extra
Section: utils
Installed-Size: 126
Maintainer: Stefan Tomanek <stefan.tomanek+debian@wertarbyte.de>
Architecture: armhf
Version: 0.3.4-2
Depends: libc6 (>= 2.4)
Conffiles:
 /etc/init.d/triggerhappy 4426c268f16ad5f8fe7f5eaa998a4fbd
 /etc/default/triggerhappy 021ad4378a11641f5207cdb82005926b
Description: global hotkey daemon for Linux
 Triggerhappy watches connected input devices for certain key presses
 or other input events and runs administrator-configured
 commands when they occur. Unlike other hotkey daemons, it runs as a
 persistent, systemwide service and therefore can be used even
 outside the context of a user or X11 session.
 .
 It can handle a wide variety of devices (keyboards, joysticks,
 wiimote, etc.), as long as they are presented by the kernel as
 generic input devices. No kernel patch is required. The daemon is
 a userspace program that polls the /dev/input/event? interfaces
 for incoming key, button and switch events. A single daemon can
 monitor multiple input devices and can dynamically add additional
 ones. Hotkey handlers can be assigned to dedicated (tagged) devices
 or globally.
 .
 For example, this package might be useful on a headless system to
 use input events generated by a remote control to control an
 mpd server, but can also be used to allow the adjustment of audio
 and network status on a notebook without relying on user specific
 configuration.
 .
 Key combinations are supported as well as the hotplugging of devices
 using a udev hotplug script; the running daemon can also be influenced
 by a client program, e.g. to temporarily pause the processing of
 events or switch to a different set of hotkey bindings.
Homepage: http://github.com/wertarbyte/triggerhappy

Package: man-db
Status: install ok installed
Priority: important
Section: doc
Installed-Size: 1790
Maintainer: Colin Watson <cjwatson@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 2.7.0.2-5
Replaces: man, manpages-de (<< 0.5-4), manpages-zh (<< 1.5.2-1.1), nlsutils
Provides: man, man-browser
Depends: groff-base (>= 1.18.1.1-15), bsdmainutils, debconf (>= 1.2.0) | debconf-2.0, libc6 (>= 2.17), libgdbm3 (>= 1.8.3), libpipeline1 (>= 1.3.0), zlib1g (>= 1:1.1.4)
Pre-Depends: dpkg (>= 1.16.1~)
Suggests: groff, less, www-browser
Breaks: manpages-zh (<< 1.5.2-1.1)
Conflicts: man, suidmanager (<< 0.50)
Conffiles:
 /etc/cron.daily/man-db e467745743809f974051c3ec5b9cd022
 /etc/cron.weekly/man-db 9527d2000fb1f221dbcecb75467a3e49
 /etc/manpath.config 167675fd93075fb5f6ce1aa5f56a8a22
Description: on-line manual pager
 This package provides the man command, the primary way of examining the
 on-line help files (manual pages). Other utilities provided include the
 whatis and apropos commands for searching the manual page database, the
 manpath utility for determining the manual page search path, and the
 maintenance utilities mandb, catman and zsoelim. man-db uses the groff
 suite of programs to format and display the manual pages.
Homepage: http://man-db.nongnu.org/

Package: shared-mime-info
Status: install ok installed
Priority: optional
Section: misc
Installed-Size: 3840
Maintainer: Sebastian Dröge <slomo@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 1.3-1
Depends: libc6 (>= 2.4), libglib2.0-0 (>= 2.35.9), libxml2 (>= 2.7.4)
Conflicts: libglib2.0-0 (<< 2.17.2), libgnomevfs2-0 (<< 1:2.24.0), tracker (<< 0.6.90)
Description: FreeDesktop.org shared MIME database and spec
 This is the shared MIME-info database from the X Desktop Group. It is required
 by any program complying to the Shared MIME-Info Database spec, which is also
 included in this package.
 .
 At this time at least ROX, GNOME, KDE and XFCE use this database.
Homepage: http://freedesktop.org/wiki/Software/shared-mime-info

Package: g++
Status: install ok installed
Priority: optional
Section: devel
Installed-Size: 2
Maintainer: Debian GCC Maintainers <debian-gcc@lists.debian.org>
Architecture: armhf
Source: gcc-defaults (1.136)
Version: 4:4.9.2-2
Provides: c++-compiler
Depends: cpp (>= 4:4.9.2-2), gcc (>= 4:4.9.2-2), g++-4.9 (>= 4.6.4-1~), gcc-4.9 (>= 4.6.4-1~)
Description: GNU C++ compiler
 This is the GNU C++ compiler, a fairly portable optimizing compiler for C++.
 .
 This is a dependency package providing the default GNU C++ compiler.

Package: openresolv
Status: install ok installed
Priority: optional
Section: net
Installed-Size: 204
Maintainer: Roy Marples <roy@marples.name>
Architecture: all
Version: 3.5.2-1
Provides: resolvconf
Conflicts: resolvconf
Conffiles:
 /etc/network/if-up.d/000resolvconf 15b30bee20ee5a244a3cd39828449be0
 /etc/network/if-down.d/resolvconf 62323c527c44598eb8d55779db94b95c
 /etc/ppp/ip-up.d/000resolvconf 50edb4918b1182f0bb49cd84fb33b07a
 /etc/ppp/ip-down.d/000resolvconf 5445bc9ac48afdb46c5f18bab437a7f9
 /etc/resolvconf.conf 0da424f0e7327583492964b642e0557b
 /etc/dhcp3/dhclient-enter-hooks.d/resolvconf 88c96ccaddd11b931ad6238e04ee0d88
 /etc/dhcp/dhclient-enter-hooks.d/resolvconf 88c96ccaddd11b931ad6238e04ee0d88
Description: management framework for resolv.conf
 Allows multiple daemons to manage resolv.conf and configures
 local resolvers such as dnsmasq and unbound.
 .
 This package may require some manual configuration.
 Please read resolvconf(8) and resolvconf.conf(5) for detailed instructions.
Homepage: http://roy.marples.name/projects/openresolv

Package: libnfnetlink0
Status: install ok installed
Priority: extra
Section: libs
Installed-Size: 24
Maintainer: Alexander Wirt <formorer@debian.org>
Architecture: armhf
Multi-Arch: same
Source: libnfnetlink
Version: 1.0.1-3
Depends: libc6 (>= 2.4)
Pre-Depends: multiarch-support
Description: Netfilter netlink library
 libnfnetlink is the low-level library for netfilter related
 kernel/userspace communication. It provides a generic messaging
 infrastructure for in-kernel netfilter subsystems (such as
 nfnetlink_log, nfnetlink_queue, nfnetlink_conntrack) and their
 respective users and/or management tools in userspace.

Package: vim-runtime
Status: install ok installed
Priority: optional
Section: editors
Installed-Size: 25557
Maintainer: Debian Vim Maintainers <pkg-vim-maintainers@lists.alioth.debian.org>
Architecture: all
Source: vim
Version: 2:7.4.488-7+deb8u3
Recommends: vim | vim-gnome | vim-gtk | vim-athena | vim-nox | vim-tiny
Breaks: vim-tiny (<< 2:7.4.488-7+deb8u3)
Enhances: vim-tiny
Description: Vi IMproved - Runtime files
 Vim is an almost compatible version of the UNIX editor Vi.
 .
 Many new features have been added: multi level undo, syntax
 highlighting, command line history, on-line help, filename
 completion, block operations, folding, Unicode support, etc.
 .
 This package contains vimtutor and the architecture independent runtime
 files, used, if available, by all vim variants available in Debian.
 Example of such runtime files are: online documentation, rules for
 language-specific syntax highlighting and indentation, color schemes,
 and standard plugins.
Homepage: http://www.vim.org/

Package: libsvn1
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 2556
Maintainer: Peter Samuelson <peter@p12n.org>
Architecture: armhf
Multi-Arch: same
Source: subversion
Version: 1.8.10-6+deb8u4
Depends: libsqlite3-0 (>= 3.7.12), libapr1 (>= 1.4.8-2~), libaprutil1 (>= 1.4.0), libc6 (>= 2.4), libdb5.3, libexpat1 (>= 2.0.1), libldap-2.4-2 (>= 2.4.7), libsasl2-2, libserf-1-1 (>= 1.2), zlib1g (>= 1:1.2.0)
Pre-Depends: multiarch-support
Description: Shared libraries used by Apache Subversion
 This package includes shared libraries to manipulate Apache Subversion
 (svn) repositories and working copies.  See the 'subversion' package for
 more information.
Homepage: http://subversion.apache.org/

Package: libavahi-client3
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 95
Maintainer: Utopia Maintenance Team <pkg-utopia-maintainers@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: avahi
Version: 0.6.31-5
Depends: libavahi-common3 (>= 0.6.22), libc6 (>= 2.4), libdbus-1-3 (>= 1.1.1)
Pre-Depends: multiarch-support
Description: Avahi client library
 Avahi is a fully LGPL framework for Multicast DNS Service Discovery.
 It allows programs to publish and discover services and hosts
 running on a local network with no specific configuration. For
 example you can plug into a network and instantly find printers to
 print to, files to look at and people to talk to.
 .
 This package contains the library for Avahi's C API which  allows you
 to integrate mDNS/DNS-SD functionality into your application.
Homepage: http://avahi.org/

Package: libpam-modules
Status: install ok installed
Priority: required
Section: admin
Installed-Size: 680
Maintainer: Steve Langasek <vorlon@debian.org>
Architecture: armhf
Multi-Arch: same
Source: pam
Version: 1.1.8-3.1+deb8u2+rpi3
Replaces: libpam-umask, libpam0g-util
Provides: libpam-mkhomedir, libpam-motd, libpam-umask
Pre-Depends: libaudit1 (>= 1:2.2.1), libc6 (>= 2.15), libdb5.3, libpam0g (>= 1.1.3-2), libselinux1 (>= 2.1.9), debconf (>= 0.5) | debconf-2.0, libpam-modules-bin (= 1.1.8-3.1+deb8u2+rpi3)
Conflicts: libpam-mkhomedir, libpam-motd, libpam-umask
Conffiles:
 /etc/security/access.conf 13ec4d189f0ed9acf3433977a53d446b
 /etc/security/group.conf f1e26e8db6f7abd2d697d7dad3422c36
 /etc/security/limits.conf 11c27ba00b7bd6a255f33126f75c5005
 /etc/security/namespace.conf 6424c99a62ddf4b7d3ca713bb06ded89
 /etc/security/namespace.init b46b23d64860d1557d2a8f44b231fd54
 /etc/security/pam_env.conf ddee4a931170dc21b4e0b9bb28e02a7b
 /etc/security/sepermit.conf d41c74654734a5c069a37bfc02f0a6d4
 /etc/security/time.conf 06e05c6079e839c8833ac7c3abfde192
Description: Pluggable Authentication Modules for PAM
 This package completes the set of modules for PAM. It includes the
  pam_unix.so module as well as some specialty modules.
Homepage: http://pam.sourceforge.net/

Package: gdbserver
Status: install ok installed
Priority: optional
Section: devel
Installed-Size: 385
Maintainer: Héctor Orón Martínez <zumbi@debian.org>
Architecture: armhf
Source: gdb
Version: 7.7.1+dfsg-5+rpi1
Replaces: gdb (<< 7.0.1-1)
Depends: libc6 (>= 2.9)
Description: GNU Debugger (remote server)
 GDB is a source-level debugger, capable of breaking programs at
 any specific line, displaying variable values, and determining
 where errors occurred. Currently, gdb supports C, C++, D,
 Objective-C, Fortran, Java, OpenCL C, Pascal, assembly, Modula-2,
 Go, and Ada. A must-have for any serious programmer.
 .
 This package contains gdbserver.  Install this to debug remotely
 from another system where GDB is installed.
Homepage: http://www.gnu.org/s/gdb/

Package: libmpc3
Status: install ok installed
Priority: extra
Section: libs
Installed-Size: 73
Maintainer: Laurent Fousse <lfousse@debian.org>
Architecture: armhf
Multi-Arch: same
Source: mpclib3
Version: 1.0.2-1
Depends: libc6 (>= 2.4), libgmp10, libmpfr4 (>= 3.1.2)
Pre-Depends: multiarch-support
Description: multiple precision complex floating-point library
 MPC is a portable library written in C for arbitrary precision
 arithmetic on complex numbers providing correct rounding. For the time
 being, it contains all arithmetic operations over complex numbers, the
 exponential and the logarithm functions, the trigonometric and
 hyperbolic functions.
 .
 Ultimately, it should implement a multiprecision equivalent of the ISO
 C99 standard.
 .
 It builds upon the GNU MP and the MPFR libraries.
Homepage: http://www.multiprecision.org/mpc/

Package: insserv
Status: install ok installed
Priority: optional
Section: misc
Installed-Size: 174
Maintainer: Petter Reinholdtsen <pere@debian.org>
Architecture: armhf
Version: 1.14.0-5
Depends: libc6 (>= 2.13-28)
Suggests: bootchart2
Breaks: sysv-rc (<< 2.87dsf-3)
Conffiles:
 /etc/insserv.conf b15785c0c4b022a3ba0edb78ba71297c
 /etc/bash_completion.d/insserv 32975fe14795d6fce1408d5fd22747fd
Description: boot sequence organizer using LSB init.d script dependency information
 The insserv program is used by the standard SysV-based init system. It
 updates the order of symlinks in /etc/rc?.d/ based on dependencies
 specified by LSB headers in the init.d scripts themselves.
 .
 These declared relations between scripts make it possible to optimize
 the boot sequence for the currently installed set of packages, while
 detecting and rejecting dependency loops.
 .
 Using insserv incorrectly can result in an unbootable system.
Homepage: http://savannah.nongnu.org/projects/sysvinit

Package: libstdc++6
Status: install ok installed
Priority: important
Section: libs
Installed-Size: 1060
Maintainer: Debian GCC Maintainers <debian-gcc@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: gcc-4.9
Version: 4.9.2-10
Replaces: libstdc++6-4.9-dbg (<< 4.9.0-3)
Provides: libstdc++6-armhf
Depends: gcc-4.9-base (= 4.9.2-10), libc6 (>= 2.18), libgcc1 (>= 1:4.4.0)
Pre-Depends: multiarch-support
Breaks: gcc-4.3 (<< 4.3.6-1), gcc-4.4 (<< 4.4.6-4), gcc-4.5 (<< 4.5.3-2)
Conflicts: scim (<< 1.4.2-1)
Description: GNU Standard C++ Library v3
 This package contains an additional runtime library for C++ programs
 built with the GNU compiler.
 .
 libstdc++-v3 is a complete rewrite from the previous libstdc++-v2, which
 was included up to g++-2.95. The first version of libstdc++-v3 appeared
 in g++-3.0.
Homepage: http://gcc.gnu.org/

Package: libtalloc2
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 86
Maintainer: Debian Samba Maintainers <pkg-samba-maint@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: talloc
Version: 2.1.2-0+deb8u1
Depends: libc6 (>= 2.4)
Pre-Depends: multiarch-support
Description: hierarchical pool based memory allocator
 A hierarchical pool based memory allocator with destructors. It uses
 reference counting to determine when memory should be freed.
Homepage: http://talloc.samba.org/

Package: libkrb5-3
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 779
Maintainer: Sam Hartman <hartmans@debian.org>
Architecture: armhf
Multi-Arch: same
Source: krb5
Version: 1.12.1+dfsg-19+deb8u2
Depends: libc6 (>= 2.16), libcomerr2 (>= 1.34), libk5crypto3 (>= 1.9+dfsg~beta1), libkeyutils1 (>= 1.5.9), libkrb5support0 (= 1.12.1+dfsg-19+deb8u2)
Pre-Depends: multiarch-support
Recommends: krb5-locales
Suggests: krb5-doc, krb5-user
Breaks: libsmbclient (<= 2:3.6.1-2), sssd (<= 1.2.1-4.3)
Conflicts: libkrb53
Description: MIT Kerberos runtime libraries
 Kerberos is a system for authenticating users and services on a network.
 Kerberos is a trusted third-party service.  That means that there is a
 third party (the Kerberos server) that is trusted by all the entities on
 the network (users and services, usually called "principals").
 .
 This is the MIT reference implementation of Kerberos V5.
 .
 This package contains the runtime library for the main Kerberos v5 API
 used by applications and Kerberos clients.
Homepage: http://web.mit.edu/kerberos/

Package: gcc-4.9-base
Status: install ok installed
Priority: required
Section: libs
Installed-Size: 178
Maintainer: Debian GCC Maintainers <debian-gcc@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: gcc-4.9
Version: 4.9.2-10
Breaks: dehydra (<= 0.9.hg20110609-2), gcc-4.4-base (<< 4.4.7), gcc-4.7-base (<< 4.7.3), gcj-4.4-base (<< 4.4.6-9~), gcj-4.6-base (<< 4.6.1-4~), gnat-4.4-base (<< 4.4.6-3~), gnat-4.6 (<< 4.6.1-5~)
Description: GCC, the GNU Compiler Collection (base package)
 This package contains files common to all languages and libraries
 contained in the GNU Compiler Collection (GCC).
Homepage: http://gcc.gnu.org/

Package: binutils
Status: install ok installed
Priority: optional
Section: devel
Installed-Size: 18681
Maintainer: Matthias Klose <doko@debian.org>
Architecture: armhf
Version: 2.25-5+deb8u1
Replaces: binutils-gold (<< 2.20.51.20100415), binutils-mingw-w64-i686 (<< 2.23.52.20130612-1+3), binutils-mingw-w64-x86-64 (<< 2.23.52.20130612-1+3)
Provides: binutils-gold, elf-binutils
Depends: libc6 (>= 2.11), zlib1g (>= 1:1.2.0)
Suggests: binutils-doc (>= 2.25-5+deb8u1)
Breaks: binutils-mingw-w64-i686 (<< 2.23.52.20130612-1+3), binutils-mingw-w64-x86-64 (<< 2.23.52.20130612-1+3)
Conflicts: binutils-gold (<< 2.20.51.20100415), elf-binutils, gas, modutils (<< 2.4.19-1)
Description: GNU assembler, linker and binary utilities
 The programs in this package are used to assemble, link and manipulate
 binary and object files.  They may be used in conjunction with a compiler
 and various libraries to build programs.

Package: libffi6
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 38
Maintainer: Debian GCC Maintainers <debian-gcc@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: libffi
Version: 3.1-2
Depends: libc6 (>= 2.4), libgcc1 (>= 1:4.4.0)
Pre-Depends: multiarch-support
Description: Foreign Function Interface library runtime
 A foreign function interface is the popular name for the interface that
 allows code written in one language to call code written in another
 language.

Package: libaudit-common
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 49
Maintainer: Laurent Bigonville <bigon@debian.org>
Architecture: all
Multi-Arch: foreign
Source: audit
Version: 1:2.4-1
Replaces: libaudit0, libaudit1 (<< 1:2.2.1-2)
Breaks: libaudit0, libaudit1 (<< 1:2.2.1-2)
Conffiles:
 /etc/libaudit.conf cdc703f9d27f0d980271a9e95d0f18b2
Description: Dynamic library for security auditing - common files
 The audit-libs package contains the dynamic libraries needed for
 applications to use the audit framework. It is used to monitor systems for
 security related events.
 .
 This package contains the libaudit.conf configuration file and the associated
 manpage.
Homepage: http://people.redhat.com/sgrubb/audit/

Package: libtext-charwidth-perl
Status: install ok installed
Priority: required
Section: perl
Installed-Size: 15
Maintainer: Anibal Monsalve Salazar <anibal@debian.org>
Architecture: armhf
Source: libtext-charwidth-perl (0.04-7)
Version: 0.04-7+b4
Depends: libc6 (>= 2.4), perl-base (>= 5.20.0-4), perlapi-5.20.0
Description: get display widths of characters on the terminal
 This module permits perl software to get the display widths of characters
 and strings on the terminal, using wcwidth() and wcswidth() from libc.
 .
 It provides mbwidth(), mbswidth(), and mblen().
Homepage: http://search.cpan.org/search?module=Text::CharWidth

Package: device-tree-compiler
Status: install ok installed
Priority: extra
Section: devel
Installed-Size: 488
Maintainer: Hector Oron <zumbi@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 1.4.1-1+rpi1
Depends: libc6 (>= 2.7)
Description: Device Tree Compiler for Flat Device Trees
 Device Tree Compiler, dtc, takes as input a device-tree in
 a given format and outputs a device-tree in another format
 for booting kernels on embedded systems.
 .
 Typically, the input format is "dts", a human readable source
 format, and creates a "dtb", or binary format as output.
Homepage: http://git.jdl.com/gitweb/?p=dtc.git

Package: libc-dev-bin
Status: install ok installed
Priority: optional
Section: libdevel
Installed-Size: 322
Maintainer: GNU Libc Maintainers <debian-glibc@lists.debian.org>
Architecture: armhf
Multi-Arch: foreign
Source: glibc
Version: 2.19-18+deb8u9
Replaces: libc0.1-dev, libc0.3-dev, libc6-dev, libc6.1-dev
Depends: libc6 (>> 2.19), libc6 (<< 2.20)
Recommends: manpages-dev
Description: GNU C Library: Development binaries
 This package contains utility programs related to the GNU C Library
 development package.
Homepage: http://www.gnu.org/software/libc/libc.html

Package: libavahi-common3
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 80
Maintainer: Utopia Maintenance Team <pkg-utopia-maintainers@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: avahi
Version: 0.6.31-5
Depends: libc6 (>= 2.4), libavahi-common-data
Pre-Depends: multiarch-support
Description: Avahi common library
 Avahi is a fully LGPL framework for Multicast DNS Service Discovery.
 It allows programs to publish and discover services and hosts
 running on a local network with no specific configuration. For
 example you can plug into a network and instantly find printers to
 print to, files to look at and people to talk to.
 .
 This package contains the Avahi common library, which is a set of common
 functions used by many of Avahis components and client applications.
Homepage: http://avahi.org/

Package: libkrb5-26-heimdal
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 538
Maintainer: Brian May <bam@debian.org>
Architecture: armhf
Multi-Arch: same
Source: heimdal
Version: 1.6~rc2+dfsg-9+rpi1
Depends: libasn1-8-heimdal (>= 1.6~git20131117), libc6 (>= 2.15), libcomerr2 (>= 1.41.11), libhcrypto4-heimdal (>= 1.4.0+git20110226), libheimbase1-heimdal (>= 1.6~git20131117), libhx509-5-heimdal (>= 1.4.0+git20110226), libroken18-heimdal (>= 1.6~git20131117), libsqlite3-0 (>= 3.5.9), libwind0-heimdal (>= 1.6~git20120311)
Pre-Depends: multiarch-support
Description: Heimdal Kerberos - libraries
 Heimdal is a free implementation of Kerberos 5 that aims to be
 compatible with MIT Kerberos.
 .
 This package contains the Kerberos 5 library.
Homepage: http://www.h5l.org/

Package: libcomerr2
Status: install ok installed
Priority: required
Section: libs
Installed-Size: 64
Maintainer: Theodore Y. Ts'o <tytso@mit.edu>
Architecture: armhf
Multi-Arch: same
Source: e2fsprogs
Version: 1.42.12-2
Replaces: e2fsprogs (<< 1.34-1)
Provides: libcomerr-kth-compat
Depends: libc6 (>= 2.17)
Pre-Depends: multiarch-support
Description: common error description library
 libcomerr is an attempt to present a common error-handling mechanism to
 manipulate the most common form of error code in a fashion that does not
 have the problems identified with mechanisms commonly in use.
Homepage: http://e2fsprogs.sourceforge.net

Package: iw
Status: install ok installed
Priority: optional
Section: net
Installed-Size: 147
Maintainer: Debian wpasupplicant Maintainers <pkg-wpa-devel@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 3.17-1
Replaces: aircrack-ng (<< 1:1.0~rc2-1)
Depends: libc6 (>= 2.7), libnl-3-200 (>= 3.2.7), libnl-genl-3-200 (>= 3.2.7)
Recommends: crda
Breaks: aircrack-ng (<< 1:1.0~rc2-1)
Description: tool for configuring Linux wireless devices
 This package contains the `iw' tool which allows you to configure and show
 information about wireless networking.
 .
 In the future iw will become the canonical command line tool for wireless
 configuration and iwconfig/wireless-tools will no longer be required. See
 /usr/share/doc/iw/README.Debian for a more detailed overview of iw.
Homepage: http://wireless.kernel.org/en/users/Documentation/iw

Package: findutils
Essential: yes
Status: install ok installed
Priority: required
Section: utils
Installed-Size: 1189
Maintainer: Andreas Metzler <ametzler@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 4.4.2-9
Pre-Depends: libc6 (>= 2.17)
Suggests: mlocate | locate
Description: utilities for finding files--find, xargs
 GNU findutils provides utilities to find files meeting specified
 criteria and perform various actions on the files which are found.
 This package contains 'find' and 'xargs'; however, 'locate' has
 been split off into a separate package.
Homepage: http://savannah.gnu.org/projects/findutils/

Package: libpam0g
Status: install ok installed
Priority: required
Section: libs
Installed-Size: 187
Maintainer: Steve Langasek <vorlon@debian.org>
Architecture: armhf
Multi-Arch: same
Source: pam
Version: 1.1.8-3.1+deb8u2+rpi3
Replaces: libpam0g-util
Depends: libaudit1 (>= 1:2.2.1), libc6 (>= 2.8), debconf (>= 0.5) | debconf-2.0
Suggests: libpam-doc
Description: Pluggable Authentication Modules library
 Contains the shared library for Linux-PAM, a library that enables the
 local system administrator to choose how applications authenticate users.
 In other words, without rewriting or recompiling a PAM-aware application,
 it is possible to switch between the authentication mechanism(s) it uses.
 One may entirely upgrade the local authentication system without touching
 the applications themselves.
Homepage: http://pam.sourceforge.net/

Package: libxdmcp6
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 64
Maintainer: Debian X Strike Force <debian-x@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: libxdmcp
Version: 1:1.1.1-1
Depends: libc6 (>= 2.13-28)
Pre-Depends: multiarch-support
Description: X11 Display Manager Control Protocol library
 This package provides the main interface to the X11 display manager control
 protocol library, which allows for remote logins to display managers.
 .
 More information about X.Org can be found at:
 <URL:http://www.X.org>
 .
 This module can be found at
 git://anongit.freedesktop.org/git/xorg/lib/libXdmcp

Package: xml-core
Status: install ok installed
Priority: optional
Section: text
Installed-Size: 188
Maintainer: Debian XML/SGML Group <debian-xml-sgml-pkgs@lists.alioth.debian.org>
Architecture: all
Version: 0.13+nmu2
Depends: sgml-base (>= 1.26+nmu2), sed (>= 4.1.2-8)
Suggests: debhelper (>= 9.20120909)
Conffiles:
 /etc/sgml/xml-core.cat 055ba0bd3154c0a58b9bf8a0c9ecf2fa
Description: XML infrastructure and XML catalog file support
 This package creates the XML infrastructure directories and provides
 XML catalog file support in compliance with the current Debian XML
 Policy draft:
 .
   * infrastructure directories:
      - /etc/xml
      - /usr/share/xml/{declaration,entities,misc,schema}
      - /usr/local/share/xml/{declaration,entities,misc,schema}
 .
   * XML catalog schema: OASIS XML Catalog Committee Specification 1.0
 .
   * update-xmlcatalog(8): tool for maintaining the root XML catalog
     file and the package XML catalog files in the '/etc/xml' directory
     as well as local XML catalog files.
 .
   * dh_installxmlcatalogs(1): debhelper tool for installing local XML
     catalog files and registering XML entities in package XML catalog
     files and the root XML catalog file (requires debhelper package)

Package: libcap-ng0
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 23
Maintainer: Pierre Chifflier <pollux@debian.org>
Architecture: armhf
Multi-Arch: same
Source: libcap-ng
Version: 0.7.4-2
Depends: libc6 (>= 2.8)
Pre-Depends: multiarch-support
Description: An alternate POSIX capabilities library
 This library implements the user-space interfaces to the POSIX
 1003.1e capabilities available in Linux kernels.  These capabilities are
 a partitioning of the all powerful root privilege into a set of distinct
 privileges.
 .
 The libcap-ng library is intended to make programming with POSIX
 capabilities much easier than the traditional libcap library.
 .
 This package contains header files and libraries for libcap-ng.
Homepage: http://people.redhat.com/sgrubb/libcap-ng

Package: samba
Status: install ok installed
Priority: optional
Section: net
Installed-Size: 10891
Maintainer: Debian Samba Maintainers <pkg-samba-maint@lists.alioth.debian.org>
Architecture: armhf
Version: 2:4.2.14+dfsg-0+deb8u6
Replaces: libsamdb0 (<< 4.0.0~alpha17~), python-samba (<< 2:4.1.4+dfsg-3), samba-ad-dc, samba-common (<= 2.0.5a-2), samba-doc (<< 2:4.0.5~), samba-libs (<< 2:4.1.4+dfsg-2), samba4
Depends: adduser, heimdal-hdb-api-8, libpam-modules, libpam-runtime (>= 1.0.1-11), lsb-base (>= 4.1+Debian), procps, python (>= 2.7), python-dnspython, python-ntdb, python-samba, samba-common (= 2:4.2.14+dfsg-0+deb8u6), samba-common-bin (= 2:4.2.14+dfsg-0+deb8u6), samba-dsdb-modules, tdb-tools, update-inetd, python (<< 2.8), python2.7:any, libbsd0 (>= 0.0), libc6 (>= 2.8), libldb1 (>= 0.9.21), libpopt0 (>= 1.14), libpython2.7 (>= 2.7), libtalloc2 (>= 2.0.4~git20101213), libtdb1 (>= 1.2.7+git20101214), libtevent0 (>= 0.9.16), samba-libs (= 2:4.2.14+dfsg-0+deb8u6)
Pre-Depends: dpkg (>= 1.15.6~), multiarch-support
Recommends: attr, logrotate, samba-vfs-modules
Suggests: bind9 (>= 1:9.5.1), bind9utils, ctdb, ldb-tools, ntp, smbldap-tools, winbind
Breaks: qtsmbstatus-server (<< 2.2.1-3~)
Conflicts: libldb1 (<< 1:1.1.15), samba (<< 2:3.3.0~rc2-5), samba-ad-dc, samba-doc (<< 2:4.0.5~), samba-tools, samba4 (<< 4.0.0~alpha6-2)
Enhances: bind9, ntp
Conffiles:
 /etc/cron.daily/samba f6519535df7964f95cdd7db501bf3ad2
 /etc/init.d/nmbd c19dc4a38fe471db5a22a054c268a08f
 /etc/init.d/samba 16348ccdfd945c155f9fd5972f51f492
 /etc/init.d/samba-ad-dc 1dd4ef12d288c9f0be8ac8b644c0314f
 /etc/init.d/smbd 6d0b96aea9e442bb0acf2909a7913e1f
 /etc/init/nmbd.conf 737e820c320801a2a0fc9e9c84d43fc0
 /etc/init/reload-smbd.conf 2a250669b46167f3b6152a90344626c1
 /etc/init/samba-ad-dc.conf b9b7410f057a35e05d30d2ef15f370d4
 /etc/init/smbd.conf f2c5e46c7d8ece70bfeb83b772050be1
 /etc/logrotate.d/samba 40a47ace249ba71943602f8bcc316f53
Description: SMB/CIFS file, print, and login server for Unix
 Samba is an implementation of the SMB/CIFS protocol for Unix systems,
 providing support for cross-platform file and printer sharing with
 Microsoft Windows, OS X, and other Unix systems.  Samba can also function
 as an NT4-style domain controller, and can integrate with both NT4 domains
 and Active Directory realms as a member server.
 .
 This package provides the components necessary to use Samba as a stand-alone
 file and print server or as an NT4 or Active Directory domain controller.
 For use in an NT4 domain or Active Directory realm, you will also need the
 winbind package.
 .
 This package is not required for connecting to existing SMB/CIFS servers
 (see smbclient) or for mounting remote filesystems (see cifs-utils).
Homepage: http://www.samba.org

Package: dbus
Status: install ok installed
Priority: standard
Section: admin
Installed-Size: 750
Maintainer: Utopia Maintenance Team <pkg-utopia-maintainers@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 1.8.22-0+deb8u1
Depends: libaudit1 (>= 1:2.2.1), libc6 (>= 2.17), libcap-ng0, libdbus-1-3 (>= 1.7.6), libexpat1 (>= 2.0.1), libselinux1 (>= 2.0.65), libsystemd0, adduser, lsb-base (>= 3.2-14)
Suggests: dbus-x11
Conffiles:
 /etc/dbus-1/session.conf b96c3a72dbcf8d8019f8d9b3b0c1b743
 /etc/dbus-1/system.conf cc9caaf3b2f4a11f188bf81f0e59eabb
 /etc/default/dbus 0d0f25a2f993509c857eb262f6e22015
 /etc/init.d/dbus ec9a7d183ec50837a12aca3f9c95cc27
Description: simple interprocess messaging system (daemon and utilities)
 D-Bus is a message bus, used for sending messages between applications.
 Conceptually, it fits somewhere in between raw sockets and CORBA in
 terms of complexity.
 .
 D-Bus supports broadcast messages, asynchronous messages (thus
 decreasing latency), authentication, and more. It is designed to be
 low-overhead; messages are sent using a binary protocol, not using
 XML. D-Bus also supports a method call mapping for its messages, but
 it is not required; this makes using the system quite simple.
 .
 It comes with several bindings, including GLib, Python, Qt and Java.
 .
 This package contains the D-Bus daemon and related utilities.
 .
 The client-side library can be found in the libdbus-1-3 package, as it is no
 longer contained in this package.
Homepage: http://dbus.freedesktop.org/

Package: libmount1
Status: install ok installed
Priority: required
Section: libs
Installed-Size: 318
Maintainer: Debian util-linux Maintainers <ah-util-linux@debian.org>
Architecture: armhf
Multi-Arch: same
Source: util-linux
Version: 2.25.2-6
Depends: libblkid1 (>= 2.17.2), libc6 (>= 2.17), libselinux1 (>= 1.32)
Pre-Depends: multiarch-support
Description: device mounting library
 The device mounting library, used by mount and umount helpers.

Package: libkeyutils1
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 18
Maintainer: Christian Kastner <debian@kvr.at>
Architecture: armhf
Multi-Arch: same
Source: keyutils
Version: 1.5.9-5
Depends: libc6 (>= 2.7)
Pre-Depends: multiarch-support
Description: Linux Key Management Utilities (library)
 Keyutils is a set of utilities for managing the key retention facility in the
 kernel, which can be used by filesystems, block devices and more to gain and
 retain the authorization and encryption keys required to perform secure
 operations.
 .
 This package provides a wrapper library for the key management facility system
 calls.
Homepage: http://people.redhat.com/~dhowells/keyutils/

Package: libnewt0.52
Status: install ok installed
Priority: important
Section: libs
Installed-Size: 141
Maintainer: Alastair McKinstry <mckinstry@debian.org>
Architecture: armhf
Multi-Arch: same
Source: newt
Version: 0.52.17-1
Depends: libc6 (>= 2.15), libslang2 (>= 2.2.4)
Pre-Depends: multiarch-support
Recommends: libfribidi0
Conffiles:
 /etc/newt/palette.original d41d8cd98f00b204e9800998ecf8427e
Description: Not Erik's Windowing Toolkit - text mode windowing with slang
 Newt is a windowing toolkit for text mode built from the slang library.
 It allows color text mode applications to easily use stackable windows,
 push buttons, check boxes, radio buttons, lists, entry fields, labels,
 and displayable text. Scrollbars are supported, and forms may be nested
 to provide extra functionality. This package contains the shared library
 for programs that have been built with newt.
Homepage: https://fedorahosted.org/newt/

Package: htop
Status: install ok installed
Priority: optional
Section: utils
Installed-Size: 132
Maintainer: Eugene V. Lyubimkin <jackyf@debian.org>
Architecture: armhf
Version: 1.0.3-1
Depends: libc6 (>= 2.15), libncursesw5 (>= 5.6+20070908), libtinfo5
Suggests: strace, ltrace
Description: interactive processes viewer
 Htop is an ncursed-based process viewer similar to top, but it
 allows one to scroll the list vertically and horizontally to see
 all processes and their full command lines.
 .
 Tasks related to processes (killing, renicing) can be done without
 entering their PIDs.
Homepage: http://hisham.hm/htop/

Package: bsdmainutils
Status: install ok installed
Priority: important
Section: utils
Installed-Size: 445
Maintainer: Debian Bsdmainutils Team <pkg-bsdmainutils@teams.debian.net>
Architecture: armhf
Multi-Arch: foreign
Version: 9.0.6
Depends: libc6 (>= 2.4), libncurses5 (>= 5.5-5~), libtinfo5, bsdutils (>= 3.0-0), debianutils (>= 1.8)
Suggests: cpp, wamerican | wordlist, whois, vacation
Breaks: bsdutils (<< 1:2.13-11)
Conffiles:
 /etc/calendar/default f499e79b0d2d685aa5ae7e1013940b96
 /etc/cron.daily/bsdmainutils 559387f792462a62e3efb1d573e38d11
 /etc/default/bsdmainutils bded239f4fea461cc5c92c3bd5a28cc9
Description: collection of more utilities from FreeBSD
 This package contains lots of small programs many people expect to find when
 they use a BSD-style Unix system.
 .
 It provides banner (as printerbanner), calendar, col, colcrt, colrm, column,
 from (as bsd-from), hexdump (or hd), look, lorder, ncal (or cal), ul, and
 write (as bsd-write).
 .
 This package used to contain whois and vacation, which are now distributed in
 their own packages. Also here was tsort, which is now in the "coreutils"
 package.

Package: libsasl2-modules
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 202
Maintainer: Debian Cyrus SASL Team <pkg-cyrus-sasl2-debian-devel@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: cyrus-sasl2
Version: 2.1.26.dfsg1-13+deb8u1
Depends: libc6 (>= 2.4), libssl1.0.0 (>= 1.0.0)
Suggests: libsasl2-modules-otp, libsasl2-modules-ldap, libsasl2-modules-sql, libsasl2-modules-gssapi-mit | libsasl2-modules-gssapi-heimdal
Breaks: logcheck-database (<= 1.3.16~)
Conffiles:
 /etc/logcheck/ignore.d.server/libsasl2-modules c032d5205f090a30661ae9f82a03f36e
Description: Cyrus SASL - pluggable authentication modules
 This is the Cyrus SASL API implementation, version 2.1. See package
 libsasl2-2 and RFC 2222 for more information.
 .
 This package provides the following SASL modules: LOGIN, PLAIN, ANONYMOUS,
 NTLM, CRAM-MD5, and DIGEST-MD5 (with DES support).
Homepage: http://www.cyrusimap.org/

Package: console-setup-linux
Status: install ok installed
Priority: optional
Section: utils
Installed-Size: 1042
Maintainer: Debian Install System Team <debian-boot@lists.debian.org>
Architecture: all
Multi-Arch: foreign
Source: console-setup
Version: 1.123
Replaces: console-setup (<< 1.71), console-terminus
Provides: console-terminus
Depends: kbd (>= 0.99-12) | console-tools (>= 1:0.2.3-16), keyboard-configuration (= 1.123)
Suggests: console-setup
Breaks: console-cyrillic (<= 0.9-11), console-setup (<< 1.71), console-terminus
Conffiles:
 /etc/console-setup/compose.ARMSCII-8.inc fef36b61fb8b1cacc151ad3db127f777
 /etc/console-setup/compose.CP1251.inc fef88d8c8dd4c726498003fd3cd84a7f
 /etc/console-setup/compose.CP1255.inc c972a2e90938657e97b643366b98b2ed
 /etc/console-setup/compose.CP1256.inc 5ea5e4d41da7a88f742863810e86144b
 /etc/console-setup/compose.GEORGIAN-ACADEMY.inc b6d80f40abff7e8af236796ebaca0247
 /etc/console-setup/compose.GEORGIAN-PS.inc cf45272b6bf35a22223b132600dc36c3
 /etc/console-setup/compose.IBM1133.inc a31102602f7e7cab9738022b6c5469ae
 /etc/console-setup/compose.ISIRI-3342.inc 5ada7fbba750192f11fa238add232ba9
 /etc/console-setup/compose.ISO-8859-1.inc b55c4d13def720c6a60ce2ddb53c0df4
 /etc/console-setup/compose.ISO-8859-10.inc e5fce59617c839b56574c9e323d34686
 /etc/console-setup/compose.ISO-8859-11.inc ad2f3cc7ee64602a790bad8a2a989243
 /etc/console-setup/compose.ISO-8859-13.inc 0d0c5a9ec77a751ef7e417ba395a7368
 /etc/console-setup/compose.ISO-8859-14.inc 0708a0184b14d7ab68c8ae8064af3a5f
 /etc/console-setup/compose.ISO-8859-15.inc 4500ae5af6a4a66556760b04a41ac9e1
 /etc/console-setup/compose.ISO-8859-16.inc 8245c19b5262d8d23ca856587739eb20
 /etc/console-setup/compose.ISO-8859-2.inc d859a2283d9ae21777479c82c8133b38
 /etc/console-setup/compose.ISO-8859-3.inc 9225a89daf660905f16006952c4861b9
 /etc/console-setup/compose.ISO-8859-4.inc 67abc27386a6fbb3f8e74c4dcc49c782
 /etc/console-setup/compose.ISO-8859-5.inc f861a4b0403490677e6d400f2d7129da
 /etc/console-setup/compose.ISO-8859-6.inc 41ea36ea1c1a1c0c9bebdf0016395e1f
 /etc/console-setup/compose.ISO-8859-7.inc 11985848d6ba802fbbeb78705c1284a8
 /etc/console-setup/compose.ISO-8859-8.inc 9cceaa9f3312f89aba371d3c893f4e7b
 /etc/console-setup/compose.ISO-8859-9.inc 8551012d3bc2e267433cfd218efc7bad
 /etc/console-setup/compose.KOI8-R.inc 8cfd7766b86e5e55d6e71d0d95519c92
 /etc/console-setup/compose.KOI8-U.inc 217ee62f6982736276f41f760f8622f8
 /etc/console-setup/compose.TIS-620.inc 31b73af83ef3993c128e2b983b9eaf89
 /etc/console-setup/compose.VISCII.inc e4ffc74868adf4cc39ba61dd99581899
 /etc/console-setup/remap.inc b72cfe32ffa93987f74c5cec9ac180fd
Description: Linux specific part of console-setup
 This package includes fonts in psf format and definitions of various
 8-bit charmaps.

Package: login
Essential: yes
Status: install ok installed
Priority: required
Section: admin
Installed-Size: 2153
Maintainer: Shadow package maintainers <pkg-shadow-devel@lists.alioth.debian.org>
Architecture: armhf
Source: shadow
Version: 1:4.2-3+deb8u4
Replaces: manpages-de (<< 0.5-3), manpages-tr (<< 1.0.5), manpages-zh (<< 1.5.1-1)
Pre-Depends: libaudit1 (>= 1:2.2.1), libc6 (>= 2.7), libpam0g (>= 0.99.7.1), libpam-runtime, libpam-modules (>= 1.1.8-1)
Conflicts: amavisd-new (<< 2.3.3-8), backupninja (<< 0.9.3-5), echolot (<< 2.1.8-4), gnunet (<< 0.7.0c-2), python-4suite (<< 0.99cvs20060405-1)
Conffiles:
 /etc/login.defs c8e7f89a2c5665cf75a760d4341ce2d2
 /etc/pam.d/login 8cc9269fe679cb725d55925e95914499
 /etc/pam.d/su ce6dcfda3b190a27a455bb38a45ff34a
 /etc/securetty d9e5bf5e6bfa00ddd273a3bcf1a49bec
Description: system login tools
 These tools are required to be able to login and use your system. The
 login program invokes your user shell and enables command execution. The
 newgrp program is used to change your effective group ID (useful for
 workgroup type situations). The su program allows changing your effective
 user ID (useful being able to execute commands as another user).
Homepage: http://pkg-shadow.alioth.debian.org/

Package: libmodule-build-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 618
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: all
Version: 0.421000-2+deb8u1
Depends: perl, libcpan-meta-perl (>= 2.142060) | perl (>= 5.21.3), libperl-ostype-perl, perl (>= 5.11.2) | libextutils-cbuilder-perl, perl (>= 5.12) | libextutils-parsexs-perl, perl (>= 5.13.9) | libmodule-metadata-perl, perl (>= 5.13.9) | libversion-perl (>= 1:0.8700)
Recommends: libarchive-tar-perl, libmodule-signature-perl, libpod-readme-perl, libsoftware-license-perl (>= 0.103009)
Description: framework for building and installing Perl modules
 Module::Build is a framework for easily building, testing and installing Perl
 packages. It is meant as a next-generation replacement for ExtUtils::MakeMaker
 and offers many additional features characteristic of a more modern install
 system, including simple subclassing for custom build actions.
 .
 Because it is written in Pure Perl, it has very few external dependencies. In
 particular, it allows for installation of packages on systems without 'make'
 and will even work without a shell. Its only prerequisites are modules that
 are included with perl 5.6.0 and it is core as of perl 5.10.
Homepage: https://metacpan.org/release/Module-Build

Package: libevent-2.0-5
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 288
Maintainer: Anibal Monsalve Salazar <anibal@debian.org>
Architecture: armhf
Multi-Arch: same
Source: libevent
Version: 2.0.21-stable-2+deb8u1
Depends: libc6 (>= 2.17)
Pre-Depends: multiarch-support
Description: Asynchronous event notification library
 Libevent is an asynchronous event notification library that provides a
 mechanism to execute a callback function when a specific event occurs
 on a file descriptor or after a timeout has been reached.
 .
 It is meant to replace the asynchronous event loop found in
 event driven network servers. Currently, libevent supports /dev/poll,
 kqueue(2), event ports, select(2), poll(2) and epoll(4).
 .
 For backward compatibility and to transition to "libevent_core only"
 or "libevent_core + libevent_extra", the libevent source package builds
 the libevent library that includes everything in libevent_core and
 libevent_extra.
Homepage: http://libevent.org/

Package: libsamplerate0
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 1463
Maintainer: Erik de Castro Lopo <erikd@mega-nerd.com>
Architecture: armhf
Multi-Arch: same
Source: libsamplerate
Version: 0.1.8-8
Replaces: samplerate-programs (<< 0.1.8-3)
Depends: libc6 (>= 2.4)
Pre-Depends: multiarch-support
Description: Audio sample rate conversion library
 libsamplerate (aka Secret Rabbit Code) is a library for audio rate conversion.
 .
 libsamplerate currently provides three different sample rate conversion
 algorithms; zero order hold, linear interpolation and FIR filter interpolation
 (using filters derived from the mathematical SINC function). The first two
 algorithms (zero order hold and linear) are included for completeness and are
 not recommended for any application where high quality sample rate conversion
 is required. For the FIR/Sinc algorithm, three converters are provided;
 SRC_SINC_FASTEST, SRC_SINC_MEDIUM_QUALITY and SRC_SINC_BEST_QUALITY to allow a
 trade off between conversion speed and conversion quality.
 .
 libsamplerate is capable of downsampling to 1/256 of the original sample rate
 and upsampling to 256 times the original sample rate. It is also capable of
 time varying conversions for vary speed effects and synchronising of two
 unlocked sample rates.
Homepage: http://www.mega-nerd.com/SRC/

Package: libnl-3-200
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 119
Maintainer: Heiko Stuebner <mmind@debian.org>
Architecture: armhf
Multi-Arch: same
Source: libnl3
Version: 3.2.24-2
Depends: libc6 (>= 2.8)
Pre-Depends: multiarch-support
Conffiles:
 /etc/libnl-3/classid 3e07259e58674631830b152e983ca995
 /etc/libnl-3/pktloc 02e59c3b2bba388ba64b2d120a76bab7
Description: library for dealing with netlink sockets
 This is a library for applications dealing with netlink sockets.
 The library provides an interface for raw netlink messaging and various
 netlink family specific interfaces.
Homepage: http://people.suug.ch/~tgr/libnl/

Package: libpython2.7-minimal
Status: install ok installed
Priority: standard
Section: python
Installed-Size: 2615
Maintainer: Matthias Klose <doko@debian.org>
Architecture: armhf
Multi-Arch: same
Source: python2.7
Version: 2.7.9-2+deb8u1
Replaces: libpython2.7-stdlib (<< 2.7.8-7), python2.7 (<< 2.7.4-2), python2.7-minimal (<< 2.7.3-10)
Recommends: libpython2.7-stdlib
Breaks: python2.7-minimal (<< 2.7.4~rc1-1~)
Conflicts: binfmt-support (<< 1.1.2)
Conffiles:
 /etc/python2.7/sitecustomize.py d6b276695157bde06a56ba1b2bc53670
Description: Minimal subset of the Python language (version 2.7)
 This package contains some essential modules. It is normally not
 used on it's own, but as a dependency of python2.7-minimal.

Package: samba-common-bin
Status: install ok installed
Priority: optional
Section: net
Installed-Size: 1348
Maintainer: Debian Samba Maintainers <pkg-samba-maint@lists.alioth.debian.org>
Architecture: armhf
Source: samba
Version: 2:4.2.14+dfsg-0+deb8u6
Replaces: python-samba (<< 2:4.0.6~), samba-common (<< 2:3.4.0~pre2-1), samba-doc (<< 2:4.0.5~), samba4-common (<< 4.0.0~alpha7-1), samba4-common-bin
Depends: python, python-samba, samba-common (= 2:4.2.14+dfsg-0+deb8u6), python2.7:any, libbsd0 (>= 0.0), libc6 (>= 2.8), libldap-2.4-2 (>= 2.4.7), libncurses5 (>= 5.5-5~), libpopt0 (>= 1.14), libreadline6 (>= 6.0), libtalloc2 (>= 2.0.4~git20101213), libtdb1 (>= 1.2.7+git20101214), libtevent0 (>= 0.9.12), libtinfo5, libwbclient0 (>= 2:4.0.3+dfsg1), samba-libs (= 2:4.2.14+dfsg-0+deb8u6)
Suggests: heimdal-clients
Conflicts: samba (<< 2:3.3.0~rc2-5), samba-common (<< 2:3.3.0~rc2-5), samba-doc (<< 2:4.0.5~)
Description: Samba common files used by both the server and the client
 Samba is an implementation of the SMB/CIFS protocol for Unix systems,
 providing support for cross-platform file sharing with Microsoft Windows, OS X,
 and other Unix systems.  Samba can also function as a domain controller
 or member server in both NT4-style and Active Directory domains.
 .
 This package contains the common files that are used by both the server
 (provided in the samba package) and the client (provided in the samba-clients
 package).
Homepage: http://www.samba.org

Package: libparams-util-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 47
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: armhf
Source: libparams-util-perl (1.07-2)
Version: 1.07-2+b1
Depends: perl (>= 5.20.0-4), perlapi-5.20.0, libc6 (>= 2.4)
Description: Perl extension for simple stand-alone param checking functions
 Params::Util provides a basic set of importable functions that makes checking
 parameters easier. The functions provided by Params::Util check in the most
 strictly correct manner, and it should not be fooled by odd cases.
Homepage: https://metacpan.org/release/Params-Util

Package: net-tools
Status: install ok installed
Priority: important
Section: net
Installed-Size: 698
Maintainer: net-tools Team <pkg-net-tools-maintainers@lists.alioth.debian.org>
Architecture: armhf
Version: 1.60-26
Replaces: ja-trans (<= 0.8-2), netbase (<< 4.00)
Depends: libc6 (>= 2.4)
Conflicts: ja-trans (<= 0.8-2)
Description: NET-3 networking toolkit
 This package includes the important tools for controlling the network
 subsystem of the Linux kernel.  This includes arp, ifconfig, netstat,
 rarp, nameif and route.  Additionally, this package contains utilities
 relating to particular network hardware types (plipconfig, slattach,
 mii-tool) and advanced aspects of IP configuration (iptunnel, ipmaddr).
 .
 In the upstream package 'hostname' and friends are included. Those are
 not installed by this package, since there is a special "hostname*.deb".
Homepage: http://net-tools.berlios.de/

Package: fbset
Status: install ok installed
Priority: optional
Section: admin
Installed-Size: 184
Maintainer: Debian QA Group <packages@qa.debian.org>
Architecture: armhf
Version: 2.1-28
Depends: libc6 (>= 2.4), udev | makedev (>= 2.3.1-24)
Conffiles:
 /etc/fb.modes 58b5d6e9daf8eee80f73cefb38f000d3
Description: framebuffer device maintenance program
 Program to modify settings for the framebuffer devices (/dev/fb[0-9]*
 or /dev/fb/[0-9]*) on Linux, like depth, virtual resolution, timing
 parameters etc.
Homepage: http://users.telenet.be/geertu/Linux/fbdev/

Package: adduser
Status: install ok installed
Priority: important
Section: admin
Installed-Size: 1066
Maintainer: Debian Adduser Developers <adduser-devel@lists.alioth.debian.org>
Architecture: all
Multi-Arch: foreign
Version: 3.113+nmu3
Replaces: manpages-it (<< 0.3.4-2), manpages-pl (<= 20051117-1)
Depends: perl-base (>= 5.6.0), passwd (>= 1:4.0.12), debconf | debconf-2.0
Suggests: liblocale-gettext-perl, perl-modules
Conffiles:
 /etc/deluser.conf 773fb95e98a27947de4a95abb3d3f2a2
Description: add and remove users and groups
 This package includes the 'adduser' and 'deluser' commands for creating
 and removing users.
 .
  - 'adduser' creates new users and groups and adds existing users to
    existing groups;
  - 'deluser' removes users and groups and removes users from a given
    group.
 .
 Adding users with 'adduser' is much easier than adding them manually.
 Adduser will choose appropriate UID and GID values, create a home
 directory, copy skeletal user configuration, and automate setting
 initial values for the user's password, real name and so on.
 .
 Deluser can back up and remove users' home directories
 and mail spool or all the files they own on the system.
 .
 A custom script can be executed after each of the commands.
 .
  Development mailing list:
    http://lists.alioth.debian.org/mailman/listinfo/adduser-devel/
Homepage: http://alioth.debian.org/projects/adduser/

Package: initscripts
Status: install ok installed
Priority: required
Section: admin
Installed-Size: 159
Maintainer: Debian sysvinit maintainers <pkg-sysvinit-devel@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: foreign
Source: sysvinit
Version: 2.88dsf-59
Replaces: libc0.1, libc0.3, libc6, libc6.1
Depends: libc6 (>= 2.4), debianutils (>= 4), lsb-base (>= 3.2-14), sysvinit-utils (>= 2.88dsf-50), sysv-rc | file-rc, coreutils (>= 5.93)
Recommends: psmisc, e2fsprogs
Breaks: aide (<< 0.15.1-5), atm-tools (<< 1:2.5.1-1.3), autofs (<< 5.0.0), bootchart (<< 0.10~svn407-4), console-common (<< 0.7.86), console-setup (<< 1.74), cruft (<< 0.9.16), eepc-acpi-scripts (<< 1.1.12), fcheck (<< 2.7.59-16), hostapd (<< 1:0.7.3-3), hurd (<< 0.5.git20131101~), ifupdown (<< 0.7.46), initramfs-tools (<< 0.104), libpam-mount (<< 2.13-1), live-build (<< 3.0~a26-1), ltsp-client-core (<< 5.2.16-1), mdadm (<< 3.2.2-1), nbd-client (<< 1:2.9.23-1), nfs-common (<< 1:1.2.5-3), portmap (<< 6.0.0-2), readahead-fedora (<< 2:1.5.6-3), resolvconf (<< 1.49), rpcbind (<< 0.2.0-7), rsyslog (<< 5.8.2-2), selinux-policy-default (<= 2:0.2.20100524-9), splashy (<< 0.3.13-5.1+b1), sysklogd (<< 1.5-6.2), util-linux (<< 2.20.1-5), wpasupplicant (<< 0.7.3-4), xymon (<< 4.3.0~beta2.dfsg-9)
Conflicts: libdevmapper1.02.1 (<< 2:1.02.24-1)
Conffiles:
 /etc/init.d/bootlogs 41ad826ad3091964c994b03177bbc29b
 /etc/init.d/bootmisc.sh 7e77260cb4071c21a99d581bfb8d2b74
 /etc/init.d/checkfs.sh 8cd37d9296845ce642e5671198469c32
 /etc/init.d/checkroot.sh 9c6f18f6f6b09ce96175bbbc5aaa8c99
 /etc/init.d/checkroot-bootclean.sh 955dcf4da7378f9f981d3f04c94d36d7
 /etc/init.d/halt a0e668699f774d928ddc62954155adb5
 /etc/init.d/hostname.sh 2180072dbb4e2f42f7ad4df4a2f9888d
 /etc/init.d/killprocs 9866a64a5d3d34552b0c36f5667cdacd
 /etc/init.d/motd dbc3f882af04254005bb96e4f780e5a0
 /etc/init.d/mountall.sh 7dc50e51261550184c078955c01b5628
 /etc/init.d/mountall-bootclean.sh 4c6b07a64798d8d78783e271238511f4
 /etc/init.d/mountnfs.sh a33d7b1a4d5043ea997af1f44c600cb9
 /etc/init.d/mountnfs-bootclean.sh 68aeda71fd9ae6861c3859c4ac33ee62
 /etc/init.d/mountdevsubfs.sh c18f4495f67dec33e257946215f54508
 /etc/init.d/mountkernfs.sh 12a99beb128e18bb6b277882233545af
 /etc/init.d/rc.local 7d505630f083ddc543cb68fbeb83a6b5
 /etc/init.d/reboot 39ce57bc053ad1bf9861347927d7db6b
 /etc/init.d/rmnologin eb11c47dd70b51a6e0d927f50490965e
 /etc/init.d/sendsigs 617e0ce4756cd2ac0c53634c4667fe22
 /etc/init.d/single bc7e38f0849ebfe767d162861fae002c
 /etc/init.d/umountfs 49f742a0f5af8124caba6c4264e78aa6
 /etc/init.d/umountnfs.sh 5137d5524cdba56d07e61c1cd5bb7238
 /etc/init.d/umountroot 57c8e9e95211ab355591dc8c211c8e8f
 /etc/init.d/urandom e6454386bfce38efb5987dd06cb3b21d
 /etc/default/devpts fc857c5ac5fb84d80720ed4d1c624f6e
 /etc/default/halt 18d9844cf8ca8608e2a559a4555e593a
 /etc/default/rcS a4af750cc5d1edc264d47dc01d11e1b8
 /etc/default/tmpfs 9af2949a1c0373adfa0c7db2453eee62
 /etc/network/if-up.d/mountnfs 528b2efd88285d2f443fcf54234b5156
Description: scripts for initializing and shutting down the system
 The scripts in this package initialize a standard Debian
 system at boot time and shut it down at halt or reboot time.
Homepage: http://savannah.nongnu.org/projects/sysvinit

Package: firmware-brcm80211
Status: install ok installed
Priority: optional
Section: non-free/kernel
Installed-Size: 4296
Maintainer: Debian Kernel Team <debian-kernel@lists.debian.org>
Architecture: all
Multi-Arch: foreign
Source: firmware-nonfree
Version: 0.43+rpi5
Suggests: initramfs-tools
Description: Binary firmware for Broadcom 802.11 wireless cards
 This package contains the binary firmware for wireless network cards with
 the Broadcom BCM4313, BCM43224, BCM43225, BCM43241, BCM43143, BCM4329,
 BCM4330, BCM4334, BCM4335 or BCM43430 chips, supported by the brcmsmac or
 brcmfmac driver.
 .
 Contents:
  * Broadcom 802.11 firmware, version 610.812 (brcm/bcm43xx-0.fw)
  * Broadcom 802.11 firmware header, version 610.812
    (brcm/bcm43xx_hdr-0.fw)
  * Broadcom BCM43143 firmware (brcm/brcmfmac43143-sdio.bin)
  * Broadcom BCM43241 rev 0-3 firmware (brcm/brcmfmac43241b0-sdio.bin)
  * Broadcom BCM43241 rev 4+ firmware (brcm/brcmfmac43241b4-sdio.bin)
  * Broadcom BCM4329 firmware (brcm/brcmfmac4329-sdio.bin)
  * Broadcom BCM4330 firmware (brcm/brcmfmac4330-sdio.bin)
  * Broadcom BCM4334 firmware (brcm/brcmfmac4334-sdio.bin)
  * Broadcom BCM4335 firmware (brcm/brcmfmac4335-sdio.bin)
  * Broadcom BCM43362 firmware (brcm/brcmfmac43362-sdio.bin)
  * Broadcom BCM4354 firmware (brcm/brcmfmac4354-sdio.bin)
  * Broadcom BCM43143 firmware (brcm/brcmfmac43143.bin)
  * Broadcom BCM43430 firmware (brcm/brcmfmac43430-sdio.bin)
  * NVRAM file for BCM943430 (brcm/brcmfmac43430-sdio.txt)
Homepage: http://git.kernel.org/?p=linux/kernel/git/firmware/linux-firmware.git

Package: python-apt
Status: install ok installed
Priority: standard
Section: python
Installed-Size: 547
Maintainer: APT Development Team <deity@lists.debian.org>
Architecture: armhf
Multi-Arch: allowed
Version: 0.9.3.12
Provides: python2.7-apt
Depends: python (>= 2.7), python (<< 2.8), libapt-inst1.5 (>= 1.0.4~), libapt-pkg4.12 (>= 1.0.9.8), libc6 (>= 2.4), libgcc1 (>= 1:4.4.0), libstdc++6 (>= 4.4.0), python-apt-common
Recommends: lsb-release, iso-codes, xz-utils
Suggests: python-apt-dbg, python-gtk2, python-vte, python-apt-doc
Breaks: apt-forktracer (<< 0.3), apt-listchanges (<< 2.85), apt-p2p (<< 0.1.6), apt-xapian-index (<< 0.25), aptdaemon (<< 0.11+bzr343-1~), aptoncd (<< 0.1.98+bzr117), bcfg2 (<< 1.0.1), bzr-builddeb (<< 2.4), computer-janitor (<< 1.14.1-1+), debdelta (<< 0.41+), debpartial-mirror (<< 0.2.98), debsecan (<< 0.4.15), gdebi (<< 0.6.1), germinate (<< 1.21), gnome-codec-install (<< 0.4.5), mini-dinstall (<< 0.6.28), packagekit-backend-apt (<= 0.4.8-0ubuntu4), python-cdd (<< 0.0.10), python-dogtail (<< 0.6.1-3.1+), python-software-properties (<< 0.70.debian-1+), rebuildd (<< 0.3.9), software-center (<< 1.1.21debian2), tla-buildpackage (<< 0.9.14), ubuntu-dev-tools (<< 0.93debian1), unattended-upgrades (<< 0.42debian2), update-manager (<< 0.200.2-1), update-notifier (<< 0.99.3debian9), wajig (<< 2.0.46)
Description: Python interface to libapt-pkg
 The apt_pkg Python interface will provide full access to the internal
 libapt-pkg structures allowing Python programs to easily perform a
 variety of functions, such as:
 .
  - Access to the APT configuration system
  - Access to the APT package information database
  - Parsing of Debian package control files, and other files with a
    similar structure
 .
 The included 'aptsources' Python interface provides an abstraction of
 the sources.list configuration on the repository and the distro level.

Package: libraspberrypi-bin
Status: install ok installed
Priority: extra
Section: misc
Installed-Size: 1036
Maintainer: Serge Schneider <serge@raspberrypi.org>
Architecture: armhf
Source: raspberrypi-firmware
Version: 1.20160523-1
Depends: libraspberrypi0 (= 1.20160523-1), device-tree-compiler
Description: Miscellaneous Raspberry Pi utilities
 This package contains various utilities for interacting with the Raspberry
 Pi's VideoCore IV.
Homepage: https://github.com/raspberrypi/firmware

Package: libcwidget3
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 1046
Maintainer: Manuel A. Fernandez Montecelo <mafm@debian.org>
Architecture: armhf
Multi-Arch: same
Source: cwidget
Version: 0.5.17-2
Depends: libc6 (>= 2.4), libgcc1 (>= 1:4.4.0), libncursesw5 (>= 5.6+20070908), libsigc++-2.0-0c2a (>= 2.2.0), libstdc++6 (>= 4.9), libtinfo5
Pre-Depends: multiarch-support
Suggests: libcwidget-dev
Description: high-level terminal interface library for C++ (runtime files)
 libcwidget is a modern user interface library modeled on GTK+ and Qt,
 but using curses as its display layer and with widgets that are
 tailored to a terminal environment.
 .
 This package contains the files that are required to run programs
 compiled against libcwidget.
Homepage: http://cwidget.alioth.debian.org

Package: gcc-4.7-base
Status: install ok installed
Priority: required
Section: libs
Installed-Size: 203
Maintainer: Debian GCC Maintainers <debian-gcc@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: gcc-4.7
Version: 4.7.3-11+rpi1
Breaks: dehydra (<= 0.9.hg20110609-2), gcc-4.4-base (<< 4.4.7), gcj-4.4-base (<< 4.4.6-9~), gcj-4.6-base (<< 4.6.1-4~), gnat-4.4-base (<< 4.4.6-3~), gnat-4.6 (<< 4.6.1-5~)
Description: GCC, the GNU Compiler Collection (base package)
 This package contains files common to all languages and libraries
 contained in the GNU Compiler Collection (GCC).
Homepage: http://gcc.gnu.org/

Package: ca-certificates
Status: install ok installed
Priority: optional
Section: misc
Installed-Size: 367
Maintainer: Michael Shuler <michael@pbandjelly.org>
Architecture: all
Multi-Arch: foreign
Version: 20141019+deb8u3
Depends: openssl (>= 1.0.0), debconf (>= 0.5) | debconf-2.0
Breaks: ca-certificates-java (<< 20121112+nmu1)
Enhances: openssl
Description: Common CA certificates
 This package includes PEM files of CA certificates to allow SSL-based
 applications to check for the authenticity of SSL connections.
 .
 It includes, among others, certificate authorities used by the Debian
 infrastructure and those shipped with Mozilla's browsers.
 .
 Please note that Debian can neither confirm nor deny whether the
 certificate authorities whose certificates are included in this package
 have in any way been audited for trustworthiness or RFC 3647 compliance.
 Full responsibility to assess them belongs to the local system
 administrator.

Package: gcc-4.6-base
Status: install ok installed
Priority: required
Section: libs
Installed-Size: 197
Maintainer: Debian GCC Maintainers <debian-gcc@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: gcc-4.6
Version: 4.6.4-5+rpi1
Breaks: dehydra (<= 0.9.hg20110609-2), gcj-4.6-base (<< 4.6.1-4~), gnat-4.6 (<< 4.6.1-5~)
Description: GCC, the GNU Compiler Collection (base package)
 This package contains files common to all languages and libraries
 contained in the GNU Compiler Collection (GCC).
Homepage: http://gcc.gnu.org/

Package: libacl1
Status: install ok installed
Priority: required
Section: libs
Installed-Size: 40
Maintainer: Anibal Monsalve Salazar <anibal@debian.org>
Architecture: armhf
Multi-Arch: same
Source: acl
Version: 2.2.52-2
Depends: libattr1 (>= 1:2.4.46-8), libc6 (>= 2.4)
Pre-Depends: multiarch-support
Conflicts: acl (<< 2.0.0), libacl1-kerberos4kth
Description: Access control list shared library
 This package contains the libacl.so dynamic library containing
 the POSIX 1003.1e draft standard 17 functions for manipulating
 access control lists.
Homepage: http://savannah.nongnu.org/projects/acl/

Package: manpages-dev
Status: install ok installed
Priority: optional
Section: doc
Installed-Size: 1919
Maintainer: Martin Schulze <joey@debian.org>
Architecture: all
Source: manpages
Version: 3.74-1
Replaces: glibc-doc (<< 2.11.2-3), libaio-dev
Depends: manpages
Suggests: man-browser
Description: Manual pages about using GNU/Linux for development
 These man pages describe the Linux programming interface, including
 these two sections:
  2 = Linux system calls.
  3 = Library calls (note that a more comprehensive source of information
      may be found in the glibc-doc and glibc-doc-reference packages).
Homepage: http://www.kernel.org/doc/man-pages/

Package: openssh-client
Status: install ok installed
Priority: standard
Section: net
Installed-Size: 3667
Maintainer: Debian OpenSSH Maintainers <debian-ssh@lists.debian.org>
Architecture: armhf
Multi-Arch: foreign
Source: openssh
Version: 1:6.7p1-5+deb8u3
Replaces: ssh, ssh-krb5
Provides: rsh-client, ssh-client
Depends: libc6 (>= 2.17), libedit2 (>= 2.11-20080614), libgssapi-krb5-2 (>= 1.12.1+dfsg-2), libselinux1 (>= 1.32), libssl1.0.0 (>= 1.0.1), zlib1g (>= 1:1.1.4), adduser (>= 3.10), dpkg (>= 1.7.0), passwd
Recommends: xauth
Suggests: ssh-askpass, libpam-ssh, keychain, monkeysphere
Conflicts: sftp
Conffiles:
 /etc/ssh/moduli 07d36dec51c06b538f196fcea2c8707c
 /etc/ssh/ssh_config 7c3fc0754c5a373bac7b09d9d4f6e403
Description: secure shell (SSH) client, for secure access to remote machines
 This is the portable version of OpenSSH, a free implementation of
 the Secure Shell protocol as specified by the IETF secsh working
 group.
 .
 Ssh (Secure Shell) is a program for logging into a remote machine
 and for executing commands on a remote machine.
 It provides secure encrypted communications between two untrusted
 hosts over an insecure network. X11 connections and arbitrary TCP/IP
 ports can also be forwarded over the secure channel.
 It can be used to provide applications with a secure communication
 channel.
 .
 This package provides the ssh, scp and sftp clients, the ssh-agent
 and ssh-add programs to make public key authentication more convenient,
 and the ssh-keygen, ssh-keyscan, ssh-copy-id and ssh-argv0 utilities.
 .
 In some countries it may be illegal to use any encryption at all
 without a special permit.
 .
 ssh replaces the insecure rsh, rcp and rlogin programs, which are
 obsolete for most purposes.
Homepage: http://www.openssh.org/

Package: ncurses-bin
Essential: yes
Status: install ok installed
Priority: required
Section: utils
Installed-Size: 470
Maintainer: Craig Small <csmall@debian.org>
Architecture: armhf
Multi-Arch: foreign
Source: ncurses
Version: 5.9+20140913-1
Pre-Depends: libc6 (>= 2.4), libtinfo5 (>= 5.9+20130119)
Description: terminal-related programs and man pages
 The ncurses library routines are a terminal-independent method of
 updating character screens with reasonable optimization.
 .
 This package contains the programs used for manipulating the terminfo
 database and individual terminfo entries, as well as some programs for
 resetting terminals and such.
Homepage: http://invisible-island.net/ncurses/

Package: bluez
Status: install ok installed
Priority: optional
Section: admin
Installed-Size: 2588
Maintainer: Debian Bluetooth Maintainers <pkg-bluetooth-maintainers@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 5.23-2+rpi2
Replaces: bluez-audio (<= 3.36-3), bluez-input, bluez-network, bluez-serial, bluez-utils (<= 3.36-3), udev (<< 170-1)
Depends: libc6 (>= 2.15), libdbus-1-3 (>= 1.1.1), libglib2.0-0 (>= 2.28.0), libreadline6 (>= 6.0), libudev1 (>= 196), init-system-helpers (>= 1.18~), kmod, udev (>= 170-1), lsb-base, dbus
Breaks: udev (<< 170-1)
Conflicts: bluez-audio (<= 3.36-3), bluez-utils (<= 3.36-3)
Conffiles:
 /etc/bluetooth/input.conf 9f85017f861ac34d983fa76fa715f9c3
 /etc/bluetooth/main.conf 297ad1bff9ec02f760eb6b5b7bf48e74
 /etc/bluetooth/network.conf 0c7497c405b963382ff71789d0730abd
 /etc/bluetooth/proximity.conf b75823a140e00905d41465c380bf89fe
 /etc/dbus-1/system.d/bluetooth.conf 98bb1c2cf393ac16f0ba3bb0153a4f30
 /etc/default/bluetooth 1e25cf981f29147187311b94f8e0ea89
 /etc/init.d/bluetooth 1d503f26c72a83c43b90422ec5907626
Description: Bluetooth tools and daemons
 This package contains tools and system daemons for using Bluetooth devices.
 .
 BlueZ is the official Linux Bluetooth protocol stack. It is an Open Source
 project distributed under GNU General Public License (GPL).
Homepage: http://www.bluez.org

Package: acl
Status: install ok installed
Priority: optional
Section: utils
Installed-Size: 144
Maintainer: Anibal Monsalve Salazar <anibal@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 2.2.52-2
Depends: libacl1 (= 2.2.52-2), libattr1 (>= 1:2.4.46-8), libc6 (>= 2.4)
Description: Access control list utilities
 This package contains the getfacl and setfacl utilities needed for
 manipulating access control lists.
Homepage: http://savannah.nongnu.org/projects/acl/

Package: linux-headers-4.1.21-v7+
Status: install ok installed
Priority: optional
Section: kernel
Installed-Size: 51427
Maintainer: Anonymous <root@cup.cs.ru.nl>
Architecture: armhf
Source: linux-upstream
Version: 4.1.21-v7+-4
Provides: linux-headers, linux-headers-2.6
Description: Linux kernel headers for 4.1.21-v7+ on armhf
 This package provides kernel header files for 4.1.21-v7+ on armhf
 .
 This is useful for people who need to build external modules
Homepage: http://www.kernel.org/

Package: libc6-dev
Status: install ok installed
Priority: optional
Section: libdevel
Installed-Size: 8216
Maintainer: GNU Libc Maintainers <debian-glibc@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: glibc
Version: 2.19-18+deb8u9
Provides: libc-dev
Depends: libc6 (= 2.19-18+deb8u9), libc-dev-bin (= 2.19-18+deb8u9), linux-libc-dev
Suggests: glibc-doc, manpages-dev
Breaks: binutils (<< 2.20.1-1), binutils-gold (<< 2.20.1-11), cmake (<< 2.8.4+dfsg.1-5), gcc-4.4 (<< 4.4.6-4), gcc-4.5 (<< 4.5.3-2), gcc-4.6 (<< 4.6.0-12), libhwloc-dev (<< 1.2-3), libjna-java (<< 3.2.7-4), liblouis-dev (<< 2.3.0-2), liblouisxml-dev (<< 2.4.0-2), make (<< 3.81-8.1), pkg-config (<< 0.26-1)
Conflicts: libc0.1-dev, libc0.3-dev, libc6.1-dev
Description: GNU C Library: Development Libraries and Header Files
 Contains the symlinks, headers, and object files needed to compile
 and link programs which use the standard C library.
Homepage: http://www.gnu.org/software/libc/libc.html

Package: libslang2
Status: install ok installed
Priority: important
Section: libs
Installed-Size: 1362
Maintainer: Alastair McKinstry <mckinstry@debian.org>
Architecture: armhf
Multi-Arch: same
Source: slang2
Version: 2.3.0-2
Depends: libc6 (>= 2.4)
Pre-Depends: multiarch-support
Recommends: libpng12-0
Description: S-Lang programming library - runtime version
 S-Lang is a C programmer's library that includes routines for the rapid
 development of sophisticated, user friendly, multi-platform applications.
 .
 This package contains only the shared library libslang.so.* and copyright
 information. It is only necessary for programs that use this library (such
 as jed and slrn). If you plan on doing development with S-Lang, you will
 need the companion -dev package as well.
Built-Using: unicode-data (= 7.0-2)
Homepage: http://www.jedsoft.org/slang/

Package: cron
Status: install ok installed
Priority: important
Section: admin
Installed-Size: 178
Maintainer: Javier Fernández-Sanguino Peña <jfs@debian.org>
Architecture: armhf
Version: 3.0pl1-127+deb8u1
Provides: cron-daemon
Depends: libc6 (>= 2.7), libpam0g (>= 0.99.7.1), libselinux1 (>= 1.32), init-system-helpers (>= 1.18~), debianutils (>= 1.7), adduser, lsb-base (>= 3.0-10), libpam-runtime (>= 1.0.1-11)
Pre-Depends: dpkg (>= 1.15.7.2)
Recommends: exim4 | postfix | mail-transport-agent
Suggests: anacron (>= 2.0-1), logrotate, checksecurity
Breaks: dpkg (<< 1.15.4)
Conffiles:
 /etc/cron.d/.placeholder e5e12910bf011222160404d7bdb824f2
 /etc/cron.daily/.placeholder e5e12910bf011222160404d7bdb824f2
 /etc/cron.hourly/.placeholder e5e12910bf011222160404d7bdb824f2
 /etc/cron.monthly/.placeholder e5e12910bf011222160404d7bdb824f2
 /etc/cron.weekly/.placeholder e5e12910bf011222160404d7bdb824f2
 /etc/crontab 8f111d100ea459f68d333d63a8ef2205
 /etc/default/cron eae0d979b5007d2af41540d8c2631359
 /etc/init.d/cron 85d7a3783889ea93dcda2fb488420c1c
 /etc/pam.d/cron 11e788a7f7cd5477b10da2c7fd5ecdf0
Description: process scheduling daemon
 The cron daemon is a background process that runs particular programs at
 particular times (for example, every minute, day, week, or month), as
 specified in a crontab. By default, users may also create crontabs of
 their own so that processes are run on their behalf.
 .
 Output from the commands is usually mailed to the system administrator
 (or to the user in question); you should probably install a mail system
 as well so that you can receive these messages.
 .
 This cron package does not provide any system maintenance tasks. Basic
 periodic maintenance tasks are provided by other packages, such
 as checksecurity.
Homepage: http://ftp.isc.org/isc/cron/

Package: gdb
Status: install ok installed
Priority: optional
Section: devel
Installed-Size: 5328
Maintainer: Héctor Orón Martínez <zumbi@debian.org>
Architecture: armhf
Version: 7.7.1+dfsg-5+rpi1
Replaces: gdb
Depends: libc6 (>= 2.15), libexpat1 (>= 2.0.1), liblzma5 (>= 5.1.1alpha+20110809), libncurses5 (>= 5.5-5~), libpython2.7 (>= 2.7), libreadline6 (>= 6.0), libtinfo5, zlib1g (>= 1:1.2.0)
Recommends: libc-dbg, gdbserver
Suggests: gdb-doc
Conflicts: gdb
Conffiles:
 /etc/gdb/gdbinit e030dc891a3af1f7779429b5c0554c98
Description: GNU Debugger
 GDB is a source-level debugger, capable of breaking programs at
 any specific line, displaying variable values, and determining
 where errors occurred. Currently, gdb supports C, C++, D,
 Objective-C, Fortran, Java, OpenCL C, Pascal, assembly, Modula-2,
 Go, and Ada. A must-have for any serious programmer.
Homepage: http://www.gnu.org/s/gdb/

Package: libfcgi-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 69
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: armhf
Version: 0.77-1+deb8u1
Depends: perl (>= 5.20.2-3+deb8u1), perlapi-5.20.2, libc6 (>= 2.15)
Description: helper module for FastCGI
 FCGI is a simple Perl module for writing FastCGI applications. FastCGI is a
 language-independent, scalable, open extension to CGI that provides faster
 performance by keeping programs persistent in memory and allowing them to
 handle multiple requests. This module provides the core interface needed to
 write these applications.
 .
 For complex applications, you should consider a more full-featured solution
 such as Plack or Catalyst (see libcatalyst-perl).
Homepage: https://metacpan.org/release/FCGI

Package: libapt-pkg4.12
Status: install ok installed
Priority: important
Section: libs
Installed-Size: 2511
Maintainer: APT Development Team <deity@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: apt
Version: 1.0.9.8.4
Depends: libbz2-1.0, libc6 (>= 2.15), libgcc1 (>= 1:4.4.0), liblzma5 (>= 5.1.1alpha+20120614), libstdc++6 (>= 4.9), zlib1g (>= 1:1.2.3.4)
Pre-Depends: multiarch-support
Breaks: apt (<< 0.9.4~), libapt-inst1.5 (<< 0.9.9~)
Description: package management runtime library
 This library provides the common functionality for searching and
 managing packages as well as information about packages.
 Higher-level package managers can depend upon this library.
 .
 This includes:
  * retrieval of information about packages from multiple sources
  * retrieval of packages and all dependent packages
    needed to satisfy a request either through an internal
    solver or by interfacing with an external one
  * authenticating the sources and validating the retrieved data
  * installation and removal of packages in the system
  * providing different transports to retrieve data over cdrom, ftp,
    http, rsh as well as an interface to add more transports like
    https (apt-transport-https) and debtorrent (apt-transport-debtorrent).

Package: xdg-user-dirs
Status: install ok installed
Priority: optional
Section: utils
Installed-Size: 158
Maintainer: Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 0.15-2
Depends: libc6 (>= 2.4)
Conffiles:
 /etc/xdg/user-dirs.conf 602a95ec7fe4068512bebb712c41102d
 /etc/xdg/user-dirs.defaults b8595963fe74aeb65e854ba9da7f1acb
 /etc/X11/Xsession.d/60xdg-user-dirs-update 408d38a4d3e161d0b21ea112bbe227b3
Description: tool to manage well known user directories
 xdg-user-dirs is a tool to help manage "well known" user directories
 like the desktop folder and the music folder. It also handles
 localization (i.e. translation) of the filenames.
 .
 The way it works is that xdg-user-dirs-update is run very early in the
 login phase. This program reads a configuration file, and a set of
 default directories. It then creates localized versions of these
 directories in the users home directory and sets up a config file in
 $(XDG_CONFIG_HOME)/user-dirs.dirs (XDG_CONFIG_HOME defaults to
 ~/.config) that applications can read to find these directories.
Homepage: http://www.freedesktop.org/wiki/Software/xdg-user-dirs

Package: samba-dsdb-modules
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 908
Maintainer: Debian Samba Maintainers <pkg-samba-maint@lists.alioth.debian.org>
Architecture: armhf
Source: samba
Version: 2:4.2.14+dfsg-0+deb8u6
Replaces: libgensec0 (<< 4.0.0~alpha17~git20110724.dfsg1-1), samba-libs (<< 2:4.1.9+dfsg-2)
Depends: libbsd0 (>= 0.0), libc6 (>= 2.4), libldb1 (>= 1:1.1.6), libpopt0 (>= 1.14), libtalloc2 (>= 2.0.4~git20101213), libtdb1 (>= 1.2.7+git20101214), libtevent0 (>= 0.9.9), samba-libs (= 2:4.2.14+dfsg-0+deb8u6)
Enhances: libldb1
Description: Samba Directory Services Database
 Samba is an implementation of the SMB/CIFS protocol for Unix systems,
 providing support for cross-platform file sharing with Microsoft Windows, OS X,
 and other Unix systems.  Samba can also function as a domain controller
 or member server in both NT4-style and Active Directory domains.
 .
 This package contains LDB plugins which add support for various Active
 Directory features to the LDB library.
Homepage: http://www.samba.org

Package: libxcb1
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 116
Maintainer: XCB Developers <xcb@lists.freedesktop.org>
Architecture: armhf
Multi-Arch: same
Source: libxcb
Version: 1.10-3
Depends: libc6 (>= 2.4), libxau6, libxdmcp6
Pre-Depends: multiarch-support
Breaks: alsa-utils (<< 1.0.24.2-5), libxcb-xlib0
Description: X C Binding
 This package contains the library files needed to run software using libxcb,
 the X C Binding.
 .
 The XCB library provides an interface to the X Window System protocol,
 designed to replace the Xlib interface.  XCB provides several advantages over
 Xlib:
 .
  * Size: small library and lower memory footprint
  * Latency hiding: batch several requests and wait for the replies later
  * Direct protocol access: one-to-one mapping between interface and protocol
  * Thread support: access XCB from multiple threads, with no explicit locking
  * Easy creation of new extensions: automatically generates interface from
    machine-parsable protocol descriptions
Homepage: http://xcb.freedesktop.org

Package: libusb-0.1-4
Status: install ok installed
Priority: important
Section: libs
Installed-Size: 37
Maintainer: Aurelien Jarno <aurel32@debian.org>
Architecture: armhf
Multi-Arch: same
Source: libusb
Version: 2:0.1.12-25
Replaces: libusb-dev (<< 2:0.1.12-25)
Depends: libc6 (>= 2.15)
Pre-Depends: multiarch-support
Description: userspace USB programming library
 Library for programming USB applications without the knowledge
 of Linux kernel internals.
Homepage: http://www.linux-usb.org/

Package: locales
Status: install ok installed
Priority: standard
Section: localization
Installed-Size: 16266
Maintainer: GNU Libc Maintainers <debian-glibc@lists.debian.org>
Architecture: all
Source: glibc
Version: 2.19-18+deb8u9
Replaces: base-config, lliurex-belocs-locales-data, manpages-fr-extra (<< 20141022)
Depends: libc-bin (>> 2.19), debconf (>= 0.5) | debconf-2.0
Conflicts: base-config, belocs-locales-bin, belocs-locales-data
Conffiles:
 /etc/locale.alias b6fadfcab09ef56b506a2fc0dd81d11c
Description: GNU C Library: National Language (locale) data [support]
 Machine-readable data files, shared objects and programs used by the
 C library for localization (l10n) and internationalization (i18n) support.
 .
 This package contains the libc.mo i18n files, plus tools to generate
 locale definitions from source files (included in this package). It
 allows you to customize which definitions actually get
 generated. This is a space-saver over how this package used to be,
 with all locales generated by default. This created a package that
 unpacked to an excess of 30 megs.
Homepage: http://www.gnu.org/software/libc/libc.html

Package: libnih1
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 183
Maintainer: Scott James Remnant <scott@netsplit.com>
Architecture: armhf
Source: libnih
Version: 1.0.3-4.3
Depends: libc6 (>> 2.19), libc6 (<< 2.20)
Description: NIH Utility Library
 libnih is a light-weight "standard library" of C functions to ease the
 development of other libraries and applications, especially those
 normally found in /lib.
 .
 This package contains the shared library.
Homepage: https://launchpad.net/libnih

Package: traceroute
Status: install ok installed
Priority: important
Section: net
Installed-Size: 105
Maintainer: Laszlo Boszormenyi (GCS) <gcs@debian.org>
Architecture: armhf
Version: 1:2.0.20-2
Depends: libc6 (>= 2.4)
Description: Traces the route taken by packets over an IPv4/IPv6 network
 The traceroute utility displays the route used by IP packets on their way to a
 specified network (or Internet) host. Traceroute displays the IP number and
 host name (if possible) of the machines along the route taken by the packets.
 Traceroute is used as a network debugging tool. If you're having network
 connectivity problems, traceroute will show you where the trouble is coming
 from along the route.
 .
 Install traceroute if you need a tool for diagnosing network connectivity
 problems.
Homepage: http://traceroute.sourceforge.net/

Package: libtext-template-perl
Status: install ok installed
Priority: extra
Section: perl
Installed-Size: 140
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: all
Version: 1.46-1
Depends: perl
Description: perl module to process text templates
 Text::Template is a library for generating form letters, building
 HTML pages, or filling in templates generally. A `template' is a
 piece of text that has little Perl programs embedded in it here and
 there. When you `fill in' a template, you evaluate the little
 programs and replace them with their values.
Homepage: https://metacpan.org/release/Text-Template/

Package: logrotate
Status: install ok installed
Priority: important
Section: admin
Installed-Size: 81
Maintainer: Paul Martin <pm@debian.org>
Architecture: armhf
Version: 3.8.7-1
Depends: libacl1 (>= 2.2.51-8), libc6 (>= 2.8), libpopt0 (>= 1.14), libselinux1 (>= 1.32), cron | anacron | cron-daemon, base-passwd (>= 2.0.3.4)
Recommends: mailx
Breaks: postgresql-common (<= 126)
Conffiles:
 /etc/logrotate.conf 176edd439a499501372cf3d04e795810
 /etc/cron.daily/logrotate d2281ecb6f898b446ac8a5984ab5a243
Description: Log rotation utility
 The logrotate utility is designed to simplify the administration of
 log files on a system which generates a lot of log files.  Logrotate
 allows for the automatic rotation compression, removal and mailing of
 log files.  Logrotate can be set to handle a log file daily, weekly,
 monthly or when the log file gets to a certain size.  Normally, logrotate
 runs as a daily cron job.
Homepage: https://fedorahosted.org/logrotate/

Package: git
Status: install ok installed
Priority: optional
Section: vcs
Installed-Size: 18542
Maintainer: Gerrit Pape <pape@smarden.org>
Architecture: armhf
Multi-Arch: foreign
Version: 1:2.1.4-2.1+deb8u3
Replaces: git-core (<< 1:1.7.0.4-1.), gitweb (<< 1:1.7.4~rc1)
Provides: git-completion, git-core
Depends: libc6 (>= 2.16), libcurl3-gnutls (>= 7.16.2), libexpat1 (>= 2.0.1), libpcre3 (>= 1:8.35), zlib1g (>= 1:1.2.0), perl-modules, liberror-perl, git-man (>> 1:2.1.4), git-man (<< 1:2.1.4-.)
Recommends: patch, less, rsync, ssh-client
Suggests: gettext-base, git-daemon-run | git-daemon-sysvinit, git-doc, git-el, git-email, git-gui, gitk, gitweb, git-arch, git-cvs, git-mediawiki, git-svn
Breaks: bash-completion (<< 1:1.90-1), cogito (<= 0.18.2+), git-buildpackage (<< 0.6.5), git-core (<< 1:1.7.0.4-1.), gitosis (<< 0.2+20090917-7), gitpkg (<< 0.15), gitweb (<< 1:1.7.4~rc1), guilt (<< 0.33), stgit (<< 0.15), stgit-contrib (<< 0.15)
Conffiles:
 /etc/bash_completion.d/git-prompt 7baac5c3ced94ebf2c0e1dde65c3b1a6
Description: fast, scalable, distributed revision control system
 Git is popular version control system designed to handle very large
 projects with speed and efficiency; it is used for many high profile
 open source projects, most notably the Linux kernel.
 .
 Git falls in the category of distributed source code management tools.
 Every Git working directory is a full-fledged repository with full
 revision tracking capabilities, not dependent on network access or a
 central server.
 .
 This package provides the git main components with minimal dependencies.
 Additional functionality, e.g. a graphical user interface and revision
 tree visualizer, tools for interoperating with other VCS's, or a web
 interface, is provided as separate git* packages.
Homepage: http://git-scm.com/

Package: libsepol1
Status: install ok installed
Priority: required
Section: libs
Installed-Size: 274
Maintainer: Debian SELinux maintainers <selinux-devel@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: libsepol
Version: 2.3-2
Depends: libc6 (>= 2.4)
Pre-Depends: multiarch-support
Description: SELinux library for manipulating binary security policies
 Security-enhanced Linux is a patch of the Linux kernel and a number
 of utilities with enhanced security functionality designed to add
 mandatory access controls to Linux.  The Security-enhanced Linux
 kernel contains new architectural components originally developed to
 improve the security of the Flask operating system. These
 architectural components provide general support for the enforcement
 of many kinds of mandatory access control policies, including those
 based on the concepts of Type Enforcement®, Role-based Access
 Control, and Multi-level Security.
 .
 libsepol provides an API for the manipulation of SELinux binary policies.
 It is used by checkpolicy (the policy compiler) and similar tools, as well
 as by programs like load_policy that need to perform specific transformations
 on binary policies such as customizing policy boolean settings.
Homepage: http://userspace.selinuxproject.org/

Package: attr
Status: install ok installed
Priority: optional
Section: utils
Installed-Size: 111
Maintainer: Anibal Monsalve Salazar <anibal@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 1:2.4.47-2
Depends: libattr1 (= 1:2.4.47-2), libc6 (>= 2.7)
Conflicts: xfsdump (<< 2.0.0)
Description: Utilities for manipulating filesystem extended attributes
 A set of tools for manipulating extended attributes on filesystem
 objects, in particular getfattr(1) and setfattr(1).
 An attr(1) command is also provided which is largely compatible
 with the SGI IRIX tool of the same name.
Homepage: http://savannah.nongnu.org/projects/attr/

Package: libx11-data
Status: install ok installed
Priority: optional
Section: x11
Installed-Size: 1582
Maintainer: Debian X Strike Force <debian-x@lists.debian.org>
Architecture: all
Multi-Arch: foreign
Source: libx11
Version: 2:1.6.2-3
Breaks: libx11-6 (<< 2:1.4.1)
Description: X11 client-side library
 This package provides the locale data files for libx11.
 .
 More information about X.Org can be found at:
 <URL:http://www.X.org>
 .
 This module can be found at
 git://anongit.freedesktop.org/git/xorg/lib/libX11

Package: libpython2.7-stdlib
Status: install ok installed
Priority: standard
Section: python
Installed-Size: 7920
Maintainer: Matthias Klose <doko@debian.org>
Architecture: armhf
Multi-Arch: same
Source: python2.7
Version: 2.7.9-2+deb8u1
Replaces: python2.7 (<< 2.7.5-0~)
Provides: python-argparse, python2.7-argparse, python2.7-celementtree, python2.7-cjkcodecs, python2.7-ctypes, python2.7-elementtree, python2.7-profiler, python2.7-wsgiref
Depends: libpython2.7-minimal (= 2.7.9-2+deb8u1), mime-support, libbz2-1.0, libc6 (>= 2.15), libdb5.3, libexpat1 (>= 2.1~beta3), libffi6 (>= 3.0.4), libncursesw5 (>= 5.6+20070908), libreadline6 (>= 6.0), libsqlite3-0 (>= 3.5.9), libssl1.0.0 (>= 1.0.1), libtinfo5
Breaks: python-urllib3 (<< 1.9.1-3)
Description: Interactive high-level object-oriented language (standard library, version 2.7)
 Python is a high-level, interactive, object-oriented language. Its 2.7 version
 includes an extensive class library with lots of goodies for
 network programming, system administration, sounds and graphics.
 .
 This package contains Python 2.7's standard library. It is normally not
 used on its own, but as a dependency of python2.7.

Package: python
Status: install ok installed
Priority: standard
Section: python
Installed-Size: 570
Maintainer: Matthias Klose <doko@debian.org>
Architecture: armhf
Multi-Arch: allowed
Source: python-defaults
Version: 2.7.9-1
Replaces: python-dev (<< 2.6.5-2)
Provides: python-ctypes, python-email, python-importlib, python-profiler, python-wsgiref
Depends: python2.7 (>= 2.7.9-1~), libpython-stdlib (= 2.7.9-1)
Pre-Depends: python-minimal (= 2.7.9-1)
Suggests: python-doc (= 2.7.9-1), python-tk (>= 2.7.9-1~)
Breaks: update-manager-core (<< 0.200.5-2)
Conflicts: python-central (<< 0.5.5)
Description: interactive high-level object-oriented language (default version)
 Python, the high-level, interactive object oriented language,
 includes an extensive class library with lots of goodies for
 network programming, system administration, sounds and graphics.
 .
 This package is a dependency package, which depends on Debian's default
 Python version (currently v2.7).
Homepage: http://www.python.org/

Package: libxau6
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 25
Maintainer: Debian X Strike Force <debian-x@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: libxau
Version: 1:1.0.8-1
Depends: libc6 (>= 2.4)
Pre-Depends: multiarch-support
Description: X11 authorisation library
 This package provides the main interface to the X11 authorisation handling,
 which controls authorisation for X connections, both client-side and
 server-side.
 .
 More information about X.Org can be found at:
 <URL:http://www.X.org>
 .
 This module can be found at
 git://anongit.freedesktop.org/git/xorg/lib/libXau

Package: libidn11
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 305
Maintainer: Debian Libidn Team <help-libidn@gnu.org>
Architecture: armhf
Multi-Arch: same
Source: libidn
Version: 1.29-1+deb8u2
Replaces: libidn11-dev
Depends: libc6 (>= 2.4)
Pre-Depends: multiarch-support
Conflicts: libidn9-dev
Description: GNU Libidn library, implementation of IETF IDN specifications
 GNU Libidn is a fully documented implementation of the Stringprep,
 Punycode and IDNA specifications.  Libidn's purpose is to encode and
 decode internationalized domain names.  The Nameprep, XMPP, SASLprep,
 and iSCSI profiles are supported.
 .
 This package contains the shared library.
Homepage: https://www.gnu.org/software/libidn/

Package: rsyslog
Status: install ok installed
Priority: important
Section: admin
Installed-Size: 1509
Maintainer: Michael Biebl <biebl@debian.org>
Architecture: armhf
Version: 8.4.2-1+deb8u2
Provides: linux-kernel-log-daemon, system-log-daemon
Depends: libc6 (>= 2.17), libestr0 (>= 0.1.4), libjson-c2 (>= 0.10), liblogging-stdlog0 (>= 1.0.2), liblognorm1 (>= 0.3.0), libuuid1 (>= 2.16), zlib1g (>= 1:1.1.4), init-system-helpers (>= 1.18~), lsb-base (>= 3.2-14), initscripts (>= 2.88dsf-13.3)
Recommends: logrotate
Suggests: rsyslog-mysql | rsyslog-pgsql, rsyslog-mongodb, rsyslog-doc, rsyslog-gnutls, rsyslog-gssapi, rsyslog-relp
Conflicts: linux-kernel-log-daemon, system-log-daemon
Conffiles:
 /etc/default/rsyslog c7af23c348917e877399baea1849727a
 /etc/init.d/rsyslog a1ef1bb01ba370040d705c92fc09e92e
 /etc/logcheck/ignore.d.server/rsyslog 650507df599fbbdd6cb4142bd77fd2ff
 /etc/logrotate.d/rsyslog b995d89ccfe4a83ac3ffc5ab95b80f7b
 /etc/rsyslog.conf 169baf73fd49d20d142d088e663a9a63
Description: reliable system and kernel logging daemon
 Rsyslog is a multi-threaded implementation of syslogd (a system utility
 providing support for message logging), with features that include:
  * reliable syslog over TCP, SSL/TLS and RELP
  * on-demand disk buffering
  * email alerting
  * writing to MySQL or PostgreSQL databases (via separate output plugins)
  * permitted sender lists
  * filtering on any part of the syslog message
  * on-the-wire message compression
  * fine-grained output format control
  * failover to backup destinations
  * enterprise-class encrypted syslog relaying
 .
 It is the default syslogd on Debian systems.
Homepage: http://www.rsyslog.com/

Package: libdbus-1-3
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 319
Maintainer: Utopia Maintenance Team <pkg-utopia-maintainers@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: dbus
Version: 1.8.22-0+deb8u1
Depends: libc6 (>= 2.17)
Pre-Depends: multiarch-support
Recommends: dbus
Breaks: kde-window-manager (<< 4:4.4.5-9), kdebase-workspace-bin (<< 4:4.4.5-9)
Description: simple interprocess messaging system (library)
 D-Bus is a message bus, used for sending messages between applications.
 Conceptually, it fits somewhere in between raw sockets and CORBA in
 terms of complexity.
 .
 D-Bus supports broadcast messages, asynchronous messages (thus
 decreasing latency), authentication, and more. It is designed to be
 low-overhead; messages are sent using a binary protocol, not using
 XML. D-Bus also supports a method call mapping for its messages, but
 it is not required; this makes using the system quite simple.
 .
 It comes with several bindings, including GLib, Python, Qt and Java.
 .
 The daemon can be found in the dbus package.
Homepage: http://dbus.freedesktop.org/

Package: libalgorithm-c3-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 58
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: all
Version: 0.09-1
Depends: perl
Description: Perl module for merging hierarchies using the C3 algorithm
 The Algorithm::C3 module implements the C3 algorithm.
 .
 C3 is the name of an algorithm which aims to provide a sane method resolution
 order under multiple inheritence. It was first introduced in the language
 Dylan, and then later adopted as the preferred MRO (Method Resolution Order)
 for the new-style classes in Python 2.3. Most recently it has been adopted as
 the 'canonical' MRO for Perl 6 classes, and the default MRO for Parrot
 objects as well.
Homepage: https://metacpan.org/release/Algorithm-C3

Package: gpm
Status: install ok installed
Priority: optional
Section: misc
Installed-Size: 381
Maintainer: Peter Samuelson <peter@p12n.org>
Architecture: armhf
Multi-Arch: foreign
Version: 1.20.4-6.1
Depends: libc6 (>= 2.7), libgpm2 (>= 1.20.4), debconf (>= 0.5) | debconf-2.0, ucf, lsb-base
Conffiles:
 /etc/apm/event.d/gpm b06943a986bac4d3d3cdbcd713502c40
 /etc/init.d/gpm 137bcc7a920b53e0c1fab4fd2a71e4f8
Description: General Purpose Mouse interface
 This package provides a daemon that captures mouse events when the system
 console is active, and delivers events to applications through a library.
 .
 By default, the daemon provides a 'selection' mode, so that
 cut-and-paste with the mouse works on the console just as it does
 under X.
Homepage: http://www.nico.schottelius.org/software/gpm/

Package: libgcc1
Status: install ok installed
Priority: required
Section: libs
Installed-Size: 156
Maintainer: Debian GCC Maintainers <debian-gcc@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: gcc-4.9 (4.9.2-10)
Version: 1:4.9.2-10
Provides: libgcc1-armhf
Depends: gcc-4.9-base (= 4.9.2-10), libc6 (>= 2.4)
Pre-Depends: multiarch-support
Breaks: gcc-4.3 (<< 4.3.6-1), gcc-4.4 (<< 4.4.6-4), gcc-4.5 (<< 4.5.3-2)
Description: GCC support library
 Shared version of the support library, a library of internal subroutines
 that GCC uses to overcome shortcomings of particular machines, or
 special needs for some languages.
Homepage: http://gcc.gnu.org/

Package: libreadline6
Status: install ok installed
Priority: important
Section: libs
Installed-Size: 307
Maintainer: Matthias Klose <doko@debian.org>
Architecture: armhf
Multi-Arch: same
Source: readline6
Version: 6.3-8
Depends: readline-common, libc6 (>= 2.15), libtinfo5
Pre-Depends: multiarch-support
Description: GNU readline and history libraries, run-time libraries
 The GNU readline library aids in the consistency of user interface
 across discrete programs that need to provide a command line
 interface.
 .
 The GNU history library provides a consistent user interface for
 recalling lines of previously typed input.

Package: libstdc++-4.9-dev
Status: install ok installed
Priority: optional
Section: libdevel
Installed-Size: 10970
Maintainer: Debian GCC Maintainers <debian-gcc@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: gcc-4.9
Version: 4.9.2-10
Provides: libstdc++-dev
Depends: gcc-4.9-base (= 4.9.2-10), libgcc-4.9-dev (= 4.9.2-10), libstdc++6 (>= 4.9.2-10), libc6-dev (>= 2.13-5)
Suggests: libstdc++-4.9-doc
Conflicts: libg++2.8-dev, libg++27-dev, libg++272-dev (<< 2.7.2.8-1), libstdc++2.10-dev (<< 1:2.95.3-2), libstdc++2.8-dev, libstdc++2.9-dev, libstdc++2.9-glibc2.1-dev, libstdc++3.0-dev
Description: GNU Standard C++ Library v3 (development files)
 This package contains the headers and static library files necessary for
 building C++ programs which use libstdc++.
 .
 libstdc++-v3 is a complete rewrite from the previous libstdc++-v2, which
 was included up to g++-2.95. The first version of libstdc++-v3 appeared
 in g++-3.0.
Homepage: http://gcc.gnu.org/

Package: util-linux
Essential: yes
Status: install ok installed
Priority: required
Section: utils
Installed-Size: 2442
Maintainer: Debian util-linux Maintainers <ah-util-linux@debian.org>
Architecture: armhf
Multi-Arch: foreign
Version: 2.25.2-6
Replaces: bash-completion (<< 1:2.1-3)
Depends: initscripts, lsb-base (>= 3.0-6), tzdata (>= 2006c-2)
Pre-Depends: libblkid1 (>= 2.25), libc6 (>= 2.15), libmount1 (>= 2.25), libncurses5 (>= 5.5-5~), libpam0g (>= 0.99.7.1), libselinux1 (>= 1.32), libslang2 (>= 2.2.4), libsmartcols1 (>= 2.25), libtinfo5, libuuid1 (>= 2.16), zlib1g (>= 1:1.1.4)
Suggests: dosfstools, kbd | console-tools, util-linux-locales
Breaks: bash-completion (<< 1:2.1-3), grml-debootstrap (<< 0.68)
Conffiles:
 /etc/default/hwclock 3916544450533eca69131f894db0ca12
 /etc/init.d/hwclock.sh b5ca46c0c11ace2a1e40217c29646bf2
 /etc/pam.d/runuser b8b44b045259525e0fae9e38fdb2aeeb
 /etc/pam.d/runuser-l 2106ea05877e8913f34b2c77fa02be45
Description: Miscellaneous system utilities
 This package contains a number of important utilities, most of which
 are oriented towards maintenance of your system.  Some of the more
 important utilities included in this package allow you to partition
 your hard disk, view kernel messages, and create new filesystems.

Package: libustr-1.0-1
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 214
Maintainer: Vaclav Ovsik <vaclav.ovsik@i.cz>
Architecture: armhf
Multi-Arch: same
Source: ustr
Version: 1.0.4-3
Depends: libc6 (>= 2.13-28), libgcc1 (>= 1:4.4.0)
Pre-Depends: multiarch-support
Description: Micro string library: shared library
 ustr (Micro string library) is a string API for C. It has tiny overhead over
 just plain strdup(), is much safer, is easier to use, is faster for many
 operations, can be used with read-only or automatically allocated data. You
 don't even need to link to the library to use it (so there are no
 dependencies).
 .
 This package contains the shared library for ustr.
Homepage: http://www.and.org/ustr/

Package: libnih-dbus1
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 117
Maintainer: Scott James Remnant <scott@netsplit.com>
Architecture: armhf
Source: libnih
Version: 1.0.3-4.3
Depends: libnih1 (= 1.0.3-4.3), libc6 (>= 2.4), libdbus-1-3 (>= 1.2.16)
Description: NIH D-Bus Bindings Library
 libnih-dbus is a D-Bus bindings library that integrates with the main
 loop provided by libnih.
 .
 This package contains the shared library.
Homepage: https://launchpad.net/libnih

Package: libident
Status: install ok installed
Priority: important
Section: libs
Installed-Size: 62
Maintainer: Paul Slootman <paul@debian.org>
Architecture: armhf
Version: 0.22-3
Depends: libc6 (>= 2.7)
Suggests: libident-dev
Description: simple RFC1413 client library - runtime
 This is a small library to interface to the Ident protocol server;
 "ident" enables a remote host to find out who's the owner of a
 network connection.
 .
 /usr/sbin/in.identtestd is a small daemon (to be started from inetd)
 that does an ident lookup on you if you telnet into it. Can be used
 to verify that your Ident server is working correctly.

Package: libsigc++-1.2-5c2
Status: install ok installed
Priority: important
Section: libs
Installed-Size: 61
Maintainer: Daniel Burrows <dburrows@debian.org>
Architecture: armhf
Source: libsigc++-1.2 (1.2.7-2)
Version: 1.2.7-2+b1
Replaces: libsigc++-1.2-5, libsigc++-1.2-5c102
Depends: libc6 (>= 2.13-28), libgcc1 (>= 1:4.4.0), libstdc++6 (>= 4.3.0)
Conflicts: libsigc++-1.2-5, libsigc++-1.2-5c102
Description: type-safe Signal Framework for C++ - runtime
 This library implements a full callback system for use in widget
 libraries, abstract interfaces, and general programming. It provides
 the ability to connect an abstract callback to a class method,
 function, or function object, and contains adaptor classes for
 connection of dissimilar callbacks.
 .
 These are the runtime files for libsigc++, needed only if you wish to
 run software which depends on it.

Package: tasksel
Status: install ok installed
Priority: important
Section: admin
Installed-Size: 718
Maintainer: Debian Install System Team <debian-boot@lists.debian.org>
Architecture: all
Version: 3.31+deb8u1
Depends: debconf (>= 0.5) | debconf-2.0, liblocale-gettext-perl, apt, tasksel-data, perl-base (>= 5.14.0-1)
Pre-Depends: debconf (>= 1.5.34) | cdebconf (>= 0.106)
Conflicts: base-config (<< 2.32), debconf (<< 1.4.27)
Description: tool for selecting tasks for installation on Debian systems
 This package provides 'tasksel', a simple interface for users who
 want to configure their system to perform a specific task.

Package: libclass-c3-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 79
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: all
Version: 0.26-1
Depends: perl, libalgorithm-c3-perl
Recommends: libclass-c3-xs-perl
Description: pragma for using the C3 method resolution order
 Class::C3 is a Perl pragma that modifies the standard method resolution order
 from depth-first left-to-right to the more sophisticated C3 method resolution
 order.
 .
 The C3 algorithm aims to provide a sane method resolution order with multiple
 inheritance. It was first introduced in the Dylan language, later adopted for
 Python 2.3. It is also the canonical MRO implementation for Perl 6 classes
 and is the default for Parrot objects as well.
Homepage: https://metacpan.org/release/Class-C3

Package: python2.7-minimal
Status: install ok installed
Priority: standard
Section: python
Installed-Size: 3219
Maintainer: Matthias Klose <doko@debian.org>
Architecture: armhf
Multi-Arch: allowed
Source: python2.7
Version: 2.7.9-2+deb8u1
Replaces: python2.7 (<< 2.7.8-7~)
Depends: libpython2.7-minimal (= 2.7.9-2+deb8u1), zlib1g (>= 1:1.2.0)
Pre-Depends: libc6 (>= 2.15)
Recommends: python2.7
Suggests: binfmt-support
Conflicts: binfmt-support (<< 1.1.2)
Description: Minimal subset of the Python language (version 2.7)
 This package contains the interpreter and some essential modules.  It can
 be used in the boot process for some basic tasks.
 See /usr/share/doc/python2.7-minimal/README.Debian for a list of the modules
 contained in this package.

Package: libjson-c2
Status: install ok installed
Priority: extra
Section: libs
Installed-Size: 47
Maintainer: fabien boucher <fabien.dot.boucher@gmail.com>
Architecture: armhf
Multi-Arch: same
Source: json-c
Version: 0.11-4
Depends: libc6 (>= 2.8)
Pre-Depends: multiarch-support
Description: JSON manipulation library - shared library
 This library allows you to easily construct JSON objects in C,
 output them as JSON formatted strings and parse JSON formatted
 strings back into the C representation of JSON objects.
Homepage: https://github.com/json-c/json-c/wiki

Package: libwrap0
Status: install ok installed
Priority: standard
Section: libs
Installed-Size: 72
Maintainer: Marco d'Itri <md@linux.it>
Architecture: armhf
Multi-Arch: same
Source: tcp-wrappers
Version: 7.6.q-25
Replaces: tcpd (<< 7.6.q-20)
Depends: libc6 (>= 2.7)
Pre-Depends: multiarch-support
Recommends: tcpd
Breaks: tcpd (<< 7.6.q-20)
Description: Wietse Venema's TCP wrappers library
 Wietse Venema's network logger, also known as TCPD or LOG_TCP.
 .
 These programs log the client host name of incoming telnet,
 ftp, rsh, rlogin, finger etc. requests.
 .
 Security options are:
  - access control per host, domain and/or service;
  - detection of host name spoofing or host address spoofing;
  - booby traps to implement an early-warning system.

Package: libfile-copy-recursive-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 88
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: all
Version: 0.38-1
Depends: perl (>= 5.6.0-16)
Description: Perl extension for recursively copying files and directories
 File::Copy::Recursive module copies and moves directories recursively
 (or single files, well... singley) to an optional depth and attempts
 to preserve each file or directory's mode.
Homepage: http://search.cpan.org/dist/File-Copy-Recursive/

Package: rpcbind
Status: install ok installed
Priority: standard
Section: net
Installed-Size: 85
Maintainer: Anibal Monsalve Salazar <anibal@debian.org>
Architecture: armhf
Version: 0.2.1-6+deb8u2
Replaces: libc-bin (<< 2.16)
Provides: portmap
Depends: libc6 (>= 2.16), libtirpc1 (>= 0.2.5-1+deb8u1), libwrap0 (>= 7.6-4~), lsb-base (>= 4.1+Debian3), insserv (>= 1.14.0-2.1) | file-rc, initscripts (>= 2.88dsf-13.3)
Breaks: libc-bin (<< 2.16)
Conflicts: portmap
Conffiles:
 /etc/init.d/rpcbind 974fba7e24d9ac77723dbbeaa7eb974f
 /etc/init/portmap-wait.conf 5999af4cc5813b66456cfaa2ec373493
 /etc/init/rpcbind-boot.conf 73a7b949697222b8d1616334629269be
 /etc/init/rpcbind.conf b18154e411970f32ac4dbbedd974cd43
 /etc/insserv.conf.d/rpcbind 669a5c3a6ffa8b5b5ce263057934d118
Description: converts RPC program numbers into universal addresses
 The rpcbind utility is a server that converts RPC program numbers
 into universal addresses.
Homepage: http://sourceforge.net/projects/rpcbind/

Package: libavahi-common-data
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 488
Maintainer: Utopia Maintenance Team <pkg-utopia-maintainers@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: avahi
Version: 0.6.31-5
Description: Avahi common data files
 Avahi is a fully LGPL framework for Multicast DNS Service Discovery.
 It allows programs to publish and discover services and hosts
 running on a local network with no specific configuration. For
 example you can plug into a network and instantly find printers to
 print to, files to look at and people to talk to.
 .
 This package contains common data files for avahi.
Homepage: http://avahi.org/

Package: libicu52
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 26535
Maintainer: Laszlo Boszormenyi (GCS) <gcs@debian.org>
Architecture: armhf
Multi-Arch: same
Source: icu
Version: 52.1-8+deb8u5
Depends: libc6 (>= 2.7), libgcc1 (>= 1:4.4.0), libstdc++6 (>= 4.9)
Pre-Depends: multiarch-support
Description: International Components for Unicode
 ICU is a C++ and C library that provides robust and full-featured
 Unicode and locale support.  This package contains the runtime
 libraries for ICU.
Homepage: http://www.icu-project.org

Package: sed
Essential: yes
Status: install ok installed
Priority: required
Section: utils
Installed-Size: 553
Maintainer: Clint Adams <clint@debian.org>
Architecture: armhf
Version: 4.2.2-4+deb8u1
Depends: dpkg (>= 1.15.4) | install-info
Pre-Depends: libc6 (>= 2.7), libselinux1 (>= 1.32)
Description: The GNU sed stream editor
 sed reads the specified files or the standard input if no
 files are specified, makes editing changes according to a
 list of commands, and writes the results to the standard
 output.
Homepage: http://www.gnu.org/software/sed/

Package: python-rpi.gpio
Status: install ok installed
Priority: optional
Section: python
Installed-Size: 101
Maintainer: Ben Croston <ben@croston.org>
Architecture: armhf
Source: rpi.gpio
Version: 0.6.3~jessie-1
Depends: libc6 (>= 2.7), python (<< 2.8), python (>= 2.7~), python:any (>= 2.7.5-5~)
Description: Python GPIO module for Raspberry Pi
 This is the RPi.GPIO Python module, for supporting GPIO on a
 Raspberry Pi
Homepage: http://sourceforge.net/projects/raspberry-gpio-python/

Package: libcups2
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 503
Maintainer: Debian Printing Team <debian-printing@lists.debian.org>
Architecture: armhf
Multi-Arch: same
Source: cups
Version: 1.7.5-11+deb8u1
Depends: libavahi-client3 (>= 0.6.16), libavahi-common3 (>= 0.6.16), libc6 (>= 2.4), libgnutls-deb0-28 (>= 3.3.0), libgssapi-krb5-2 (>= 1.10+dfsg~), zlib1g (>= 1:1.2.0)
Pre-Depends: multiarch-support
Suggests: cups-common
Breaks: cups (<< 1.5.0)
Description: Common UNIX Printing System(tm) - Core library
 The Common UNIX Printing System (or CUPS(tm)) is a printing system and
 general replacement for lpd and the like.  It supports the Internet
 Printing Protocol (IPP), and has its own filtering driver model for
 handling various document types.
 .
 This package provides the base shared libraries for CUPS.
Homepage: http://www.cups.org

Package: libsmartcols1
Status: install ok installed
Priority: required
Section: libs
Installed-Size: 187
Maintainer: Debian util-linux Maintainers <ah-util-linux@debian.org>
Architecture: armhf
Multi-Arch: same
Source: util-linux
Version: 2.25.2-6
Depends: libc6 (>= 2.17)
Pre-Depends: multiarch-support
Description: smart column output alignment library
 The smart column output alignment library, used by fdisk utilities.

Package: libmodule-pluggable-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 91
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: all
Version: 5.1-1
Depends: perl
Description: module for giving  modules the ability to have plugins
 Module::Pluggable provides a simple but, hopefully, extensible way of having
 'plugins' for your module. Essentially all it does is export a method into
 your namespace that looks through a search path for .pm files and turn those
 into class names. Optionally it instantiates those classes for you.
Homepage: https://metacpan.org/release/Module-Pluggable/

Package: libcryptsetup4
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 177
Maintainer: Debian Cryptsetup Team <pkg-cryptsetup-devel@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: cryptsetup
Version: 2:1.6.6-5
Depends: libc6 (>= 2.17), libdevmapper1.02.1 (>= 2:1.02.90), libgcrypt20 (>= 1.6.1), libuuid1 (>= 2.16), libgpg-error0 (>= 1.10-0.1)
Description: disk encryption support - shared library
 Cryptsetup provides an interface for configuring encryption on block
 devices (such as /home or swap partitions), using the Linux kernel
 device mapper target dm-crypt. It features integrated Linux Unified Key
 Setup (LUKS) support.
 .
 This package provides the libcryptsetup shared library.
Homepage: http://code.google.com/p/cryptsetup/

Package: wiringpi
Status: install ok installed
Priority: optional
Section: libraries
Maintainer: Gordon Henderson <projects@drogon.net>
Architecture: armhf
Version: 2.44
Depends: libc6
Description: The wiringPi libraries, headers and gpio command
  Libraries to allow GPIO access on a Raspberry Pi from C and C++
  and BASIC programs as well as from the command-line

Package: libpcap0.8
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 263
Maintainer: Romain Francoise <rfrancoise@debian.org>
Architecture: armhf
Multi-Arch: same
Source: libpcap
Version: 1.6.2-2
Replaces: libpcap0.8-dev (<< 1.0.0-2)
Depends: libc6 (>= 2.11)
Pre-Depends: multiarch-support
Description: system interface for user-level packet capture
 libpcap (Packet CAPture) provides a portable framework for low-level
 network monitoring.  Applications include network statistics collection,
 security monitoring, network debugging, etc.
 .
 Since almost every system vendor provides a different interface for
 packet capture, and since there are several tools that require this
 functionality, the libpcap authors created this system-independent API
 to ease in porting and to alleviate the need for several
 system-dependent packet capture modules in each application.
Homepage: http://www.tcpdump.org/

Package: netbase
Status: install ok installed
Priority: important
Section: admin
Installed-Size: 66
Maintainer: Marco d'Itri <md@linux.it>
Architecture: all
Multi-Arch: foreign
Version: 5.3
Depends: lsb-base (>= 3.0-6)
Recommends: ifupdown
Breaks: ifupdown (<< 0.7)
Conffiles:
 /etc/rpc f0b6f6352bf886623adc04183120f83b
 /etc/protocols bb9c019d6524e913fd72441d58b68216
 /etc/services 7d9960c77b363e2c2f41b77733cf57d4
Description: Basic TCP/IP networking system
 This package provides the necessary infrastructure for basic TCP/IP based
 networking.

Package: zlib1g-dev
Status: install ok installed
Priority: optional
Section: libdevel
Installed-Size: 362
Maintainer: Mark Brown <broonie@debian.org>
Architecture: armhf
Multi-Arch: same
Source: zlib
Version: 1:1.2.8.dfsg-2
Provides: libz-dev
Depends: zlib1g (= 1:1.2.8.dfsg-2), libc6-dev | libc-dev
Conflicts: zlib1-dev
Description: compression library - development
 zlib is a library implementing the deflate compression method found
 in gzip and PKZIP.  This package includes the development support
 files.
Homepage: http://zlib.net/

Package: libcpan-meta-perl
Status: install ok installed
Priority: optional
Section: perl
Installed-Size: 362
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Architecture: all
Version: 2.142690-1
Depends: perl, perl (>= 5.15.0) | libjson-pp-perl, perl (>= 5.17.1) | libcpan-meta-requirements-perl, perl (>= 5.17.1) | libcpan-meta-yaml-perl, perl (>= 5.19.10) | libparse-cpan-meta-perl (>= 1.4414)
Description: Perl module to access CPAN distributions metadata
 Software distributions released to the CPAN include a META.json or, for older
 distributions, META.yml which describes the distribution, its contents, and
 the requirements for building and installing the distribution. The data
 structure stored in the META.json file is described in CPAN::Meta::Spec.
 .
 CPAN::Meta provides a simple class to represent this distribution metadata
 (or distmeta), along with some helpful methods for interrogating that data.
Homepage: https://metacpan.org/release/CPAN-Meta

Package: python-talloc
Status: install ok installed
Priority: optional
Section: python
Installed-Size: 21
Maintainer: Debian Samba Maintainers <pkg-samba-maint@lists.alioth.debian.org>
Architecture: armhf
Source: talloc
Version: 2.1.2-0+deb8u1
Provides: python2.7-talloc
Depends: libc6 (>= 2.4), libpython2.7 (>= 2.7), libtalloc2 (>= 2.0.4~git20101213), python (>= 2.7), python (<< 2.8)
Pre-Depends: multiarch-support
Description: hierarchical pool based memory allocator - Python bindings
 A hierarchical pool based memory allocator with destructors. It uses
 reference counting to determine when memory should be freed.
 .
 This package contains the Python bindings.
Homepage: http://talloc.samba.org/

Package: python-ldb
Status: install ok installed
Priority: optional
Section: python
Installed-Size: 79
Maintainer: Debian Samba Maintainers <pkg-samba-maint@lists.alioth.debian.org>
Architecture: armhf
Source: ldb
Version: 2:1.1.20-0+deb8u1
Provides: python2.7-ldb
Depends: libldb1 (= 2:1.1.20-0+deb8u1), python (>= 2.7), python (<< 2.8), libc6 (>= 2.4), libpython2.7 (>= 2.7), libtalloc2 (>= 2.0.4~git20101213)
Pre-Depends: multiarch-support
Description: Python bindings for LDB
 ldb is a LDAP-like embedded database built on top of TDB.
 .
 This package contains the Python bindings.
Homepage: http://ldb.samba.org/

Package: libavahi-core7
Status: install ok installed
Priority: optional
Section: libs
Installed-Size: 237
Maintainer: Utopia Maintenance Team <pkg-utopia-maintainers@lists.alioth.debian.org>
Architecture: armhf
Multi-Arch: same
Source: avahi
Version: 0.6.31-5
Depends: libavahi-common3 (>= 0.6.16), libc6 (>= 2.15)
Pre-Depends: multiarch-support
Description: Avahi's embeddable mDNS/DNS-SD library
 Avahi is a fully LGPL framework for Multicast DNS Service Discovery.
 It allows programs to publish and discover services and hosts
 running on a local network with no specific configuration. For
 example you can plug into a network and instantly find printers to
 print to, files to look at and people to talk to.
 .
 This package contains the library for Avahi's embeddable mDNS/DNS-SD stack.
 This can be used by embedded applications to integrate mDNS/DNS-SD
 functionality into their applications.
 .
 You should not however use this library for non-embedded applications, you
 should use libavahi-client which interacts with the avahi daemon.
Homepage: http://avahi.org/

Package: libboost-iostreams1.49.0
Status: install ok installed
Priority: important
Section: libs
Installed-Size: 110
Maintainer: Debian Boost Team <pkg-boost-devel@lists.alioth.debian.org>
Architecture: armhf
Source: boost1.49 (1.49.0-4)
Version: 1.49.0-4+b2
Depends: libbz2-1.0, libc6 (>= 2.4), libgcc1 (>= 1:4.4.0), libstdc++6 (>= 4.3.0), zlib1g (>= 1:1.1.4)
Description: Boost.Iostreams Library
 This package forms part of the Boost C++ Libraries collection.
 .
 Boost.Iostreams are a collection of concepts and a set of templates
 which turn models of these concepts into C++ standard library streams
 and stream buffers.
Homepage: http://www.boost.org/libs/iostreams/

                                          /*
 * Copyright (C) 2008 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 *
 * This file satisfies the references within the emulator code
 * mimicking a VxWorks-like API built upon the copperplate library.
 *
 * VxWorks is a registered trademark of Wind River Systems, Inc.
 */

#ifndef _XENOMAI_VXWORKS_LSTLIB_H
#define _XENOMAI_VXWORKS_LSTLIB_H

#include <boilerplate/list.h>
#include <vxworks/types.h>

typedef struct LIST {
	struct pvlistobj list;
	int count;
} LIST;

typedef struct NODE {
	struct pvholder link;
	struct LIST *list;
} NODE;

static inline void lstInit(LIST *l)
{
	pvlist_init(&l->list);
	l->count = 0;
}

static inline void lstAdd(LIST *l, NODE *n)
{
	pvholder_init(&n->link);
	pvlist_append(&n->link, &l->list);
	n->list = l;
	l->count++;
}

static inline int lstCount(LIST *l)
{
	return l->count;
}

static inline void lstDelete(LIST *l, NODE *n)
{
	pvlist_remove(&n->link);
	n->list = NULL;
	l->count--;
}

static inline NODE *lstFirst(LIST *l)
{
	if (l == NULL || pvlist_empty(&l->list))
		return NULL;

	return pvlist_first_entry(&l->list, struct NODE, link);
}

static inline NODE *lstGet(LIST *l)
{
	struct NODE *n;

	if (l == NULL || pvlist_empty(&l->list))
		return NULL;

	n = pvlist_pop_entry(&l->list, struct NODE, link);
	n->list = NULL;
	l->count--;

	return n;
}

static inline void lstInsert(LIST *l, NODE *nprev, NODE *n)
{
	pvholder_init(&n->link);

	if (nprev == NULL)
		pvlist_prepend(&n->link, &l->list);
	else
		pvlist_insert(&n->link, &nprev->link);

	n->list = l;
	l->count++;
}

static inline NODE *lstLast(LIST *l)
{
	if (l == NULL || pvlist_empty(&l->list))
		return NULL;

	return pvlist_last_entry(&l->list, struct NODE, link);
}

static inline NODE *lstNext(NODE *n)
{
	if (n->list == NULL || &n->link == n->list->list.head.prev)
		return NULL;

	return container_of(n->link.next, struct NODE, link);
}

static inline NODE *lstPrevious(NODE *n)
{
	if (n->list == NULL || &n->link == n->list->list.head.next)
		return NULL;

	return container_of(n->link.prev, struct NODE, link);
}

static inline void lstFree(LIST *l)
{
	lstInit(l);
}

#ifdef __cplusplus
extern "C" {
#endif

void lstExtract(LIST *lsrc, NODE *nstart, NODE *nend, LIST *ldst);

NODE *lstNth(LIST *l, int nodenum);

NODE *lstNStep(NODE *n, int steps);

int lstFind(LIST *l, NODE *n);

void lstConcat(LIST *ldst, LIST *lsrc);

#ifdef __cplusplus
}
#endif

#endif /* !_XENOMAI_VXWORKS_LSTLIB_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 /*
 * Copyright (C) 2008 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 *
 * This file satisfies the references within the emulator code
 * mimicking a VxWorks-like API built upon the copperplate library.
 *
 * VxWorks is a registered trademark of Wind River Systems, Inc.
 */

#ifndef _XENOMAI_VXWORKS_TYPES_H
#define _XENOMAI_VXWORKS_TYPES_H

#include <stdint.h>

#undef STATUS
typedef int STATUS;
typedef int BOOL;

typedef unsigned int UINT;

typedef unsigned long ULONG;

#define NO_WAIT		0
#define WAIT_FOREVER	(-1)

#endif /* !_XENOMAI_VXWORKS_TYPES_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          /*
 * Copyright (C) 2011 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */

#ifndef _COPPERPLATE_SEMOBJ_H
#define _COPPERPLATE_SEMOBJ_H

#include <boilerplate/compiler.h>
#include <copperplate/reference.h>

struct semobj_waitentry {
	pid_t pid;
	char name[32];
};

#ifdef CONFIG_XENO_COBALT

#include <semaphore.h>

struct semobj_corespec {
	sem_t sem;
};

#else  /* CONFIG_XENO_MERCURY */

#include <copperplate/syncobj.h>

struct semobj_corespec {
	struct syncobj sobj;
	int flags;
	int value;
};

#endif /* CONFIG_XENO_MERCURY */

struct semobj {
	struct semobj_corespec core;
	fnref_type(void (*)(struct semobj *smobj)) finalizer;
};

#define SEMOBJ_PRIO	0x1
#define SEMOBJ_PULSE	0x2
#define SEMOBJ_WARNDEL	0x4

#ifdef __cplusplus
extern "C" {
#endif

int semobj_init(struct semobj *smobj,
		int flags, int value,
		fnref_type(void (*)(struct semobj *smobj)) finalizer);

int semobj_destroy(struct semobj *smobj);

void semobj_uninit(struct semobj *smobj);

int semobj_post(struct semobj *smobj);

int semobj_broadcast(struct semobj *smobj);

int semobj_wait(struct semobj *smobj,
		const struct timespec *timeout) __must_check;

int semobj_getvalue(struct semobj *smobj, int *sval);

int semobj_inquire(struct semobj *smobj, size_t waitsz,
		   struct semobj_waitentry *waitlist,
		   int *val_r);

#ifdef __cplusplus
}
#endif

#endif /* _COPPERPLATE_SEMOBJ_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    /*
 * Copyright (C) 2012 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */

#ifndef _COPPERPLATE_EVENTOBJ_H
#define _COPPERPLATE_EVENTOBJ_H

#include <boilerplate/compiler.h>
#include <copperplate/reference.h>

struct eventobj_waitentry {
	pid_t pid;
	char name[32];
};

#ifdef CONFIG_XENO_COBALT

#include <cobalt/uapi/event.h>

struct eventobj_corespec {
	cobalt_event_t event;
};

struct eventobj_wait_struct {
};

#define EVOBJ_FIFO  COBALT_EVENT_FIFO
#define EVOBJ_PRIO  COBALT_EVENT_PRIO

#define EVOBJ_ALL   COBALT_EVENT_ALL
#define EVOBJ_ANY   COBALT_EVENT_ANY

#else  /* CONFIG_XENO_MERCURY */

#include <copperplate/syncobj.h>

struct eventobj_corespec {
	struct syncobj sobj;
	unsigned int value;
	int flags;
};

struct eventobj_wait_struct {
	unsigned int value;
	int mode;
};

#define EVOBJ_FIFO  0x0
#define EVOBJ_PRIO  0x1

#define EVOBJ_ALL   0x0
#define EVOBJ_ANY   0x1

#endif /* CONFIG_XENO_MERCURY */

struct eventobj {
	struct eventobj_corespec core;
	fnref_type(void (*)(struct eventobj *evobj)) finalizer;
};

#ifdef __cplusplus
extern "C" {
#endif

int eventobj_init(struct eventobj *evobj,
		  unsigned int value, int flags,
		  fnref_type(void (*)(struct eventobj *evobj)) finalizer) __must_check;

int eventobj_destroy(struct eventobj *evobj);

void eventobj_uninit(struct eventobj *evobj);
  
int eventobj_post(struct eventobj *evobj,
		  unsigned int bits);

int eventobj_wait(struct eventobj *evobj,
		  unsigned int bits,
		  unsigned int *bits_r,
		  int mode,
		  const struct timespec *timeout) __must_check;

int eventobj_clear(struct eventobj *evobj,
		   unsigned int bits,
		   unsigned int *bits_r);

int eventobj_inquire(struct eventobj *evobj, size_t waitsz,
		     struct eventobj_waitentry *waitlist,
		     unsigned int *bits_r);

#ifdef __cplusplus
}
#endif

#endif /* _COPPERPLATE_EVENTOBJ_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           /*
 * Copyright (C) 2008 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */

#ifndef _COPPERPLATE_TRACEOBJ_H
#define _COPPERPLATE_TRACEOBJ_H

#include <pthread.h>

struct threadobj;

struct traceobj {
	pthread_mutex_t lock;
	pthread_cond_t join;
	const char *label;
	int nr_marks;
	int cur_mark;
	struct tracemark *marks;
	int nr_threads;
};

#define traceobj_assert(trobj, cond)					\
do {									\
	int __ret = (cond);						\
	if (!__ret)							\
		__traceobj_assert_failed(trobj, __FILE__, __LINE__, __STRING(cond)); \
} while(0)

#define traceobj_check(__trobj, __status, __expected)			\
do {									\
	if (__status != __expected)					\
		__traceobj_check_abort(__trobj, __FILE__, __LINE__, 	\
				       __status, __expected);		\
} while(0)

#define traceobj_check_warn(__trobj, __status, __expected)		\
do {									\
	if (__status != __expected)					\
		__traceobj_check_warn(__trobj, __FILE__, __LINE__, 	\
				      __status, __expected);		\
} while(0)

#define traceobj_mark(trobj, mark)	\
	__traceobj_mark(trobj, __FILE__, __LINE__, mark)

#ifdef __cplusplus
extern "C" {
#endif

int traceobj_init(struct traceobj *trobj,
		  const char *label, int nr_marks);

void traceobj_verify(struct traceobj *trobj, int tseq[], int nr_seq);

void traceobj_destroy(struct traceobj *trobj);

void traceobj_enter(struct traceobj *trobj);

void traceobj_exit(struct traceobj *trobj);

void traceobj_unwind(struct traceobj *trobj);

void traceobj_join(struct traceobj *trobj);

void __traceobj_assert_failed(struct traceobj *trobj,
			      const char *file, int line, const char *cond);

void __traceobj_check_abort(struct traceobj *trobj,
			    const char *file, int line,
			    int received, int expected);

void __traceobj_check_warn(struct traceobj *trobj,
			   const char *file, int line,
			   int received, int expected);
	
void __traceobj_mark(struct traceobj *trobj,
		     const char *file, int line, int mark);

#ifdef __cplusplus
}
#endif

#endif /* _COPPERPLATE_TRACEOBJ_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      /*
 * Copyright (C) 2008 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */

#ifndef _COPPERPLATE_REGISTRY_H
#define _COPPERPLATE_REGISTRY_H

#include <sys/types.h>
#include <pthread.h>
#include <fcntl.h>
#include <boilerplate/list.h>
#include <boilerplate/hash.h>
#include <boilerplate/obstack.h>

struct fsobj;

#define REGISTRY_SHARED  1
#define REGISTRY_ANON    2

#ifdef CONFIG_XENO_REGISTRY

struct registry_operations {
	int (*open)(struct fsobj *fsobj, void *priv);
	int (*release)(struct fsobj *fsobj, void *priv);
	ssize_t (*read)(struct fsobj *fsobj,
			char *buf, size_t size, off_t offset,
			void *priv);
	ssize_t (*write)(struct fsobj *fsobj,
			 const char *buf, size_t size, off_t offset,
			 void *priv);
};

struct regfs_dir;

struct fsobj {
	pthread_mutex_t lock;
	char *path;
	const char *basename;
	int mode;
	size_t privsz;
	struct regfs_dir *dir;
	struct timespec ctime;
	struct timespec mtime;
	const struct registry_operations *ops;
	struct pvholder link;
	struct pvhashobj hobj;
};

#ifdef __cplusplus
extern "C" {
#endif

int registry_add_dir(const char *fmt, ...);

int registry_init_file(struct fsobj *fsobj,
		       const struct registry_operations *ops,
		       size_t privsz);

int registry_add_file(struct fsobj *fsobj,
		      int mode,
		      const char *fmt, ...);

void registry_destroy_file(struct fsobj *fsobj);

void registry_touch_file(struct fsobj *fsobj);

int __registry_pkg_init(const char *arg0,
			char *mountpt,
			int flags);

int registry_pkg_init(const char *arg0,
		      int flags);

void registry_pkg_destroy(void);

#ifdef __cplusplus
}
#endif

#else /* !CONFIG_XENO_REGISTRY */

struct fsobj {
};

struct registry_operations {
};

static inline
int registry_add_dir(const char *fmt, ...)
{
	return 0;
}

static inline
void registry_init_file(struct fsobj *fsobj,
			const struct registry_operations *ops,
			size_t privsz)
{
}

static inline
int registry_add_file(struct fsobj *fsobj,
		      int mode,
		      const char *fmt, ...)
{
	return 0;
}

static inline
void registry_destroy_file(struct fsobj *fsobj)
{
}

static inline
void registry_touch_file(struct fsobj *fsobj)
{
}

static inline
int __registry_pkg_init(const char *arg0,
			char *mountpt, int flags)
{
	return 0;
}

static inline
int registry_pkg_init(const char *arg0,
		      int flags)
{
	return 0;
}

static inline
void registry_pkg_destroy(void)
{
}

#endif /* !CONFIG_XENO_REGISTRY */

#endif /* !_COPPERPLATE_REGISTRY_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     /*
 * Copyright (C) 2015 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COPPERPLATE_TUNABLES_H
#define _COPPERPLATE_TUNABLES_H

#include <boilerplate/tunables.h>

struct copperplate_setup_data {
	const char *session_root;
	const char *session_label;
	const char *registry_root;
	int no_registry;
	int shared_registry;
	size_t mem_pool;
	gid_t session_gid;
};

#ifdef __cplusplus
extern "C" {
#endif

extern struct copperplate_setup_data __copperplate_setup_data;

define_config_tunable(session_label, const char *, label);

static inline read_config_tunable(session_label, const char *)
{
	return __copperplate_setup_data.session_label;
}

static inline define_config_tunable(registry_root, const char *, root)
{
	__copperplate_setup_data.registry_root = root;
}

static inline read_config_tunable(registry_root, const char *)
{
	return __copperplate_setup_data.registry_root;
}

static inline define_config_tunable(no_registry, int, noreg)
{
	__copperplate_setup_data.no_registry = noreg;
}

static inline read_config_tunable(no_registry, int)
{
	return __copperplate_setup_data.no_registry;
}

static inline define_config_tunable(shared_registry, int, shared)
{
	__copperplate_setup_data.shared_registry = shared;
}

static inline read_config_tunable(shared_registry, int)
{
	return __copperplate_setup_data.shared_registry;
}

static inline define_config_tunable(mem_pool_size, size_t, size)
{
	__copperplate_setup_data.mem_pool = size;
}

static inline read_config_tunable(mem_pool_size, size_t)
{
	return __copperplate_setup_data.mem_pool;
}

static inline define_config_tunable(session_gid, gid_t, gid)
{
	__copperplate_setup_data.session_gid = gid;
}

static inline read_config_tunable(session_gid, gid_t)
{
	return __copperplate_setup_data.session_gid;
}

#ifdef __cplusplus
}
#endif

#endif /* !_COPPERPLATE_TUNABLES_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         /*
 * Copyright (C) 2008 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */

#ifndef _COPPERPLATE_THREADOBJ_H
#define _COPPERPLATE_THREADOBJ_H

#include <time.h>
#include <semaphore.h>
#include <signal.h>
#include <pthread.h>
#include <stdint.h>
#include <boilerplate/list.h>
#include <boilerplate/lock.h>
#include <boilerplate/sched.h>
#include <copperplate/clockobj.h>
#include <copperplate/heapobj.h>
#include <copperplate/debug.h>

#ifdef CONFIG_XENO_COBALT

#include <cobalt/uapi/kernel/types.h>

struct xnthread_user_window;

struct threadobj_corespec {
	xnhandle_t handle;
	union {
		__u32 u_winoff;
		struct xnthread_user_window *u_window;
	};
};

struct threadobj_stat {
	/** Execution time in primary mode (ns). */
	ticks_t xtime;
	/** Current timeout value (ns). */
	ticks_t timeout;
	/** Number of primary->secondary mode switches. */
	uint64_t msw;
	/** Number of context switches. */
	uint64_t csw;
	/** Number of Xenomai syscalls. */
	uint64_t xsc;
	/** Current CPU for thread. */
	int cpu;
	/** Scheduler lock nesting count. */
	int schedlock;
	/** Cobalt thread status bits. */
	unsigned int status;
	/** Number of page faults. */
	uint32_t pf;
};

#define SCHED_CORE  SCHED_COBALT

static inline
void threadobj_save_timeout(struct threadobj_corespec *corespec,
			    const struct timespec *timeout)
{
	/*
	 * We retrieve this information from the nucleus directly via
	 * cobalt_thread_stat().
	 */
}

#ifdef CONFIG_XENO_PSHARED

static inline struct xnthread_user_window *
threadobj_get_window(struct threadobj_corespec *corespec)
{
	extern void *cobalt_umm_shared;
	return (struct xnthread_user_window *)
		((caddr_t)cobalt_umm_shared + corespec->u_winoff);
}

#else /* !CONFIG_XENO_PSHARED */

static inline struct xnthread_user_window *
threadobj_get_window(struct threadobj_corespec *corespec)
{
	return corespec->u_window;
}

#endif /* !CONFIG_XENO_PSHARED */

#else  /* CONFIG_XENO_MERCURY */

#include <sys/time.h>

struct threadobj_corespec {
	pthread_cond_t grant_sync;
	int policy_unlocked;
	struct sched_param_ex schedparam_unlocked;
	timer_t rr_timer;
	/** Timeout reported by sysregd. */
	struct timespec timeout;
#ifdef CONFIG_XENO_WORKAROUND_CONDVAR_PI
	int policy_unboosted;
	struct sched_param_ex schedparam_unboosted;
#endif
};

struct threadobj_stat {
	/** Current timeout value (ns). */
	ticks_t timeout;
	/** Current CPU for thread. */
	int cpu;
	/** Scheduler lock nesting count. */
	int schedlock;
	/** Mercury thread status bits. */
	unsigned int status;
};

#define SCHED_CORE  SCHED_FIFO

static inline
void threadobj_save_timeout(struct threadobj_corespec *corespec,
			    const struct timespec *timeout)
{
	if (timeout)
		corespec->timeout = *timeout;
}

#endif /* CONFIG_XENO_MERCURY */

/*
 * threadobj->status, updated with ->lock held.
 */
#define __THREAD_S_STARTED	(1 << 0)	/* threadobj_start() called. */
#define __THREAD_S_WARMUP	(1 << 1)	/* threadobj_prologue() not called yet. */
#define __THREAD_S_ABORTED	(1 << 2)	/* Cancelled before start. */
#define __THREAD_S_LOCKED	(1 << 3)	/* threadobj_lock() granted (debug only). */
#define __THREAD_S_ACTIVE	(1 << 4)	/* Running user code. */
#define __THREAD_S_SUSPENDED	(1 << 5)	/* Suspended via threadobj_suspend(). */
#define __THREAD_S_SAFE		(1 << 6)	/* TCB release deferred. */
#define __THREAD_S_DEBUG	(1 << 31)	/* Debug mode enabled. */
/*
 * threadobj->run_state, locklessly updated by "current", merged
 * with ->status bits by threadobj_get_status().
 */
#define __THREAD_S_RUNNING	0
#define __THREAD_S_DORMANT	(1 << 16)
#define __THREAD_S_WAIT		(1 << 17)
#define __THREAD_S_TIMEDWAIT	(1 << 18)
#define __THREAD_S_DELAYED	(1 << 19)
#define __THREAD_S_BREAK	(__THREAD_S_DELAYED|(1 << 20))

/* threadobj mode bits */
#define __THREAD_M_LOCK		(1 << 0) /* Toggle scheduler lock. */
#define __THREAD_M_WARNSW	(1 << 1) /* Toggle switch warning bit. */
#define __THREAD_M_CONFORMING	(1 << 2) /* Switch to conforming mode. */
#define __THREAD_M_SPARE0	(1 << 16)
#define __THREAD_M_SPARE1	(1 << 17)
#define __THREAD_M_SPARE2	(1 << 18)
#define __THREAD_M_SPARE3	(1 << 19)
#define __THREAD_M_SPARE4	(1 << 20)
#define __THREAD_M_SPARE5	(1 << 21)
#define __THREAD_M_SPARE6	(1 << 22)
#define __THREAD_M_SPARE7	(1 << 23)

#define THREADOBJ_IRQCONTEXT    ((struct threadobj *)-2UL)

struct traceobj;
struct syncobj;

struct threadobj {
	unsigned int magic;	/* Must be first. */
	pthread_t ptid;
	pthread_mutex_t lock;

	int schedlock_depth;
	int cancel_state;
	int status;
	int run_state;
	int policy;
	struct sched_param_ex schedparam;
	int global_priority;
	pid_t cnode;
	pid_t pid;
	char name[32];

	void (*finalizer)(struct threadobj *thobj);
	int core_offset;
	int *errno_pointer;
	/* Those members belong exclusively to the syncobj code. */
	struct syncobj *wait_sobj;
	struct holder wait_link;
	int wait_status;
	int wait_prio;
  	dref_type(void *) wait_union;
	size_t wait_size;
	timer_t periodic_timer;

	struct threadobj_corespec core;
	struct timespec tslice;
	pthread_cond_t barrier;
	struct traceobj *tracer;
	sem_t *cancel_sem;
	struct sysgroup_memspec memspec;
	struct backtrace_data btd;
};

struct threadobj_init_data {
	unsigned int magic;
	cpu_set_t affinity;
	int policy;
	struct sched_param_ex param_ex;
	void (*finalizer)(struct threadobj *thobj);
};

extern int threadobj_high_prio;

extern int threadobj_irq_prio;

extern pthread_key_t threadobj_tskey;

#ifdef HAVE_TLS

extern __thread __attribute__ ((tls_model (CONFIG_XENO_TLS_MODEL)))
struct threadobj *__threadobj_current;

static inline void threadobj_set_current(struct threadobj *thobj)
{
	__threadobj_current = thobj;
	pthread_setspecific(threadobj_tskey, thobj);
}

static inline struct threadobj *__threadobj_get_current(void)
{
	return __threadobj_current;
}

#else /* !HAVE_TLS */

static inline void threadobj_set_current(struct threadobj *thobj)
{
	pthread_setspecific(threadobj_tskey, thobj);
}

static inline struct threadobj *__threadobj_get_current(void)
{
	return (struct threadobj *)pthread_getspecific(threadobj_tskey);
}

#endif /* !HAVE_TLS */

static inline struct threadobj *threadobj_current(void)
{
	struct threadobj *thobj = __threadobj_get_current();
	return thobj == NULL || thobj == THREADOBJ_IRQCONTEXT ? NULL : thobj;
}

#ifdef CONFIG_XENO_DEBUG

static inline void __threadobj_tag_locked(struct threadobj *thobj)
{
	thobj->status |= __THREAD_S_LOCKED;
}

static inline void __threadobj_tag_unlocked(struct threadobj *thobj)
{
	assert(thobj->status & __THREAD_S_LOCKED);
	thobj->status &= ~__THREAD_S_LOCKED;
}

static inline void __threadobj_check_locked(struct threadobj *thobj)
{
	assert(thobj->status & __THREAD_S_LOCKED);
}

#else /* !CONFIG_XENO_DEBUG */

static inline void __threadobj_tag_locked(struct threadobj *thobj)
{
}

static inline void __threadobj_tag_unlocked(struct threadobj *thobj)
{
}

static inline void __threadobj_check_locked(struct threadobj *thobj)
{
}

#endif /* !CONFIG_XENO_DEBUG */

#ifdef __cplusplus
extern "C" {
#endif

void *__threadobj_alloc(size_t tcb_struct_size,
			size_t wait_union_size,
			int thobj_offset);

static inline void __threadobj_free(void *p)
{
	xnfree(p);
}

static inline void threadobj_free(struct threadobj *thobj)
{
	__threadobj_free((unsigned char *)thobj - thobj->core_offset);
}

int threadobj_init(struct threadobj *thobj,
		   struct threadobj_init_data *idata) __must_check;

int threadobj_start(struct threadobj *thobj) __must_check;

int threadobj_shadow(struct threadobj *thobj,
		     const char *name);

int threadobj_prologue(struct threadobj *thobj,
		       const char *name);

void threadobj_wait_start(void);

void threadobj_notify_entry(void);

int threadobj_cancel(struct threadobj *thobj);

void threadobj_uninit(struct threadobj *thobj);

int threadobj_suspend(struct threadobj *thobj);

int threadobj_resume(struct threadobj *thobj);

int threadobj_unblock(struct threadobj *thobj);

int __threadobj_lock_sched(struct threadobj *current);

int threadobj_lock_sched(void);

int __threadobj_unlock_sched(struct threadobj *current);

int threadobj_unlock_sched(void);

int threadobj_set_schedparam(struct threadobj *thobj, int policy,
			     const struct sched_param_ex *param_ex);

int threadobj_set_schedprio(struct threadobj *thobj, int priority);

int threadobj_set_mode(int clrmask, int setmask, int *mode_r);

int threadobj_set_periodic(struct threadobj *thobj,
			   const struct timespec *__restrict__ idate,
			   const struct timespec *__restrict__ period);

int threadobj_wait_period(unsigned long *overruns_r) __must_check;

void threadobj_spin(ticks_t ns);

int threadobj_stat(struct threadobj *thobj,
		   struct threadobj_stat *stat);

int threadobj_sleep(const struct timespec *ts);

void threadobj_set_current_name(const char *name);

#ifdef CONFIG_XENO_PSHARED

static inline int threadobj_local_p(struct threadobj *thobj)
{
	extern pid_t __node_id;
	return thobj->cnode == __node_id;
}

#else /* !CONFIG_XENO_PSHARED */

static inline int threadobj_local_p(struct threadobj *thobj)
{
	return 1;
}

#endif	/* !CONFIG_XENO_PSHARED */

void threadobj_init_key(void);

int threadobj_pkg_init(int anon_session);

#ifdef __cplusplus
}
#endif

#define threadobj_alloc(T, __mptr, W)					\
	({								\
		void *__p;						\
		__p = __threadobj_alloc(sizeof(T), sizeof(W), offsetof(T, __mptr)); \
		__p;							\
	})

static inline int threadobj_get_policy(struct threadobj *thobj)
{
	return thobj->policy;
}

static inline int threadobj_get_priority(struct threadobj *thobj)
{
	return thobj->schedparam.sched_priority;
}

static inline void threadobj_copy_schedparam(struct sched_param_ex *param_ex,
					     const struct threadobj *thobj)
{
	*param_ex = thobj->schedparam;
}

static inline int threadobj_lock(struct threadobj *thobj)
{
	int ret;

	ret = write_lock_safe(&thobj->lock, thobj->cancel_state);
	if (ret)
		return ret;

	__threadobj_tag_locked(thobj);

	return 0;
}

static inline int threadobj_trylock(struct threadobj *thobj)
{
	int ret;

	ret = write_trylock_safe(&thobj->lock, thobj->cancel_state);
	if (ret)
		return ret;

	__threadobj_tag_locked(thobj);

	return 0;
}

static inline int threadobj_unlock(struct threadobj *thobj)
{
	__threadobj_check_locked(thobj);
	__threadobj_tag_unlocked(thobj);
	return write_unlock_safe(&thobj->lock, thobj->cancel_state);
}

static inline int threadobj_irq_p(void)
{
	struct threadobj *current = __threadobj_get_current();
	return current == THREADOBJ_IRQCONTEXT;
}

static inline int threadobj_current_p(void)
{
	return threadobj_current() != NULL;
}

static inline int __threadobj_lock_sched_once(struct threadobj *current)
{
	if (current->schedlock_depth == 0)
		return __threadobj_lock_sched(current);

	return -EBUSY;
}

static inline int threadobj_lock_sched_once(void)
{
	struct threadobj *current = threadobj_current();

	if (current->schedlock_depth == 0)
		return threadobj_lock_sched();

	return -EBUSY;
}

static inline void threadobj_yield(void)
{
	__RT(sched_yield());
}

static inline unsigned int threadobj_get_magic(struct threadobj *thobj)
{
	return thobj->magic;
}

static inline void threadobj_set_magic(struct threadobj *thobj,
				       unsigned int magic)
{
	thobj->magic = magic;
}

static inline int threadobj_get_lockdepth(struct threadobj *thobj)
{
	return thobj->schedlock_depth;
}

static inline int threadobj_get_status(struct threadobj *thobj)
{
	return thobj->status | thobj->run_state;
}

static inline int threadobj_get_errno(struct threadobj *thobj)
{
	return *thobj->errno_pointer;
}

#define threadobj_prepare_wait(T)					\
	({								\
		struct threadobj *__thobj = threadobj_current();	\
		assert(__thobj != NULL);				\
		assert(sizeof(typeof(T)) <= __thobj->wait_size);	\
		__mptr(__thobj->wait_union);				\
	})

#define threadobj_finish_wait()		do { } while (0)

static inline void *threadobj_get_wait(struct threadobj *thobj)
{
	return __mptr(thobj->wait_union);
}

static inline const char *threadobj_get_name(struct threadobj *thobj)
{
	return thobj->name;
}

static inline pid_t threadobj_get_pid(struct threadobj *thobj)
{
	return thobj->pid;
}

#ifdef CONFIG_XENO_WORKAROUND_CONDVAR_PI

int threadobj_cond_timedwait(pthread_cond_t *cond,
			     pthread_mutex_t *lock,
			     const struct timespec *timeout);

int threadobj_cond_wait(pthread_cond_t *cond,
			pthread_mutex_t *lock);

int threadobj_cond_signal(pthread_cond_t *cond);

int threadobj_cond_broadcast(pthread_cond_t *cond);

#else

static inline
int threadobj_cond_timedwait(pthread_cond_t *cond,
			     pthread_mutex_t *lock,
			     const struct timespec *timeout)
{
	return __RT(pthread_cond_timedwait(cond, lock, timeout));
}

static inline
int threadobj_cond_wait(pthread_cond_t *cond,
			pthread_mutex_t *lock)
{
	return __RT(pthread_cond_wait(cond, lock));
}

static inline
int threadobj_cond_signal(pthread_cond_t *cond)
{
	return __RT(pthread_cond_signal(cond));
}

static inline
int threadobj_cond_broadcast(pthread_cond_t *cond)
{
	return __RT(pthread_cond_broadcast(cond));
}

#endif /* !CONFIG_XENO_WORKAROUND_CONDVAR_PI */

#endif /* _COPPERPLATE_THREADOBJ_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               /*
 * Copyright (C) 2011 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */

#ifndef _COPPERPLATE_DEBUG_H
#define _COPPERPLATE_DEBUG_H

#include <boilerplate/debug.h>

#ifdef CONFIG_XENO_DEBUG

struct threadobj;

#define debug(__fmt, __args...)						\
	do {								\
		struct threadobj *__thobj = threadobj_current();	\
		if (__thobj == NULL ||					\
		    (__thobj->status & __THREAD_S_DEBUG) != 0)		\
		  __debug(__thobj ? __thobj->name : NULL, __fmt, ##__args); \
	} while (0)

#else /* !CONFIG_XENO_DEBUG */

#define debug(fmt, args...)  do { } while (0)

#endif /* !CONFIG_XENO_DEBUG */

#endif /* _COPPERPLATE_DEBUG_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          /*
 * Copyright (C) 2008-2011 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */

#ifndef _COPPERPLATE_HEAPOBJ_H
#define _COPPERPLATE_HEAPOBJ_H

#include <sys/types.h>
#include <stdint.h>
#include <string.h>
#include <assert.h>
#include <errno.h>
#include <pthread.h>
#include <xeno_config.h>
#include <boilerplate/wrappers.h>
#include <boilerplate/list.h>
#include <copperplate/reference.h>
#include <boilerplate/lock.h>
#include <copperplate/debug.h>

struct heapobj {
	union {
		dref_type(void *) pool_ref;
		void *pool;
	};
	size_t size;
	char name[32];
#ifdef CONFIG_XENO_PSHARED
	char fsname[256];
#endif
};

struct sysgroup {
	int thread_count;
	struct listobj thread_list;
	int heap_count;
	struct listobj heap_list;
	pthread_mutex_t lock;
};

#ifdef __cplusplus
extern "C" {
#endif

int heapobj_pkg_init_private(void);

int __heapobj_init_private(struct heapobj *hobj, const char *name,
			   size_t size, void *mem);

int heapobj_init_array_private(struct heapobj *hobj, const char *name,
			       size_t size, int elems);
#ifdef __cplusplus
}
#endif

#ifdef CONFIG_XENO_TLSF

size_t get_used_size(void *pool);
void destroy_memory_pool(void *pool);
size_t add_new_area(void *pool, size_t size, void *mem);
void *malloc_ex(size_t size, void *pool);
void free_ex(void *pool, void *ptr);
void *tlsf_malloc(size_t size);
void tlsf_free(void *ptr);
size_t malloc_usable_size_ex(void *ptr, void *pool);

static inline
void pvheapobj_destroy(struct heapobj *hobj)
{
	destroy_memory_pool(hobj->pool);
}

static inline
int pvheapobj_extend(struct heapobj *hobj, size_t size, void *mem)
{
	hobj->size = add_new_area(hobj->pool, size, mem);
	if (hobj->size == (size_t)-1)
		return __bt(-EINVAL);

	return 0;
}

static inline
void *pvheapobj_alloc(struct heapobj *hobj, size_t size)
{
	return malloc_ex(size, hobj->pool);
}

static inline
void pvheapobj_free(struct heapobj *hobj, void *ptr)
{
	free_ex(ptr, hobj->pool);
}

static inline
size_t pvheapobj_validate(struct heapobj *hobj, void *ptr)
{
	return malloc_usable_size_ex(ptr, hobj->pool);
}

static inline
size_t pvheapobj_inquire(struct heapobj *hobj)
{
	return get_used_size(hobj->pool);
}

static inline void *pvmalloc(size_t size)
{
	return tlsf_malloc(size);
}

static inline void pvfree(void *ptr)
{
	tlsf_free(ptr);
}

static inline char *pvstrdup(const char *ptr)
{
	char *str;

	str = (char *)pvmalloc(strlen(ptr) + 1);
	if (str == NULL)
		return NULL;

	return strcpy(str, ptr);
}

#else /* !CONFIG_XENO_TLSF, i.e. malloc */

#include <malloc.h>

static inline void *pvmalloc(size_t size)
{
	/*
	 * NOTE: We don't want debug _nrt assertions to trigger when
	 * running over Cobalt if the user picked this allocator, so
	 * we make sure to call the glibc directly, not the Cobalt
	 * wrappers.
	 */
	return __STD(malloc(size));
}

static inline void pvfree(void *ptr)
{
	__STD(free(ptr));
}

static inline char *pvstrdup(const char *ptr)
{
	return strdup(ptr);
}

void pvheapobj_destroy(struct heapobj *hobj);

int pvheapobj_extend(struct heapobj *hobj, size_t size, void *mem);

void *pvheapobj_alloc(struct heapobj *hobj, size_t size);

void pvheapobj_free(struct heapobj *hobj, void *ptr);

size_t pvheapobj_inquire(struct heapobj *hobj);

size_t pvheapobj_validate(struct heapobj *hobj, void *ptr);

#endif /* !CONFIG_XENO_TLSF */

#ifdef CONFIG_XENO_PSHARED

extern void *__main_heap;

extern struct hash_table *__main_catalog;
#define main_catalog	(*((struct hash_table *)__main_catalog))

extern struct sysgroup *__main_sysgroup;

struct sysgroup_memspec {
	/** next member in sysgroup list. */
	struct holder next;
};

static inline void *mainheap_ptr(memoff_t off)
{
	return off ? (void *)__memptr(__main_heap, off) : NULL;
}

static inline memoff_t mainheap_off(void *addr)
{
	return addr ? (memoff_t)__memoff(__main_heap, addr) : 0;
}

/*
 * ptr shall point to a block of memory allocated within the main heap
 * if non-null; such address is always 8-byte aligned. Handles of
 * shared heap pointers are returned with bit #0 set, which serves as
 * a special tag detected in mainhead_deref(). A null pointer is
 * always translated as a null handle.
 */
#define mainheap_ref(ptr, type)						\
	({								\
		type handle;						\
		assert(__builtin_types_compatible_p(typeof(type), unsigned long) || \
		       __builtin_types_compatible_p(typeof(type), uintptr_t)); \
		assert(ptr == NULL || __memchk(__main_heap, ptr));	\
		handle = (type)mainheap_off(ptr);			\
		handle|1;						\
	})
/*
 * Handles of shared heap-based pointers have bit #0 set. Other values
 * are not translated, and the return value is the original handle
 * cast to a pointer. A null handle is always returned unchanged.
 */
#define mainheap_deref(handle, type)					\
	({								\
		type *ptr;						\
		assert(__builtin_types_compatible_p(typeof(handle), unsigned long) || \
		       __builtin_types_compatible_p(typeof(handle), uintptr_t)); \
		ptr = (handle & 1) ? (type *)mainheap_ptr(handle & ~1UL) : (type *)handle; \
		ptr;							\
	})

static inline void
__sysgroup_add(struct sysgroup_memspec *obj, struct listobj *q, int *countp)
{
	write_lock_nocancel(&__main_sysgroup->lock);
	(*countp)++;
	list_append(&obj->next, q);
	write_unlock(&__main_sysgroup->lock);
}

#define sysgroup_add(__group, __obj)	\
	__sysgroup_add(__obj, &(__main_sysgroup->__group ## _list),	\
		       &(__main_sysgroup->__group ## _count))

static inline void
__sysgroup_remove(struct sysgroup_memspec *obj, int *countp)
{
	write_lock_nocancel(&__main_sysgroup->lock);
	(*countp)--;
	list_remove(&obj->next);
	write_unlock(&__main_sysgroup->lock);
}

#define sysgroup_remove(__group, __obj)	\
	__sysgroup_remove(__obj, &(__main_sysgroup->__group ## _count))

static inline void sysgroup_lock(void)
{
	read_lock_nocancel(&__main_sysgroup->lock);
}

static inline void sysgroup_unlock(void)
{
	read_unlock(&__main_sysgroup->lock);
}

#define sysgroup_count(__group)	\
	(__main_sysgroup->__group ## _count)

#define for_each_sysgroup(__obj, __tmp, __group)	\
	list_for_each_entry_safe(__obj, __tmp, &(__main_sysgroup->__group ## _list), next)

int heapobj_pkg_init_shared(void);

int heapobj_init(struct heapobj *hobj, const char *name,
		 size_t size);

static inline int __heapobj_init(struct heapobj *hobj, const char *name,
				 size_t size, void *unused)
{
	/* Can't work on user-defined memory in shared mode. */
	return heapobj_init(hobj, name, size);
}

int heapobj_init_array(struct heapobj *hobj, const char *name,
		       size_t size, int elems);

void heapobj_destroy(struct heapobj *hobj);

int heapobj_extend(struct heapobj *hobj,
		   size_t size, void *mem);

void *heapobj_alloc(struct heapobj *hobj,
		    size_t size);

void heapobj_free(struct heapobj *hobj,
		  void *ptr);

size_t heapobj_validate(struct heapobj *hobj,
			void *ptr);

size_t heapobj_inquire(struct heapobj *hobj);

int heapobj_bind_session(const char *session);

void heapobj_unbind_session(void);

int heapobj_unlink_session(const char *session);

void *xnmalloc(size_t size);

void xnfree(void *ptr);

char *xnstrdup(const char *ptr);

#else /* !CONFIG_XENO_PSHARED */

struct sysgroup_memspec {
};

/*
 * Whether an object is laid in some shared heap. Never if pshared
 * mode is disabled.
 */
static inline int pshared_check(void *heap, void *addr)
{
	return 0;
}

#ifdef __cplusplus
#define __check_ref_width(__dst, __src)			\
	({						\
		assert(sizeof(__dst) >= sizeof(__src));	\
		(typeof(__dst))__src;			\
	})
#else
#define __check_ref_width(__dst, __src)					\
	__builtin_choose_expr(						\
		sizeof(__dst) >= sizeof(__src), (typeof(__dst))__src,	\
		((void)0))
#endif

#define mainheap_ref(ptr, type)						\
	({								\
		type handle;						\
		handle = __check_ref_width(handle, ptr);		\
		assert(ptr == NULL || __memchk(__main_heap, ptr));	\
		handle;							\
	})
#define mainheap_deref(handle, type)					\
	({								\
		type *ptr;						\
		ptr = __check_ref_width(ptr, handle);			\
		ptr;							\
	})

#define sysgroup_add(__group, __obj)	do { } while (0)
#define sysgroup_remove(__group, __obj)	do { } while (0)

static inline int heapobj_pkg_init_shared(void)
{
	return 0;
}

static inline int __heapobj_init(struct heapobj *hobj, const char *name,
				 size_t size, void *mem)
{
	return __heapobj_init_private(hobj, name, size, mem);
}

static inline int heapobj_init(struct heapobj *hobj, const char *name,
			       size_t size)
{
	return __heapobj_init_private(hobj, name, size, NULL);
}

static inline int heapobj_init_array(struct heapobj *hobj, const char *name,
				     size_t size, int elems)
{
	return heapobj_init_array_private(hobj, name, size, elems);
}

static inline void heapobj_destroy(struct heapobj *hobj)
{
	pvheapobj_destroy(hobj);
}

static inline int heapobj_extend(struct heapobj *hobj,
				 size_t size, void *mem)
{
	return pvheapobj_extend(hobj, size, mem);
}

static inline void *heapobj_alloc(struct heapobj *hobj,
				  size_t size)
{
	return pvheapobj_alloc(hobj, size);
}

static inline void heapobj_free(struct heapobj *hobj,
				void *ptr)
{
	pvheapobj_free(hobj, ptr);
}

static inline size_t heapobj_validate(struct heapobj *hobj,
				      void *ptr)
{
	return pvheapobj_validate(hobj, ptr);
}

static inline size_t heapobj_inquire(struct heapobj *hobj)
{
	return pvheapobj_inquire(hobj);
}

static inline int heapobj_bind_session(const char *session)
{
	return -ENOSYS;
}

static inline int heapobj_unlink_session(const char *session)
{
	return 0;
}

static inline void heapobj_unbind_session(void) { }

static inline void *xnmalloc(size_t size)
{
	return pvmalloc(size);
}

static inline void xnfree(void *ptr)
{
	pvfree(ptr);
}

static inline char *xnstrdup(const char *ptr)
{
	return pvstrdup(ptr);
}

#endif	/* !CONFIG_XENO_PSHARED */

static inline const char *heapobj_name(struct heapobj *hobj)
{
	return hobj->name;
}

static inline size_t heapobj_size(struct heapobj *hobj)
{
	return hobj->size;
}

#endif /* _COPPERPLATE_HEAPOBJ_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               /*
 * Copyright (C) 2010 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */

#ifndef _COPPERPLATE_TIMEROBJ_H
#define _COPPERPLATE_TIMEROBJ_H

#include <pthread.h>
#include <time.h>
#include <boilerplate/list.h>
#include <boilerplate/lock.h>

struct timerobj {
	struct itimerspec itspec;
	void (*handler)(struct timerobj *tmobj);
	timer_t timer;
	pthread_mutex_t lock;
	int cancel_state;
	struct pvholder next;
};

static inline int timerobj_lock(struct timerobj *tmobj)
{
	return write_lock_safe(&tmobj->lock, tmobj->cancel_state);
}

static inline int timerobj_unlock(struct timerobj *tmobj)
{
	return write_unlock_safe(&tmobj->lock, tmobj->cancel_state);
}

static inline int timerobj_enabled(const struct timerobj *tmobj)
{
	return tmobj->handler != NULL;
}

#ifdef __cplusplus
extern "C" {
#endif

int timerobj_init(struct timerobj *tmobj);

void timerobj_destroy(struct timerobj *tmobj);

int timerobj_start(struct timerobj *tmobj,
		   void (*handler)(struct timerobj *tmobj),
		   struct itimerspec *it);

int timerobj_stop(struct timerobj *tmobj);

int timerobj_pkg_init(void);

#ifdef __cplusplus
}
#endif

#endif /* _COPPERPLATE_TIMEROBJ_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            /*
 * Copyright (C) 2011 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */

#ifndef _COPPERPLATE_WRAPPERS_H
#define _COPPERPLATE_WRAPPERS_H

#include <xeno_config.h>

#ifdef CONFIG_XENO_COBALT
#include <cobalt/wrappers.h>
#else /* CONFIG_XENO_MERCURY */
#include <mercury/wrappers.h>
#endif /* CONFIG_XENO_MERCURY */

#endif /* _COPPERPLATE_WRAPPERS_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         /*
 * Copyright (C) 2008 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */

#ifndef _COPPERPLATE_SYNCOBJ_H
#define _COPPERPLATE_SYNCOBJ_H

#include <pthread.h>
#include <time.h>
#include <boilerplate/list.h>
#include <boilerplate/lock.h>
#include <copperplate/reference.h>

/* syncobj->flags */
#define SYNCOBJ_FIFO	0x0
#define SYNCOBJ_PRIO	0x1
#define SYNCOBJ_LOCKED	0x2

/* threadobj->wait_status */
#define SYNCOBJ_FLUSHED		0x1
#define SYNCOBJ_SIGNALED	0x2
#define SYNCOBJ_DRAINWAIT	0x4

#define SYNCOBJ_MAGIC  0xf9f99f9f

struct threadobj;

struct syncstate {
	int state;
};

#ifdef CONFIG_XENO_COBALT

#include <boilerplate/atomic.h>
#include <cobalt/uapi/monitor.h>

struct syncobj_corespec {
	cobalt_monitor_t monitor;
};

#else  /* CONFIG_XENO_MERCURY */

struct syncobj_corespec {
	pthread_mutex_t lock;
	pthread_cond_t drain_sync;
};

#endif /* CONFIG_XENO_MERCURY */

struct syncobj {
	unsigned int magic;
	int flags;
	int wait_count;
	struct listobj grant_list;
	int grant_count;
	struct listobj drain_list;
	int drain_count;
	struct syncobj_corespec core;
	fnref_type(void (*)(struct syncobj *sobj)) finalizer;
};

#define syncobj_for_each_grant_waiter(sobj, pos)		\
	list_for_each_entry(pos, &(sobj)->grant_list, wait_link)

#define syncobj_for_each_grant_waiter_safe(sobj, pos, tmp)	\
	list_for_each_entry_safe(pos, tmp, &(sobj)->grant_list, wait_link)

#define syncobj_for_each_drain_waiter(sobj, pos)		\
	list_for_each_entry(pos, &(sobj)->drain_list, wait_link)

#define syncobj_for_each_drain_waiter_safe(sobj, pos, tmp)	\
	list_for_each_entry_safe(pos, tmp, &(sobj)->drain_list, wait_link)

void __syncobj_cleanup_wait(struct syncobj *sobj,
			    struct threadobj *thobj);

#ifdef CONFIG_XENO_DEBUG

static inline void __syncobj_tag_locked(struct syncobj *sobj)
{
	sobj->flags |= SYNCOBJ_LOCKED;
}

static inline void __syncobj_tag_unlocked(struct syncobj *sobj)
{
	assert(sobj->flags & SYNCOBJ_LOCKED);
	sobj->flags &= ~SYNCOBJ_LOCKED;
}

static inline void __syncobj_check_locked(struct syncobj *sobj)
{
	assert(sobj->flags & SYNCOBJ_LOCKED);
}

#else /* !CONFIG_XENO_DEBUG */

static inline void __syncobj_tag_locked(struct syncobj *sobj)
{
}

static inline void __syncobj_tag_unlocked(struct syncobj *sobj)
{
}

static inline void __syncobj_check_locked(struct syncobj *sobj)
{
}

#endif /* !CONFIG_XENO_DEBUG */

#ifdef __cplusplus
extern "C" {
#endif

int __syncobj_broadcast_drain(struct syncobj *sobj, int reason);

int __syncobj_broadcast_grant(struct syncobj *sobj, int reason);

int syncobj_init(struct syncobj *sobj, clockid_t clk_id, int flags,
		 fnref_type(void (*)(struct syncobj *sobj)) finalizer) __must_check;

int syncobj_wait_grant(struct syncobj *sobj,
		 const struct timespec *timeout,
		 struct syncstate *syns) __must_check;

struct threadobj *syncobj_grant_one(struct syncobj *sobj);

void syncobj_grant_to(struct syncobj *sobj,
		      struct threadobj *thobj);

struct threadobj *syncobj_peek_grant(struct syncobj *sobj);

struct threadobj *syncobj_peek_drain(struct syncobj *sobj);

int syncobj_lock(struct syncobj *sobj,
		 struct syncstate *syns) __must_check;

void syncobj_unlock(struct syncobj *sobj,
		    struct syncstate *syns);

int syncobj_wait_drain(struct syncobj *sobj,
		       const struct timespec *timeout,
		       struct syncstate *syns) __must_check;

int syncobj_destroy(struct syncobj *sobj,
		    struct syncstate *syns);

void syncobj_uninit(struct syncobj *sobj);

static inline int syncobj_grant_wait_p(struct syncobj *sobj)
{
	__syncobj_check_locked(sobj);

	return !list_empty(&sobj->grant_list);
}

static inline int syncobj_count_grant(struct syncobj *sobj)
{
	__syncobj_check_locked(sobj);

	return sobj->grant_count;
}

static inline int syncobj_count_drain(struct syncobj *sobj)
{
	__syncobj_check_locked(sobj);

	return sobj->drain_count;
}

static inline int syncobj_drain_wait_p(struct syncobj *sobj)
{
	__syncobj_check_locked(sobj);

	return !list_empty(&sobj->drain_list);
}

static inline int syncobj_drain(struct syncobj *sobj)
{
	int ret = 0;

	__syncobj_check_locked(sobj);

	if (sobj->drain_count > 0)
		ret = __syncobj_broadcast_drain(sobj, SYNCOBJ_SIGNALED);

	return ret;
}

static inline int syncobj_grant_all(struct syncobj *sobj)
{
	int ret = 0;

	__syncobj_check_locked(sobj);

	if (sobj->grant_count > 0)
		ret = __syncobj_broadcast_grant(sobj, SYNCOBJ_SIGNALED);

	return ret;
}

static inline int syncobj_flush(struct syncobj *sobj)
{
	__syncobj_check_locked(sobj);

	if (sobj->grant_count > 0)
		__syncobj_broadcast_grant(sobj, SYNCOBJ_FLUSHED);

	if (sobj->drain_count > 0)
		__syncobj_broadcast_drain(sobj, SYNCOBJ_FLUSHED);

	return sobj->wait_count;
}

#ifdef __cplusplus
}
#endif

#endif /* _COPPERPLATE_SYNCOBJ_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      /*
 * Copyright (C) 2010 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COPPERPLATE_REFERENCE_H
#define _COPPERPLATE_REFERENCE_H

#include <boilerplate/limits.h>
#include <boilerplate/scope.h>
#include <boilerplate/setup.h>

#define libcopperplate_tag  0	/* Library tag - unique and constant. */
#define libcopperplate_cbi  1	/* Callback binary interface level. */

#ifdef CONFIG_XENO_PSHARED
/*
 * Layout of a function reference handle in shared memory (32-bit
 * value):
 *
 * xxHHHHHHHHHHHHHHHHHHHHLLLLLPPPPP
 *
 * where: 'P' => function index in the per-library array
 *        'L' => library tag
 *        'H' => symbol hash value (symname + cbi)
 *        'x' => unassigned
 *
 * NOTE: handle value -1 is kept for representing a NULL function
 * pointer; bit #31 should remain unassigned and cleared for this
 * purpose.
 */

struct __fnref {
	void (*fn)(void);
	unsigned int hash;
};

#define __refvar(l, s)		__ ## l ## __ref__ ## s
#define __refmangle(l, h, p)	(((h & 0xfffff) << 10)|((l & 0x1f) << 5)|(p & 0x1f))
#define __refhash(r)		(((r) >> 10) & 0xfffffU)
#define __reftag(r)		(((r) >> 5) & 0x1f)
#define __refpos(r)		((r) & 0x1f)
#define __refchk(v, r)							\
	({								\
		int __tag = __reftag(r), __pos = __refpos(r);		\
		typeof(v) __p = (typeof(v))__fnrefs[__tag][__pos].fn;	\
		assert(__fnrefs[__tag][__pos].hash == __refhash(r));	\
		assert(__p != NULL);					\
		__p;							\
	})
#define fnref_type(t)		int
#define fnref_null		-1
static inline int __fnref_nofn(void *fnaddr)
{
	return fnaddr == NULL;
}
#define fnref_put(l, s)		(__fnref_nofn((void *)(s)) ? fnref_null : __refvar(l, s))
#define fnref_get(v, r)		((v) = (r) < 0 ? NULL :	__refchk(v, r))
#define fnref_register(l, s)						\
	int __refvar(l, s);						\
	static void __early_ctor __ifnref_ ## s(void)			\
	{								\
		__refvar(l, s) = __fnref_register(#l, l ## _tag,	\
						  l ## _cbi,		\
						  #s, (void (*)(void))s); \
	}
#define fnref_declare(l, s)	extern int __refvar(l, s)

#define MAX_FNLIBS  16		/* max=32 */
#define MAX_FNREFS  16		/* max=32 */

extern struct __fnref __fnrefs[MAX_FNLIBS][MAX_FNREFS];

int __fnref_register(const char *libname,
		     int libtag, int cbirev,
		     const char *symname, void (*fn)(void));

#else /* !CONFIG_XENO_PSHARED */

#define fnref_type(t)		__typeof__(t)
#define fnref_null		NULL
#define fnref_put(l, s)		(s)
#define fnref_get(v, r)		((v) = (r))
#define fnref_register(l, s)
#define fnref_declare(l, s)

#endif /* !CONFIG_XENO_PSHARED */

#endif /* _COPPERPLATE_REFERENCE_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               /*
 * Copyright (C) 2005 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_UAPI_THREAD_H
#define _COBALT_UAPI_THREAD_H

#include <cobalt/uapi/kernel/thread.h>

#define PTHREAD_WARNSW             XNWARN
#define PTHREAD_LOCK_SCHED         XNLOCK
#define PTHREAD_DISABLE_LOCKBREAK  XNTRAPLB
#define PTHREAD_CONFORMING     0

struct cobalt_mutexattr {
	int type : 3;
	int protocol : 3;
	int pshared : 1;
	int __pad : 1;
};

struct cobalt_condattr {
	int clock : 7;
	int pshared : 1;
};

struct cobalt_threadstat {
	__u64 xtime;
	__u64 timeout;
	__u64 msw;
	__u64 csw;
	__u64 xsc;
	__u32 status;
	__u32 pf;
	int cpu;
	int cprio;
	char name[XNOBJECT_NAME_LEN];
	char personality[XNOBJECT_NAME_LEN];
};

#endif /* !_COBALT_UAPI_THREAD_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             /*
 * Copyright (C) 2010 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */

#ifndef _COPPERPLATE_CLUSTER_H
#define _COPPERPLATE_CLUSTER_H

#include <boilerplate/hash.h>
#include <copperplate/syncobj.h>

#ifdef CONFIG_XENO_PSHARED

struct clusterobj {
	pid_t cnode;
	struct hashobj hobj;
};

struct dictionary {
	struct hash_table table;
	struct hashobj hobj;
};

struct cluster {
	struct dictionary *d;
};

struct syndictionary {
	struct hash_table table;
	struct syncobj sobj;
	struct hashobj hobj;
};

struct syncluster {
	struct syndictionary *d;
};

struct pvclusterobj {
	struct pvhashobj hobj;
};

struct pvcluster {
	struct pvhash_table table;
};

struct pvsyncluster {
	struct pvcluster c;
	struct syncobj sobj;
};

static inline
const void *clusterobj_key(const struct clusterobj *cobj)
{
	return __memptr(__main_heap, cobj->hobj.key);
}

static inline
size_t clusterobj_keylen(const struct clusterobj *cobj)
{
	return cobj->hobj.len;
}

static inline
pid_t clusterobj_cnode(const struct clusterobj *cobj)
{
	return cobj->cnode;
}

static inline
const void *pvclusterobj_key(const struct pvclusterobj *cobj)
{
	return cobj->hobj.key;
}

static inline
size_t pvclusterobj_keylen(const struct pvclusterobj *cobj)
{
	return cobj->hobj.len;
}

static inline
pid_t pvclusterobj_cnode(const struct pvclusterobj *cobj)
{
	return -1;
}

#else /* !CONFIG_XENO_PSHARED */

struct clusterobj {
	struct pvhashobj hobj;
};

struct cluster {
	struct pvhash_table table;
};

struct syncluster {
	struct cluster c;
	struct syncobj sobj;
};

#define pvclusterobj  clusterobj
#define pvcluster     cluster
#define pvsyncluster  syncluster

static inline
const void *clusterobj_key(const struct pvclusterobj *cobj)
{
	return cobj->hobj.key;
}

static inline
size_t clusterobj_keylen(const struct pvclusterobj *cobj)
{
	return cobj->hobj.len;
}

static inline
pid_t clusterobj_cnode(const struct pvclusterobj *cobj)
{
	return -1;
}

static inline
const void *pvclusterobj_key(const struct pvclusterobj *cobj)
{
	return clusterobj_key(cobj);
}

static inline
size_t pvclusterobj_keylen(const struct pvclusterobj *cobj)
{
	return clusterobj_keylen(cobj);
}

static inline
pid_t pvclusterobj_cnode(const struct pvclusterobj *cobj)
{
	return clusterobj_cnode(cobj);
}

#endif /* !CONFIG_XENO_PSHARED */

struct syncluster_wait_struct {
	union {
		dref_type(char *) name_ref;
		const char *name;
	};
};

#ifdef __cplusplus
extern "C" {
#endif

int pvcluster_init(struct pvcluster *c, const char *name);

void pvcluster_destroy(struct pvcluster *c);

int pvcluster_addobj(struct pvcluster *c, const char *name,
		     struct pvclusterobj *cobj);

int pvcluster_addobj_dup(struct pvcluster *c, const char *name,
			 struct pvclusterobj *cobj);

int pvcluster_delobj(struct pvcluster *c,
		     struct pvclusterobj *cobj);

struct pvclusterobj *pvcluster_findobj(struct pvcluster *c,
				       const char *name);

int pvcluster_walk(struct pvcluster *c,
		   int (*walk)(struct pvcluster *c,
			       struct pvclusterobj *cobj));
  
int pvsyncluster_init(struct pvsyncluster *sc, const char *name);

void pvsyncluster_destroy(struct pvsyncluster *sc);

int pvsyncluster_addobj(struct pvsyncluster *sc, const char *name,
			struct pvclusterobj *cobj);

int pvsyncluster_delobj(struct pvsyncluster *sc,
			struct pvclusterobj *cobj);

int pvsyncluster_findobj(struct pvsyncluster *sc,
			 const char *name,
			 const struct timespec *timeout,
			 struct pvclusterobj **cobjp) __must_check;

#ifdef CONFIG_XENO_PSHARED

int cluster_init(struct cluster *c, const char *name);

int cluster_addobj(struct cluster *c, const char *name,
		   struct clusterobj *cobj);

int cluster_addobj_dup(struct cluster *c, const char *name,
		       struct clusterobj *cobj);

int cluster_delobj(struct cluster *c,
		   struct clusterobj *cobj);

struct clusterobj *cluster_findobj(struct cluster *c,
				   const char *name);

int cluster_walk(struct cluster *c,
		 int (*walk)(struct cluster *c,
			     struct clusterobj *cobj));

int syncluster_init(struct syncluster *sc, const char *name);

int syncluster_addobj(struct syncluster *sc, const char *name,
		      struct clusterobj *cobj);

int syncluster_delobj(struct syncluster *sc,
		      struct clusterobj *cobj);

int syncluster_findobj(struct syncluster *sc,
		       const char *name,
		       const struct timespec *timeout,
		       struct clusterobj **cobjp) __must_check;

#else /* !CONFIG_XENO_PSHARED */

static inline int cluster_init(struct cluster *c, const char *name)
{
	return pvcluster_init(c, name);
}

static inline int cluster_addobj(struct cluster *c, const char *name,
				 struct clusterobj *cobj)
{
	return pvcluster_addobj(c, name, cobj);
}

static inline int cluster_addobj_dup(struct cluster *c, const char *name,
				     struct clusterobj *cobj)
{
	return pvcluster_addobj_dup(c, name, cobj);
}

static inline int cluster_delobj(struct cluster *c,
				 struct clusterobj *cobj)
{
	return pvcluster_delobj(c, cobj);
}

static inline struct clusterobj *cluster_findobj(struct cluster *c,
						 const char *name)
{
	return pvcluster_findobj(c, name);
}

static inline int cluster_walk(struct cluster *c,
			       int (*walk)(struct cluster *c,
					   struct clusterobj *cobj))
{
	return pvcluster_walk(c, walk);
}

static inline int syncluster_init(struct syncluster *sc,
				  const char *name)
{
	return pvsyncluster_init(sc, name);
}

static inline int syncluster_addobj(struct syncluster *sc,
				    const char *name,
				    struct clusterobj *cobj)
{
	return pvsyncluster_addobj(sc, name, cobj);
}

static inline int syncluster_delobj(struct syncluster *sc,
				    struct clusterobj *cobj)
{
	return pvsyncluster_delobj(sc, cobj);
}

static inline  __must_check
int syncluster_findobj(struct syncluster *sc,
		       const char *name,
		       const struct timespec *timeout,
		       struct clusterobj **cobjp)
{
	return pvsyncluster_findobj(sc, name, timeout, cobjp);
}

#endif /* !CONFIG_XENO_PSHARED */

#ifdef __cplusplus
}
#endif

#endif /* _COPPERPLATE_CLUSTER_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            /*
 * Copyright (C) 2008 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */

#ifndef _COPPERPLATE_CLOCKOBJ_H
#define _COPPERPLATE_CLOCKOBJ_H

#include <pthread.h>
#include <xeno_config.h>
#include <boilerplate/time.h>
#include <boilerplate/list.h>
#include <boilerplate/lock.h>
#include <boilerplate/limits.h>
#include <copperplate/debug.h>

/*
 * We normally define the Copperplate clock as a monotonic,
 * non-adjustable one, unless the threading library has restrictions
 * to support this over Mercury.
 *
 * In the normal case, this means that ongoing delays and timeouts
 * won't be affected when the host system date is changed. In the
 * restricted case by contrast, ongoing delays and timeouts may be
 * impacted by changes to the host system date.
 *
 * The implementation maintains a per-clock epoch value, so that
 * different emulators can have different (virtual) system dates.
 */
#ifndef CONFIG_XENO_COPPERPLATE_CLOCK_RESTRICTED
#ifdef CONFIG_XENO_RAW_CLOCK_ENABLED
#define CLOCK_COPPERPLATE  CLOCK_MONOTONIC_RAW
#else
#define CLOCK_COPPERPLATE  CLOCK_MONOTONIC
#endif
#else /* CONFIG_XENO_COPPERPLATE_CLOCK_RESTRICTED */
#define CLOCK_COPPERPLATE  CLOCK_REALTIME
#endif /* CONFIG_XENO_COPPERPLATE_CLOCK_RESTRICTED */

struct clockobj {
	pthread_mutex_t lock;
	struct timespec epoch;
	struct timespec offset;
#ifndef CONFIG_XENO_LORES_CLOCK_DISABLED
	unsigned int resolution;
	unsigned int frequency;
#endif
};

#define zero_time	((struct timespec){ .tv_sec = 0, .tv_nsec = 0 })

#ifdef __cplusplus
extern "C" {
#endif

void clockobj_set_date(struct clockobj *clkobj, ticks_t ticks);

void clockobj_get_date(struct clockobj *clkobj, ticks_t *pticks);

ticks_t clockobj_get_time(struct clockobj *clkobj);

void clockobj_get_distance(struct clockobj *clkobj,
			   const struct itimerspec *itm,
			   struct timespec *delta);

ticks_t clockobj_get_tsc(void);

void clockobj_caltime_to_timeout(struct clockobj *clkobj, const struct tm *tm,
				 unsigned long rticks, struct timespec *ts);

void clockobj_caltime_to_ticks(struct clockobj *clkobj, const struct tm *tm,
			       unsigned long rticks, ticks_t *pticks);

void clockobj_ticks_to_caltime(struct clockobj *clkobj,
			       ticks_t ticks,
			       struct tm *tm,
			       unsigned long *rticks);

void clockobj_convert_clocks(struct clockobj *clkobj,
			     const struct timespec *in,
			     clockid_t clk_id,
			     struct timespec *out);

int clockobj_set_resolution(struct clockobj *clkobj,
			    unsigned int resolution_ns);

int clockobj_init(struct clockobj *clkobj,
		  unsigned int resolution_ns);

int clockobj_destroy(struct clockobj *clkobj);

#ifndef CONFIG_XENO_LORES_CLOCK_DISABLED

void __clockobj_ticks_to_timeout(struct clockobj *clkobj, clockid_t clk_id,
				 ticks_t ticks, struct timespec *ts);

void __clockobj_ticks_to_timespec(struct clockobj *clkobj,
				  ticks_t ticks, struct timespec *ts);
#endif /* !CONFIG_XENO_LORES_CLOCK_DISABLED */

#ifdef __cplusplus
}
#endif

#ifdef CONFIG_XENO_COBALT

#include <cobalt/ticks.h>

/*
 * The Cobalt core exclusively deals with aperiodic timings, so a
 * Cobalt _tick_ is actually a _TSC_ unit. In contrast, Copperplate
 * deals with _TSC_ units and periodic _ticks_ which duration depend
 * on the clock resolution. Therefore, Cobalt ticks are strictly
 * equivalent to Copperplate TSC units, and Copperplate ticks are
 * periods of the reference clockobj which Cobalt does not know about.
 */
static inline sticks_t clockobj_ns_to_tsc(sticks_t ns)
{
	return cobalt_ns_to_ticks(ns);
}

static inline sticks_t clockobj_tsc_to_ns(sticks_t tsc)
{
	return cobalt_ticks_to_ns(tsc);
}

static inline
void clockobj_ns_to_timespec(ticks_t ns, struct timespec *ts)
{
	unsigned long rem;

	ts->tv_sec = cobalt_divrem_billion(ns, &rem);
	ts->tv_nsec = rem;
}

#else /* CONFIG_XENO_MERCURY */

static inline sticks_t clockobj_ns_to_tsc(sticks_t ns)
{
	return ns;
}

static inline sticks_t clockobj_tsc_to_ns(sticks_t tsc)
{
	return tsc;
}

static inline
void clockobj_ns_to_timespec(ticks_t ns, struct timespec *ts)
{
	ts->tv_sec = ns / 1000000000ULL;
	ts->tv_nsec = ns - (ts->tv_sec * 1000000000ULL);
}

#endif /* CONFIG_XENO_MERCURY */

#ifdef CONFIG_XENO_LORES_CLOCK_DISABLED

static inline
void __clockobj_ticks_to_timeout(struct clockobj *clkobj,
				 clockid_t clk_id,
				 ticks_t ticks, struct timespec *ts)
{
	struct timespec now, delta;

	__RT(clock_gettime(clk_id, &now));
	clockobj_ns_to_timespec(ticks, &delta);
	timespec_add(ts, &now, &delta);
}

static inline
void __clockobj_ticks_to_timespec(struct clockobj *clkobj,
				  ticks_t ticks, struct timespec *ts)
{
	clockobj_ns_to_timespec(ticks, ts);
}

static inline
void clockobj_ticks_to_timespec(struct clockobj *clkobj,
				ticks_t ticks, struct timespec *ts)
{
	__clockobj_ticks_to_timespec(clkobj, ticks, ts);
}

static inline
unsigned int clockobj_get_resolution(struct clockobj *clkobj)
{
	return 1;
}

static inline
unsigned int clockobj_get_frequency(struct clockobj *clkobj)
{
	return 1000000000;
}

static inline sticks_t clockobj_ns_to_ticks(struct clockobj *clkobj,
					    sticks_t ns)
{
	return ns;
}

static inline sticks_t clockobj_ticks_to_ns(struct clockobj *clkobj,
					    sticks_t ticks)
{
	return ticks;
}

#else /* !CONFIG_XENO_LORES_CLOCK_DISABLED */

static inline
void clockobj_ticks_to_timespec(struct clockobj *clkobj,
				ticks_t ticks, struct timespec *ts)
{
	__clockobj_ticks_to_timespec(clkobj, ticks, ts);
}

static inline
unsigned int clockobj_get_resolution(struct clockobj *clkobj)
{
	return clkobj->resolution;
}

static inline
unsigned int clockobj_get_frequency(struct clockobj *clkobj)
{
	return clkobj->frequency;
}

sticks_t clockobj_ns_to_ticks(struct clockobj *clkobj,
			      sticks_t ns);

static inline sticks_t clockobj_ticks_to_ns(struct clockobj *clkobj,
					    sticks_t ticks)
{
	return ticks * clkobj->resolution;
}

#endif /* !CONFIG_XENO_LORES_CLOCK_DISABLED */

static inline
void clockobj_ticks_to_timeout(struct clockobj *clkobj,
			       ticks_t ticks, struct timespec *ts)
{
	__clockobj_ticks_to_timeout(clkobj, CLOCK_COPPERPLATE, ticks, ts);
}

#endif /* _COPPERPLATE_CLOCKOBJ_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        /*
 * Copyright (C) 2005 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_UAPI_SCHED_H
#define _COBALT_UAPI_SCHED_H

#define SCHED_COBALT		42
#define SCHED_WEAK		43

#ifndef SCHED_SPORADIC
#define SCHED_SPORADIC		10
#define sched_ss_low_priority	sched_u.ss.__sched_low_priority
#define sched_ss_repl_period	sched_u.ss.__sched_repl_period
#define sched_ss_init_budget	sched_u.ss.__sched_init_budget
#define sched_ss_max_repl	sched_u.ss.__sched_max_repl
#endif	/* !SCHED_SPORADIC */

struct __sched_ss_param {
	int __sched_low_priority;
	struct timespec __sched_repl_period;
	struct timespec __sched_init_budget;
	int __sched_max_repl;
};

#define sched_rr_quantum	sched_u.rr.__sched_rr_quantum

struct __sched_rr_param {
	struct timespec __sched_rr_quantum;
};

#ifndef SCHED_TP
#define SCHED_TP		11
#define sched_tp_partition	sched_u.tp.__sched_partition
#endif	/* !SCHED_TP */

struct __sched_tp_param {
	int __sched_partition;
};

struct sched_tp_window {
	struct timespec offset;
	struct timespec duration;
	int ptid;
};

enum {
	sched_tp_install,
	sched_tp_uninstall,
	sched_tp_start,
	sched_tp_stop,
};
	
struct __sched_config_tp {
	int op;
	int nr_windows;
	struct sched_tp_window windows[0];
};

#define sched_tp_confsz(nr_win) \
  (sizeof(struct __sched_config_tp) + nr_win * sizeof(struct sched_tp_window))

#ifndef SCHED_QUOTA
#define SCHED_QUOTA		12
#define sched_quota_group	sched_u.quota.__sched_group
#endif	/* !SCHED_QUOTA */

struct __sched_quota_param {
	int __sched_group;
};

enum {
	sched_quota_add,
	sched_quota_remove,
	sched_quota_force_remove,
	sched_quota_set,
	sched_quota_get,
};

struct __sched_config_quota {
	int op;
	union {
		struct {
			int pshared;
		} add;
		struct {
			int tgid;
		} remove;
		struct {
			int tgid;
			int quota;
			int quota_peak;
		} set;
		struct {
			int tgid;
		} get;
	};
	struct __sched_quota_info {
		int tgid;
		int quota;
		int quota_peak;
		int quota_sum;
	} info;
};

#define sched_quota_confsz()  sizeof(struct __sched_config_quota)

struct sched_param_ex {
	int sched_priority;
	union {
		struct __sched_ss_param ss;
		struct __sched_rr_param rr;
		struct __sched_tp_param tp;
		struct __sched_quota_param quota;
	} sched_u;
};

union sched_config {
	struct __sched_config_tp tp;
	struct __sched_config_quota quota;
};

#endif /* !_COBALT_UAPI_SCHED_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       /*
 * Copyright (C) 2013 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_UAPI_TIME_H
#define _COBALT_UAPI_TIME_H

#ifndef CLOCK_MONOTONIC_RAW
#define CLOCK_MONOTONIC_RAW  4
#endif

/*
 * Additional clock ids we manage are supposed not to collide with any
 * of the POSIX and Linux kernel definitions so that no ambiguities
 * arise when porting applications in both directions.
 *
 * 0  .. 31   regular POSIX/linux clock ids.
 * 32 .. 63   statically reserved Cobalt clocks
 * 64 .. 127  dynamically registered Cobalt clocks (external)
 *
 * CAUTION: clock ids must fit within a 7bit value, see
 * include/cobalt/uapi/thread.h (e.g. cobalt_condattr).
 */
#define __COBALT_CLOCK_STATIC(nr)	((clockid_t)(nr + 32))

#define CLOCK_HOST_REALTIME  __COBALT_CLOCK_STATIC(0)

#define COBALT_MAX_EXTCLOCKS  64

#define __COBALT_CLOCK_EXT(nr)		((clockid_t)(nr) | (1 << 6))
#define __COBALT_CLOCK_EXT_P(id)	((int)(id) >= 64 && (int)(id) < 128)
#define __COBALT_CLOCK_EXT_INDEX(id)	((int)(id) & ~(1 << 6))

/*
 * Additional timerfd defines
 *
 * when passing TFD_WAKEUP to timer_settime, any timer expiration
 * unblocks the thread having issued timer_settime.
 */
#define TFD_WAKEUP	(1 << 2)

#endif /* !_COBALT_UAPI_TIME_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        /*
 * Copyright (C) 2013 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_UAPI_KERNEL_THREAD_H
#define _COBALT_UAPI_KERNEL_THREAD_H

#include <cobalt/uapi/kernel/types.h>

/**
 * @ingroup cobalt_core_thread
 * @defgroup cobalt_core_thread_states Thread state flags
 * @brief Bits reporting permanent or transient states of threads
 * @{
 */

/* State flags (shared) */

#define XNSUSP    0x00000001 /**< Suspended. */
#define XNPEND    0x00000002 /**< Sleep-wait for a resource. */
#define XNDELAY   0x00000004 /**< Delayed */
#define XNREADY   0x00000008 /**< Linked to the ready queue. */
#define XNDORMANT 0x00000010 /**< Not started yet */
#define XNZOMBIE  0x00000020 /**< Zombie thread in deletion process */
#define XNMAPPED  0x00000040 /**< Thread is mapped to a linux task */
#define XNRELAX   0x00000080 /**< Relaxed shadow thread (blocking bit) */
#define XNMIGRATE 0x00000100 /**< Thread is currently migrating to another CPU. */
#define XNHELD    0x00000200 /**< Thread is held to process emergency. */
#define XNBOOST   0x00000400 /**< Undergoes a PIP boost */
#define XNSSTEP   0x00000800 /**< Single-stepped by debugger */
#define XNLOCK    0x00001000 /**< Scheduler lock control (pseudo-bit, not in ->state) */
#define XNRRB     0x00002000 /**< Undergoes a round-robin scheduling */
#define XNWARN    0x00004000 /**< Issue SIGDEBUG on error detection */
#define XNFPU     0x00008000 /**< Thread uses FPU */
#define XNROOT    0x00010000 /**< Root thread (that is, Linux/IDLE) */
#define XNWEAK    0x00020000 /**< Non real-time shadow (from the WEAK class) */
#define XNUSER    0x00040000 /**< Shadow thread running in userland */
#define XNJOINED  0x00080000 /**< Another thread waits for joining this thread */
#define XNTRAPLB  0x00100000 /**< Trap lock break (i.e. may not sleep with sched lock) */
#define XNDEBUG   0x00200000 /**< User-level debugging enabled */

/** @} */

/**
 * @ingroup cobalt_core_thread
 * @defgroup cobalt_core_thread_info Thread information flags
 * @brief Bits reporting events notified to threads
 * @{
 */

/* Information flags (shared) */

#define XNTIMEO   0x00000001 /**< Woken up due to a timeout condition */
#define XNRMID    0x00000002 /**< Pending on a removed resource */
#define XNBREAK   0x00000004 /**< Forcibly awaken from a wait state */
#define XNKICKED  0x00000008 /**< Forced out of primary mode */
#define XNWAKEN   0x00000010 /**< Thread waken up upon resource availability */
#define XNROBBED  0x00000020 /**< Robbed from resource ownership */
#define XNCANCELD 0x00000040 /**< Cancellation request is pending */
#define XNPIALERT 0x00000080 /**< Priority inversion alert (SIGDEBUG sent) */

/* Local information flags (private to current thread) */

#define XNMOVED   0x00000001 /**< CPU migration in primary mode occurred */
#define XNLBALERT 0x00000002 /**< Scheduler lock break alert (SIGDEBUG sent) */
#define XNDESCENT 0x00000004 /**< Adaptive transitioning to secondary mode */
#define XNSYSRST  0x00000008 /**< Thread awaiting syscall restart after signal */

/** @} */

/*
 * Must follow strictly the declaration order of the state flags
 * defined above. Status symbols are defined as follows:
 *
 * 'S' -> Forcibly suspended.
 * 'w'/'W' -> Waiting for a resource, with or without timeout.
 * 'D' -> Delayed (without any other wait condition).
 * 'R' -> Runnable.
 * 'U' -> Unstarted or dormant.
 * 'X' -> Relaxed shadow.
 * 'H' -> Held in emergency.
 * 'b' -> Priority boost undergoing.
 * 'T' -> Ptraced and stopped.
 * 'l' -> Locks scheduler.
 * 'r' -> Undergoes round-robin.
 * 't' -> Runtime mode errors notified.
 * 'L' -> Lock breaks trapped.
 */
#define XNTHREAD_STATE_LABELS  "SWDRU..X.HbTlrt.....L."

struct xnthread_user_window {
	__u32 state;
	__u32 info;
	__u32 grant_value;
};

#endif /* !_COBALT_UAPI_KERNEL_THREAD_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   /*
 * Copyright (C) 2013 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_UAPI_KERNEL_HEAP_H
#define _COBALT_UAPI_KERNEL_HEAP_H

#include <linux/types.h>

#define COBALT_MEMDEV_PRIVATE  "memdev-private"
#define COBALT_MEMDEV_SHARED   "memdev-shared"
#define COBALT_MEMDEV_SYS      "memdev-sys"

struct cobalt_memdev_stat {
	__u32 size;
	__u32 free;
};

#define MEMDEV_RTIOC_STAT	_IOR(RTDM_CLASS_MEMORY, 0, struct cobalt_memdev_stat)

#endif /* !_COBALT_UAPI_KERNEL_HEAP_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              /*
 * Copyright (C) 2014 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_UAPI_KERNEL_PIPE_H
#define _COBALT_UAPI_KERNEL_PIPE_H

#define	XNPIPE_IOCTL_BASE	'p'

#define XNPIPEIOC_GET_NRDEV	_IOW(XNPIPE_IOCTL_BASE, 0, int)
#define XNPIPEIOC_IFLUSH	_IO(XNPIPE_IOCTL_BASE, 1)
#define XNPIPEIOC_OFLUSH	_IO(XNPIPE_IOCTL_BASE, 2)
#define XNPIPEIOC_FLUSH		XNPIPEIOC_OFLUSH
#define XNPIPEIOC_SETSIG	_IO(XNPIPE_IOCTL_BASE, 3)

#define XNPIPE_NORMAL	0x0
#define XNPIPE_URGENT	0x1

#define XNPIPE_IFLUSH	0x1
#define XNPIPE_OFLUSH	0x2

#define XNPIPE_MINOR_AUTO  (-1)

#endif /* !_COBALT_UAPI_KERNEL_PIPE_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     /*
 * Copyright (C) 2014 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_UAPI_KERNEL_LIMITS_H
#define _COBALT_UAPI_KERNEL_LIMITS_H

#define XNOBJECT_NAME_LEN 32

#endif /* !_COBALT_UAPI_KERNEL_LIMITS_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           /*
 * Copyright (C) 2013 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_UAPI_KERNEL_URW_H
#define _COBALT_UAPI_KERNEL_URW_H

#include <linux/types.h>

/*
 * A restricted version of the kernel seqlocks with a slightly
 * different interface, allowing for unsynced reads with concurrent
 * write detection, without serializing writers.  Caller should
 * provide for proper locking to deal with concurrent updates.
 *
 * urw_t lock = URW_INITIALIZER;
 * urwstate_t tmp;
 *
 * unsynced_read_block(&tmp, &lock) {
 *          (will redo until clean read)...
 * }
 *
 * unsynced_write_block(&tmp, &lock) {
 *          ...
 * }
 *
 * This code was inspired by Wolfgang Mauerer's linux/seqlock.h
 * adaptation for Xenomai 2.6 to support the VDSO feature.
 */

typedef struct {
	__u32 sequence;
} urw_t;

typedef struct {
	__u32 token;
	__u32 dirty;
} urwstate_t;

#define URW_INITIALIZER     { 0 }
#define DEFINE_URW(__name)  urw_t __name = URW_INITIALIZER

static inline void __try_read_start(const urw_t *urw, urwstate_t *tmp)
{
	__u32 token;
repeat:
	token = ACCESS_ONCE(urw->sequence);
	smp_rmb();
	if (token & 1) {
		cpu_relax();
		goto repeat;
	}

	tmp->token = token;
	tmp->dirty = 1;
}

static inline void __try_read_end(const urw_t *urw, urwstate_t *tmp)
{
	smp_rmb();
	if (urw->sequence != tmp->token) {
		__try_read_start(urw, tmp);
		return;
	}

	tmp->dirty = 0;
}

static inline void __do_write_start(urw_t *urw, urwstate_t *tmp)
{
	urw->sequence++;
	tmp->dirty = 1;
	smp_wmb();
}

static inline void __do_write_end(urw_t *urw, urwstate_t *tmp)
{
	smp_wmb();
	tmp->dirty = 0;
	urw->sequence++;
}

static inline void unsynced_rw_init(urw_t *urw)
{
	urw->sequence = 0;
}

#define unsynced_read_block(__tmp, __urw)		\
	for (__try_read_start(__urw, __tmp);		\
	     (__tmp)->dirty; __try_read_end(__urw, __tmp))

#define unsynced_write_block(__tmp, __urw)		\
	for (__do_write_start(__urw, __tmp);		\
	     (__tmp)->dirty; __do_write_end(__urw, __tmp))

#endif /* !_COBALT_UAPI_KERNEL_URW_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              /*
 * Copyright (C) 2009 Wolfgang Mauerer <wolfgang.mauerer@siemens.com>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_UAPI_KERNEL_VDSO_H
#define _COBALT_UAPI_KERNEL_VDSO_H

#include <cobalt/uapi/kernel/urw.h>

struct xnvdso_hostrt_data {
	__u64 wall_sec;
	__u64 wtom_sec;
	__u64 cycle_last;
	__u64 mask;
	__u32 wall_nsec;
	__u32 wtom_nsec;
	__u32 mult;
	__u32 shift;
	__u32 live;
	urw_t lock;
};

/*
 * Data shared between the Cobalt kernel and applications, which lives
 * in the shared memory heap (COBALT_MEMDEV_SHARED).
 * xnvdso_hostrt_data.features tells which data is present. Notice
 * that struct xnvdso may only grow, but never shrink.
 */
struct xnvdso {
	__u64 features;
	/* XNVDSO_FEAT_HOST_REALTIME */
	struct xnvdso_hostrt_data hostrt_data;
	/* XNVDSO_FEAT_WALLCLOCK_OFFSET */
	__u64 wallclock_offset;
};

/* For each shared feature, add a flag below. */

#define XNVDSO_FEAT_HOST_REALTIME	0x0000000000000001ULL
#define XNVDSO_FEAT_WALLCLOCK_OFFSET	0x0000000000000002ULL

static inline int xnvdso_test_feature(struct xnvdso *vdso,
				      __u64 feature)
{
	return (vdso->features & feature) != 0;
}

#endif /* !_COBALT_UAPI_KERNEL_VDSO_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                /*
 * Copyright (C) 2006 Jan Kiszka <jan.kiszka@web.de>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_UAPI_KERNEL_TRACE_H
#define _COBALT_UAPI_KERNEL_TRACE_H

#define __xntrace_op_max_begin		0
#define __xntrace_op_max_end		1
#define __xntrace_op_max_reset		2
#define __xntrace_op_user_start		3
#define __xntrace_op_user_stop		4
#define __xntrace_op_user_freeze	5
#define __xntrace_op_special		6
#define __xntrace_op_special_u64	7

#endif /* !_COBALT_UAPI_KERNEL_TRACE_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              /*
 * Copyright (C) 2013 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_UAPI_KERNEL_TYPES_H
#define _COBALT_UAPI_KERNEL_TYPES_H

#include <linux/types.h>
#include <cobalt/uapi/kernel/limits.h>

typedef __u64 xnticks_t;

typedef __s64 xnsticks_t;

typedef __u32 xnhandle_t;

#define XN_NO_HANDLE		((xnhandle_t)0)
#define XN_HANDLE_INDEX_MASK	((xnhandle_t)0xf0000000)

/* Fixed bits (part of the identifier) */
#define XNSYNCH_PSHARED		((xnhandle_t)0x40000000)

/* Transient bits (expressing a status) */
#define XNSYNCH_FLCLAIM		((xnhandle_t)0x80000000)

#define XN_HANDLE_TRANSIENT_MASK	XNSYNCH_FLCLAIM

/*
 * Strip all special bits from the handle, only retaining the object
 * index value in the registry.
 */
static inline xnhandle_t xnhandle_get_index(xnhandle_t handle)
{
	return handle & ~XN_HANDLE_INDEX_MASK;
}

/*
 * Strip the transient bits from the handle, only retaining the fixed
 * part making the identifier.
 */
static inline xnhandle_t xnhandle_get_id(xnhandle_t handle)
{
	return handle & ~XN_HANDLE_TRANSIENT_MASK;
}

#endif /* !_COBALT_UAPI_KERNEL_TYPES_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                /*
 * Copyright (C) 2001-2013 Philippe Gerum <rpm@xenomai.org>.
 * Copyright (C) 2008, 2009 Jan Kiszka <jan.kiszka@siemens.com>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_UAPI_KERNEL_SYNCH_H
#define _COBALT_UAPI_KERNEL_SYNCH_H

#include <cobalt/uapi/kernel/types.h>

/* Creation flags */
#define XNSYNCH_FIFO    0x0
#define XNSYNCH_PRIO    0x1
#define XNSYNCH_NOPIP   0x0
#define XNSYNCH_PIP     0x2
#define XNSYNCH_DREORD  0x4
#define XNSYNCH_OWNER   0x8

/* Fast lock API */
static inline int xnsynch_fast_is_claimed(xnhandle_t handle)
{
	return (handle & XNSYNCH_FLCLAIM) != 0;
}

static inline xnhandle_t xnsynch_fast_claimed(xnhandle_t handle)
{
	return handle | XNSYNCH_FLCLAIM;
}

static inline xnhandle_t xnsynch_fast_not_claimed(xnhandle_t handle)
{
	return handle & ~XNSYNCH_FLCLAIM;
}

static inline int
xnsynch_fast_owner_check(atomic_t *fastlock, xnhandle_t ownerh)
{
	return (xnhandle_get_id(atomic_read(fastlock)) == ownerh) ?
		0 : -EPERM;
}

static inline
int xnsynch_fast_acquire(atomic_t *fastlock, xnhandle_t new_ownerh)
{
	xnhandle_t h;

	h = atomic_cmpxchg(fastlock, XN_NO_HANDLE, new_ownerh);
	if (h != XN_NO_HANDLE) {
		if (xnhandle_get_id(h) == new_ownerh)
			return -EBUSY;

		return -EAGAIN;
	}

	return 0;
}

static inline
int xnsynch_fast_release(atomic_t *fastlock, xnhandle_t cur_ownerh)
{
	return atomic_cmpxchg(fastlock, cur_ownerh, XN_NO_HANDLE)
		== cur_ownerh;
}

/* Local/shared property */
static inline int xnsynch_is_shared(xnhandle_t handle)
{
	return (handle & XNSYNCH_PSHARED) != 0;
}

#endif /* !_COBALT_UAPI_KERNEL_SYNCH_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 /*
 * Copyright (C) 2006 Gilles Chanteperdrix <gilles.chanteperdrix@xenomai.org>.
 * Copyright (C) 2013 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_UAPI_SIGNAL_H
#define _COBALT_UAPI_SIGNAL_H

/*
 * Those are pseudo-signals only available with pthread_kill() to
 * suspend/resume/unblock threads synchronously, force them out of
 * primary mode or even demote them to the SCHED_OTHER class via the
 * low-level nucleus interface. Can't block those signals, queue them,
 * or even set them in a sigset. Those are nasty, strictly anti-POSIX
 * things; we do provide them nevertheless only because we are mean
 * people doing harmful code for no valid reason. Can't go against
 * your nature, right?  Nah... (this said, don't blame us for POSIX,
 * we are not _that_ mean).
 */
#define SIGSUSP (SIGRTMAX + 1)
#define SIGRESM (SIGRTMAX + 2)
#define SIGRELS (SIGRTMAX + 3)
#define SIGKICK (SIGRTMAX + 4)
#define SIGDEMT (SIGRTMAX + 5)

/*
 * Regular POSIX signals with specific handling by Xenomai.
 */
#define SIGSHADOW			SIGWINCH
#define sigshadow_action(code)		((code) & 0xff)
#define sigshadow_arg(code)		(((code) >> 8) & 0xff)
#define sigshadow_int(action, arg)	((action) | ((arg) << 8))

/* SIGSHADOW action codes. */
#define SIGSHADOW_ACTION_HARDEN		1
#define SIGSHADOW_ACTION_BACKTRACE	2
#define SIGSHADOW_BACKTRACE_DEPTH	16

#define SIGDEBUG			SIGXCPU
#define sigdebug_code(si)		((si)->si_value.sival_int)
#define sigdebug_reason(si)		(sigdebug_code(si) & 0xff)
#define sigdebug_marker			0xfccf0000
#define sigdebug_marked(si)		\
	((sigdebug_code(si) & 0xffff0000) == sigdebug_marker)

/* Possible values of sigdebug_reason() */
#define SIGDEBUG_UNDEFINED		0
#define SIGDEBUG_MIGRATE_SIGNAL		1
#define SIGDEBUG_MIGRATE_SYSCALL	2
#define SIGDEBUG_MIGRATE_FAULT		3
#define SIGDEBUG_MIGRATE_PRIOINV	4
#define SIGDEBUG_NOMLOCK		5
#define SIGDEBUG_WATCHDOG		6
#define SIGDEBUG_RESCNT_IMBALANCE	7
#define SIGDEBUG_LOCK_BREAK		8
#define SIGDEBUG_MUTEX_SLEEP		9

#define COBALT_DELAYMAX			2147483647U

/*
 * Internal accessors to extra siginfo/sigevent fields, extending some
 * existing base field. The extra data should be grouped in a
 * dedicated struct type. The extra space is taken from the padding
 * area available from the original structure definitions.
 *
 * e.g. getting the address of the following extension to
 * _sifields._rt from siginfo_t,
 *
 * struct bar {
 *    int foo;
 * };
 *
 * would be noted as:
 *
 * siginfo_t si;
 * struct bar *p = __cobalt_si_extra(&si, _rt, struct bar);
 *
 * This code is shared between kernel and user space. Proper
 * definitions of siginfo_t and sigevent_t should have been read prior
 * to including this file.
 *
 * CAUTION: this macro does not handle alignment issues for the extra
 * data. The extra type definition should take care of this.
 */
#ifdef __OPTIMIZE__
extern void *__siginfo_overflow(void);
static inline
const void *__check_si_overflow(size_t fldsz, size_t extrasz, const void *p)
{
	siginfo_t *si __attribute__((unused));

	if (fldsz + extrasz <= sizeof(si->_sifields))
		return p;

	return __siginfo_overflow();
}
#define __cobalt_si_extra(__si, __basefield, __type)				\
	((__type *)__check_si_overflow(sizeof(__si->_sifields.__basefield),	\
	       sizeof(__type), &(__si->_sifields.__basefield) + 1))
#else
#define __cobalt_si_extra(__si, __basefield, __type)				\
	((__type *)((&__si->_sifields.__basefield) + 1))
#endif

/* Same approach, this time for extending sigevent_t. */

#ifdef __OPTIMIZE__
extern void *__sigevent_overflow(void);
static inline
const void *__check_sev_overflow(size_t fldsz, size_t extrasz, const void *p)
{
	sigevent_t *sev __attribute__((unused));

	if (fldsz + extrasz <= sizeof(sev->_sigev_un))
		return p;

	return __sigevent_overflow();
}
#define __cobalt_sev_extra(__sev, __basefield, __type)				\
	((__type *)__check_sev_overflow(sizeof(__sev->_sigev_un.__basefield),	\
	       sizeof(__type), &(__sev->_sigev_un.__basefield) + 1))
#else
#define __cobalt_sev_extra(__sev, __basefield, __type)				\
	((__type *)((&__sev->_sigev_un.__basefield) + 1))
#endif

#endif /* !_COBALT_UAPI_SIGNAL_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              /*
 * Copyright (C) 2013 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_UAPI_EVENT_H
#define _COBALT_UAPI_EVENT_H

#include <cobalt/uapi/kernel/types.h>

struct cobalt_event_state {
	__u32 value;
	__u32 flags;
#define COBALT_EVENT_PENDED  0x1
	__u32 nwaiters;
};

struct cobalt_event;

/* Creation flags. */
#define COBALT_EVENT_FIFO    0x0
#define COBALT_EVENT_PRIO    0x1
#define COBALT_EVENT_SHARED  0x2

/* Wait mode. */
#define COBALT_EVENT_ALL  0x0
#define COBALT_EVENT_ANY  0x1

struct cobalt_event_shadow {
	__u32 state_offset;
	__u32 flags;
	xnhandle_t handle;
};

struct cobalt_event_info {
	unsigned int value;
	int flags;
	int nrwait;
};

typedef struct cobalt_event_shadow cobalt_event_t;

#endif /* !_COBALT_UAPI_EVENT_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     /*
 * Copyright (C) 2015 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_UAPI_CORECTL_H
#define _COBALT_UAPI_CORECTL_H

#define _CC_COBALT_GET_VERSION		0
#define _CC_COBALT_GET_NR_PIPES		1
#define _CC_COBALT_GET_NR_TIMERS	2

#define _CC_COBALT_GET_DEBUG			3
#   define _CC_COBALT_DEBUG_ASSERT		1
#   define _CC_COBALT_DEBUG_CONTEXT		2
#   define _CC_COBALT_DEBUG_LOCKING		4
#   define _CC_COBALT_DEBUG_USER		8
#   define _CC_COBALT_DEBUG_MUTEX_RELAXED	16
#   define _CC_COBALT_DEBUG_MUTEX_SLEEP		32
#   define _CC_COBALT_DEBUG_POSIX_SYNCHRO	64
#   define _CC_COBALT_DEBUG_LEGACY		128
#   define _CC_COBALT_DEBUG_TRACE_RELAX		256
#   define _CC_COBALT_DEBUG_NET			512

#define _CC_COBALT_GET_POLICIES		4
#   define _CC_COBALT_SCHED_FIFO	1
#   define _CC_COBALT_SCHED_RR		2
#   define _CC_COBALT_SCHED_WEAK	4
#   define _CC_COBALT_SCHED_SPORADIC	8
#   define _CC_COBALT_SCHED_QUOTA	16
#   define _CC_COBALT_SCHED_TP		32

#define _CC_COBALT_GET_WATCHDOG		5
#define _CC_COBALT_GET_CORE_STATUS	6
#define _CC_COBALT_START_CORE		7
#define _CC_COBALT_STOP_CORE		8

#define _CC_COBALT_GET_NET_CONFIG	9
#   define _CC_COBALT_NET		0x00000001
#   define _CC_COBALT_NET_ETH_P_ALL	0x00000002
#   define _CC_COBALT_NET_IPV4		0x00000004
#   define _CC_COBALT_NET_ICMP		0x00000008
#   define _CC_COBALT_NET_NETROUTING	0x00000010
#   define _CC_COBALT_NET_ROUTER	0x00000020
#   define _CC_COBALT_NET_UDP		0x00000040
#   define _CC_COBALT_NET_AF_PACKET	0x00000080
#   define _CC_COBALT_NET_TDMA		0x00000100
#   define _CC_COBALT_NET_NOMAC		0x00000200
#   define _CC_COBALT_NET_CFG		0x00000400
#   define _CC_COBALT_NET_CAP		0x00000800
#   define _CC_COBALT_NET_PROXY		0x00001000


enum cobalt_run_states {
	COBALT_STATE_DISABLED,
	COBALT_STATE_RUNNING,
	COBALT_STATE_STOPPED,
	COBALT_STATE_TEARDOWN,
	COBALT_STATE_WARMUP,
};

#endif /* !_COBALT_UAPI_CORECTL_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    /*
 * Written by Gilles Chanteperdrix <gilles.chanteperdrix@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_UAPI_MUTEX_H
#define _COBALT_UAPI_MUTEX_H

#include <cobalt/uapi/kernel/types.h>

#define COBALT_MUTEX_MAGIC  0x86860303

struct cobalt_mutex_state {
	atomic_t owner;
	__u32 flags;
#define COBALT_MUTEX_COND_SIGNAL 0x00000001
#define COBALT_MUTEX_ERRORCHECK  0x00000002
};

union cobalt_mutex_union {
	pthread_mutex_t native_mutex;
	struct cobalt_mutex_shadow {
		__u32 magic;
		__u32 lockcnt;
		__u32 state_offset;
		xnhandle_t handle;
		struct cobalt_mutexattr attr;
	} shadow_mutex;
};

#endif /* !_COBALT_UAPI_MUTEX_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    /*
 * Copyright (C) 2013 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_UAPI_MONITOR_H
#define _COBALT_UAPI_MONITOR_H

#include <cobalt/uapi/kernel/types.h>

struct cobalt_monitor_state {
	atomic_t owner;
	__u32 flags;
#define COBALT_MONITOR_GRANTED    0x01
#define COBALT_MONITOR_DRAINED    0x02
#define COBALT_MONITOR_SIGNALED   0x03 /* i.e. GRANTED or DRAINED */
#define COBALT_MONITOR_BROADCAST  0x04
#define COBALT_MONITOR_PENDED     0x08
};

struct cobalt_monitor;

struct cobalt_monitor_shadow {
	__u32 state_offset;
	__u32 flags;
	xnhandle_t handle;
#define COBALT_MONITOR_SHARED     0x1
#define COBALT_MONITOR_WAITGRANT  0x0
#define COBALT_MONITOR_WAITDRAIN  0x1
};

typedef struct cobalt_monitor_shadow cobalt_monitor_t;

#endif /* !_COBALT_UAPI_MONITOR_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      /*
 * Written by Gilles Chanteperdrix <gilles.chanteperdrix@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_UAPI_COND_H
#define _COBALT_UAPI_COND_H

#include <cobalt/uapi/mutex.h>

#define COBALT_COND_MAGIC 0x86860505

struct cobalt_cond_state {
	__u32 pending_signals;
	__u32 mutex_state_offset;
};

union cobalt_cond_union {
	pthread_cond_t native_cond;
	struct cobalt_cond_shadow {
		__u32 magic;
		__u32 state_offset;
		xnhandle_t handle;
	} shadow_cond;
};

#endif /* !_COBALT_UAPI_COND_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           /*
 * Written by Gilles Chanteperdrix <gilles.chanteperdrix@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_UAPI_SEM_H
#define _COBALT_UAPI_SEM_H

#include <cobalt/uapi/kernel/types.h>

#define COBALT_SEM_MAGIC (0x86860707)
#define COBALT_NAMED_SEM_MAGIC (0x86860D0D)

struct cobalt_sem;

struct cobalt_sem_state {
	atomic_t value;
	__u32 flags;
};

union cobalt_sem_union {
	sem_t native_sem;
	struct cobalt_sem_shadow {
		__u32 magic;
		__s32 state_offset;
		xnhandle_t handle;
	} shadow_sem;
};

struct cobalt_sem_info {
	unsigned int value;
	int flags;
	int nrwait;
};

#define SEM_FIFO       0x1
#define SEM_PULSE      0x2
#define SEM_PSHARED    0x4
#define SEM_REPORT     0x8
#define SEM_WARNDEL    0x10
#define SEM_RAWCLOCK   0x20
#define SEM_NOBUSYDEL  0x40

#endif /* !_COBALT_UAPI_SEM_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            /*
 * Copyright (C) 2005 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#pragma GCC system_header
#include_next <sched.h>

#ifndef _COBALT_SCHED_H
#define _COBALT_SCHED_H

#include <sys/types.h>
#include <cobalt/wrappers.h>
#include <cobalt/uapi/sched.h>

#ifdef __cplusplus
extern "C" {
#endif

COBALT_DECL(int, sched_yield(void));

COBALT_DECL(int, sched_get_priority_min(int policy));

COBALT_DECL(int, sched_get_priority_max(int policy));

COBALT_DECL(int, sched_setscheduler(pid_t pid, int policy,
				    const struct sched_param *param));

COBALT_DECL(int, sched_getscheduler(pid_t pid));

int sched_get_priority_min_ex(int policy);

int sched_get_priority_max_ex(int policy);

int sched_setscheduler_ex(pid_t pid, int policy,
			  const struct sched_param_ex *param_ex);

int sched_getscheduler_ex(pid_t pid, int *policy_r,
			  struct sched_param_ex *param_ex);
 
int sched_setconfig_np(int cpu, int policy,
		       const union sched_config *config, size_t len);

ssize_t sched_getconfig_np(int cpu, int policy,
			   union sched_config *config, size_t *len_r);

#ifdef __cplusplus
}
#endif

#endif /* !_COBALT_SCHED_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           /*
 * Copyright (C) 2015 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_TUNABLES_H
#define _COBALT_TUNABLES_H

#include <boilerplate/tunables.h>
#include <sys/cobalt.h>

#ifdef __cplusplus
extern "C" {
#endif

extern int __cobalt_main_prio;

extern int __cobalt_print_bufsz;

extern int __cobalt_print_bufcount;

extern int __cobalt_print_syncdelay;

static inline define_config_tunable(main_prio, int, prio)
{
	__cobalt_main_prio = prio;
}

static inline read_config_tunable(main_prio, int)
{
	return __cobalt_main_prio;
}

static inline define_config_tunable(print_buffer_size, int, size)
{
	__cobalt_print_bufsz = size;
}

static inline read_config_tunable(print_buffer_size, int)
{
	return __cobalt_print_bufsz;
}

static inline define_config_tunable(print_buffer_count, int, count)
{
	__cobalt_print_bufcount = count;
}

static inline read_config_tunable(print_buffer_count, int)
{
	return __cobalt_print_bufcount;
}

static inline define_config_tunable(print_sync_delay, int, delay_ms)
{
	__cobalt_print_syncdelay = delay_ms;
}

static inline read_config_tunable(print_sync_delay, int)
{
	return __cobalt_print_syncdelay;
}

#ifdef __cplusplus
}
#endif

#endif /* !_COBALT_TUNABLES_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                /*
 * Copyright (C) 2005 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#pragma GCC system_header
#include_next <time.h>

#ifndef _COBALT_TIME_H
#define _COBALT_TIME_H

/* Re-read in case we came from selective __need* block. */
#include_next <time.h>
#include <cobalt/wrappers.h>
#include <cobalt/uapi/time.h>

#ifdef __cplusplus
extern "C" {
#endif

COBALT_DECL(int, clock_getres(clockid_t clock_id,
			      struct timespec *tp));

COBALT_DECL(int, clock_gettime(clockid_t clock_id,
			       struct timespec *tp));

COBALT_DECL(int, clock_settime(clockid_t clock_id,
			       const struct timespec *tp));

COBALT_DECL(int, clock_nanosleep(clockid_t clock_id,
				 int flags,
				 const struct timespec *rqtp,
				 struct timespec *rmtp));

COBALT_DECL(time_t, time(time_t *t));

COBALT_DECL(int, nanosleep(const struct timespec *rqtp,
			   struct timespec *rmtp));

COBALT_DECL(int, timer_create(clockid_t clockid,
			      const struct sigevent *__restrict__ evp,
			      timer_t * __restrict__ timerid));

COBALT_DECL(int, timer_delete(timer_t timerid));

COBALT_DECL(int, timer_settime(timer_t timerid,
			       int flags,
			       const struct itimerspec *value,
			       struct itimerspec *ovalue));

COBALT_DECL(int, timer_gettime(timer_t timerid,
			       struct itimerspec *value));

COBALT_DECL(int, timer_getoverrun(timer_t timerid));

#ifdef __cplusplus
}
#endif

#endif /* !_COBALT_TIME_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                /*
 * Copyright (C) 2014 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#pragma GCC system_header
#include_next <sys/mman.h>

#ifndef _COBALT_SYS_MMAN_H
#define _COBALT_SYS_MMAN_H

#include <sys/types.h>
#include <cobalt/wrappers.h>

#ifdef __cplusplus
extern "C" {
#endif

COBALT_DECL(void *, mmap(void *addr, size_t length, int prot, int flags,
			 int fd, off_t offset));

COBALT_DECL(void *, mmap64(void *addr, size_t length, int prot, int flags,
			   int fd, off64_t offset));

#ifdef __cplusplus
}
#endif

#endif /* !_COBALT_SYS_MMAN_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     /*
 * Copyright (C) 2011 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#pragma GCC system_header
#include_next <sys/time.h>

#ifndef _COBALT_SYS_TIME_H
#define _COBALT_SYS_TIME_H

#include <cobalt/wrappers.h>

struct timezone;

#ifdef __cplusplus
extern "C" {
#endif

COBALT_DECL(int, gettimeofday(struct timeval *tv,
			      struct timezone *tz));

#ifdef __cplusplus
}
#endif

#endif /* !_COBALT_SYS_TIME_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         /*
 * Copyright (C) 2014 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_SYS_COBALT_H
#define _COBALT_SYS_COBALT_H

#include <sys/types.h>
#include <signal.h>
#include <pthread.h>
#include <sched.h>
#include <semaphore.h>
#include <errno.h>
#include <stdio.h>
#include <time.h>
#include <boilerplate/atomic.h>
#include <boilerplate/list.h>
#include <cobalt/uapi/kernel/synch.h>
#include <cobalt/uapi/kernel/vdso.h>
#include <cobalt/uapi/corectl.h>
#include <cobalt/uapi/mutex.h>
#include <cobalt/uapi/event.h>
#include <cobalt/uapi/monitor.h>
#include <cobalt/uapi/thread.h>
#include <cobalt/uapi/cond.h>
#include <cobalt/uapi/sem.h>
#include <cobalt/ticks.h>

#define cobalt_commit_memory(p) __cobalt_commit_memory(p, sizeof(*p))

struct cobalt_tsd_hook {
	void (*create_tsd)(void);
	void (*delete_tsd)(void);
	struct pvholder next;
};

#ifdef __cplusplus
extern "C" {
#endif

int cobalt_extend(unsigned int magic);

int cobalt_corectl(int request, void *buf, size_t bufsz);

int cobalt_thread_stat(pid_t pid,
		       struct cobalt_threadstat *stat);

int cobalt_serial_debug(const char *fmt, ...);

void __cobalt_commit_memory(void *p, size_t len);

void cobalt_thread_harden(void);

void cobalt_thread_relax(void);

int cobalt_thread_join(pthread_t thread);

pid_t cobalt_thread_pid(pthread_t thread);

int cobalt_thread_mode(void);
  
int cobalt_monitor_init(cobalt_monitor_t *mon,
			clockid_t clk_id, int flags);

int cobalt_monitor_destroy(cobalt_monitor_t *mon);

int cobalt_monitor_enter(cobalt_monitor_t *mon);

int cobalt_monitor_exit(cobalt_monitor_t *mon);

int cobalt_monitor_wait(cobalt_monitor_t *mon, int event,
			const struct timespec *ts);

void cobalt_monitor_grant(cobalt_monitor_t *mon,
			  struct xnthread_user_window *u_window);

int cobalt_monitor_grant_sync(cobalt_monitor_t *mon,
			      struct xnthread_user_window *u_window);

void cobalt_monitor_grant_all(cobalt_monitor_t *mon);

int cobalt_monitor_grant_all_sync(cobalt_monitor_t *mon);

void cobalt_monitor_drain(cobalt_monitor_t *mon);

int cobalt_monitor_drain_sync(cobalt_monitor_t *mon);

void cobalt_monitor_drain_all(cobalt_monitor_t *mon);

int cobalt_monitor_drain_all_sync(cobalt_monitor_t *mon);

int cobalt_event_init(cobalt_event_t *event,
		      unsigned int value,
		      int flags);

int cobalt_event_post(cobalt_event_t *event,
		      unsigned int bits);

int cobalt_event_wait(cobalt_event_t *event,
		      unsigned int bits,
		      unsigned int *bits_r,
		      int mode,
		      const struct timespec *timeout);

unsigned long cobalt_event_clear(cobalt_event_t *event,
				 unsigned int bits);

int cobalt_event_inquire(cobalt_event_t *event,
			 struct cobalt_event_info *info,
			 pid_t *waitlist, size_t waitsz);

int cobalt_event_destroy(cobalt_event_t *event);

int cobalt_sem_inquire(sem_t *sem, struct cobalt_sem_info *info,
		       pid_t *waitlist, size_t waitsz);

int cobalt_sched_weighted_prio(int policy,
			       const struct sched_param_ex *param_ex);

void cobalt_register_tsd_hook(struct cobalt_tsd_hook *th);

void cobalt_assert_nrt(void);

/* Use cobalt_assert_nrt() instead of: */
__deprecated void assert_nrt(void);
__deprecated void assert_nrt_fast(void);

extern int __cobalt_control_bind;

#ifdef __cplusplus
}
#endif

#endif /* !_COBALT_SYS_COBALT_H */
                                                              /*
 * Copyright (C) 2005 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#pragma GCC system_header
#include_next <sys/ioctl.h>

#ifndef _COBALT_SYS_IOCTL_H
#define _COBALT_SYS_IOCTL_H

#include <cobalt/wrappers.h>

#ifdef __cplusplus
extern "C" {
#endif

COBALT_DECL(int, ioctl(int fildes, unsigned int request, ...));

#ifdef __cplusplus
}
#endif

#endif /* !_COBALT_SYS_IOCTL_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         /*
 * Copyright (C) 2005 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#pragma GCC system_header
#include_next <sys/socket.h>

#ifndef _COBALT_SYS_SOCKET_H
#define _COBALT_SYS_SOCKET_H

#include <cobalt/wrappers.h>

#ifdef __cplusplus
extern "C" {
#endif

COBALT_DECL(int, socket(int protocol_family,
			int socket_type, int protocol));

COBALT_DECL(ssize_t, recvmsg(int fd,
			     struct msghdr *msg, int flags));

COBALT_DECL(ssize_t, sendmsg(int fd,
			     const struct msghdr *msg, int flags));

COBALT_DECL(ssize_t, recvfrom(int fd, void *buf, size_t len, int flags,
			      struct sockaddr *from, socklen_t *fromlen));

COBALT_DECL(ssize_t, sendto(int fd, const void *buf, size_t len, int flags,
			    const struct sockaddr *to, socklen_t tolen));

COBALT_DECL(ssize_t, recv(int fd, void *buf,
			  size_t len, int flags));

COBALT_DECL(ssize_t, send(int fd, const void *buf,
			  size_t len, int flags));

COBALT_DECL(int, getsockopt(int fd, int level, int optname,
			    void *optval, socklen_t *optlen));

COBALT_DECL(int, setsockopt(int fd, int level, int optname,
			    const void *optval, socklen_t optlen));

COBALT_DECL(int, bind(int fd, const struct sockaddr *my_addr,
		      socklen_t addrlen));

COBALT_DECL(int, connect(int fd, const struct sockaddr *serv_addr,
			 socklen_t addrlen));

COBALT_DECL(int, listen(int fd, int backlog));

COBALT_DECL(int, accept(int fd, struct sockaddr *addr,
			socklen_t *addrlen));

COBALT_DECL(int, getsockname(int fd, struct sockaddr *name,
			     socklen_t *namelen));

COBALT_DECL(int, getpeername(int fd, struct sockaddr *name,
			     socklen_t *namelen));

COBALT_DECL(int, shutdown(int fd, int how));

#ifdef __cplusplus
}
#endif

#endif /* !_COBALT_SYS_SOCKET_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                /*
 * Copyright (C) 2010 Gilles Chanteperdrix <gilles.chanteperdrix@xenomai.org>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#pragma GCC system_header
#include_next <sys/select.h>

#ifndef _COBALT_SYS_SELECT_H
#define _COBALT_SYS_SELECT_H

#include <cobalt/wrappers.h>

#ifdef __cplusplus
extern "C" {
#endif

COBALT_DECL(int, select(int __nfds, fd_set *__restrict __readfds,
			fd_set *__restrict __writefds,
			fd_set *__restrict __exceptfds,
			struct timeval *__restrict __timeout));
#ifdef __cplusplus
}
#endif

#endif /* !_COBALT_SYS_SELECT_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              /*
 * Copyright (C) 2013 Gilles Chanteperdrix <gilles.chanteperdrix@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_SYS_TIMERFD_H
#define _COBALT_SYS_TIMERFD_H

#pragma GCC system_header
#include_next <sys/timerfd.h>
#include <cobalt/wrappers.h>
#include <cobalt/uapi/time.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

COBALT_DECL(int, timerfd_create(int clockid, int flags));

COBALT_DECL(int, timerfd_settime(int fd, int flags,
		const struct itimerspec *new_value,
		struct itimerspec *old_value));

COBALT_DECL(int, timerfd_gettime(int fd, struct itimerspec *curr_value));

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* _COBALT_SYS_TIMERFD_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        /*
 * Copyright (C) 2006 Gilles Chanteperdrix <gilles.chanteperdrix@xenomai.org>.
 * Copyright (C) 2007 Jan Kiszka <jan.kiszka@web.de>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#pragma GCC system_header
#include_next <stdio.h>

#ifndef _COBALT_STDIO_H
#define _COBALT_STDIO_H

#include <stddef.h>
#include <stdarg.h>
#include <xeno_config.h>
#include <cobalt/wrappers.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

COBALT_DECL(int, vfprintf(FILE *stream, const char *fmt, va_list args));

#ifdef CONFIG_XENO_FORTIFY

COBALT_DECL(int, __vfprintf_chk(FILE *stream, int level,
				const char *fmt, va_list ap));

COBALT_DECL(int, __vprintf_chk(int flag,
			       const char *fmt, va_list ap));

COBALT_DECL(int, __printf_chk(int flag, const char *fmt, ...));

COBALT_DECL(int, __fprintf_chk(FILE *fp, int flag, const char *fmt, ...));

int __rt_vfprintf_chk(FILE *stream, int level,
		      const char *fmt, va_list args);

void __rt_vsyslog_chk(int priority, int level,
		      const char *fmt, va_list args);

#endif	/* CONFIG_XENO_FORTIFY */

COBALT_DECL(int, vprintf(const char *fmt, va_list args));

COBALT_DECL(int, fprintf(FILE *stream, const char *fmt, ...));

COBALT_DECL(int, printf(const char *fmt, ...));

COBALT_DECL(int, puts(const char *s));

COBALT_DECL(int, fputs(const char *s, FILE *stream));

#ifndef putchar
COBALT_DECL(int, putchar(int c));
#else
static inline int __real_putchar(int c)
{
	return putchar(c);
}
int __wrap_putchar(int c);
int __cobalt_putchar(int c);
#undef putchar
#define putchar __wrap_putchar
#endif

#ifndef fputc
COBALT_DECL(int, fputc(int c, FILE *stream));
#else
static inline int __real_fputc(int c, FILE *stream)
{
	return fputc(c, stream);
}
int __wrap_fputc(int c, FILE *stream);
int __cobalt_fputc(int c, FILE *stream);
#undef fputc
#define fputc __wrap_fputc
#endif

COBALT_DECL(size_t,
	    fwrite(const void *ptr, size_t sz, size_t nmemb, FILE *stream));

COBALT_DECL(int, fclose(FILE *stream));

int rt_vfprintf(FILE *stream, const char *format, va_list args);

int rt_vprintf(const char *format, va_list args);

int rt_fprintf(FILE *stream, const char *format, ...);

int rt_printf(const char *format, ...);

int rt_puts(const char *s);

int rt_fputs(const char *s, FILE *stream);

int rt_fputc(int c, FILE *stream);

int rt_putchar(int c);

size_t rt_fwrite(const void *ptr, size_t size, size_t nmemb, FILE *stream);

void rt_syslog(int priority, const char *format, ...);

void rt_vsyslog(int priority, const char *format, va_list args);

int rt_print_init(size_t buffer_size, const char *name);

const char *rt_print_buffer_name(void);

void rt_print_flush_buffers(void);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* !_COBALT_STDIO_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 /*
 * Copyright (C) 2014 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_BOILERPLATE_SCHED_H
#define _COBALT_BOILERPLATE_SCHED_H

#include <cobalt/sched.h>

#endif /* _COBALT_BOILERPLATE_SCHED_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    /*
 * Copyright (C) 2014 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_BOILERPLATE_LIMITS_H
#define _COBALT_BOILERPLATE_LIMITS_H

#include <cobalt/uapi/kernel/limits.h>

#endif /* _COBALT_BOILERPLATE_LIMITS_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    /*
 * Copyright (C) 2013 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_BOILERPLATE_SIGNAL_H
#define _COBALT_BOILERPLATE_SIGNAL_H

#include <cobalt/signal.h>

/* Generates reserved signal numbers for Boilerplate/Copperplate. */
#define __SIGRSVD(n)	(SIGRTMIN + 8 + (n))

#define SIGAGENT	__SIGRSVD(0) /* Request to remote agent */
#define SIGPERIOD	__SIGRSVD(1) /* Periodic signal */

/* Generates private signal numbers for clients, up to SIGRTMAX. */
#define __SIGPRIV(n)	__SIGRSVD(8 + (n))

#define SIGSAFE_LOCK_ENTRY(__safelock)					\
  	do {								\
		push_cleanup_lock(__safelock);				\
		write_lock(__safelock);

#define SIGSAFE_LOCK_EXIT(__safelock)					\
		write_unlock(__safelock);				\
		pop_cleanup_lock(&__safelock);				\
	} while (0)

#endif /* _COBALT_BOILERPLATE_SIGNAL_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               /*
 * Copyright (C) 2013 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_BOILERPLATE_TRACE_H
#define _COBALT_BOILERPLATE_TRACE_H

#include <cobalt/trace.h>

#endif /* _COBALT_BOILERPLATE_TRACE_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  /*
 * Copyright (C) 2013 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_BOILERPLATE_WRAPPERS_H
#define _COBALT_BOILERPLATE_WRAPPERS_H

#include <cobalt/wrappers.h>

#endif /* !_COBALT_BOILERPLATE_WRAPPERS_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     /*
 * Copyright (C) 2006 Gilles Chanteperdrix <gilles.chanteperdrix@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#pragma GCC system_header
#include_next <syslog.h>

#ifndef _COBALT_SYSLOG_H
#define _COBALT_SYSLOG_H

#include <stdarg.h>
#include <xeno_config.h>
#include <cobalt/wrappers.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

COBALT_DECL(void, syslog(int priority, const char *fmt, ...));

COBALT_DECL(void, vsyslog(int priority,
			  const char *fmt, va_list ap));

#ifdef CONFIG_XENO_FORTIFY

COBALT_DECL(void, __vsyslog_chk(int priority, int level,
				const char *fmt, va_list ap));

COBALT_DECL(void, __syslog_chk(int pri, int flag,
			       const char *fmt, ...));

#endif /* CONFIG_XENO_FORTIFY */

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* !_COBALT_SYSLOG_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 /*
 * Copyright (C) 2006 Gilles Chanteperdrix <gilles.chanteperdrix@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#pragma GCC system_header
#include_next <signal.h>

#ifndef _COBALT_SIGNAL_H
#define _COBALT_SIGNAL_H

/* Re-read in case we came from selective __need* block. */
#include_next <signal.h>
#include <cobalt/wrappers.h>
#include <cobalt/uapi/signal.h>

#ifndef sigev_notify_thread_id
#define sigev_notify_thread_id	 _sigev_un._tid
#endif

#ifdef __cplusplus
extern "C" {
#endif

int cobalt_sigshadow_handler(int sig, siginfo_t *si,
			     void *ctxt);

void cobalt_sigdebug_handler(int sig, siginfo_t *si,
			     void *context);

COBALT_DECL(int, sigpending(sigset_t *set));

COBALT_DECL(int, sigwait(const sigset_t *set, int *sig));

COBALT_DECL(int, sigwaitinfo(const sigset_t *set, siginfo_t *si));

COBALT_DECL(int, sigtimedwait(const sigset_t *set, siginfo_t *si,
			      const struct timespec *timeout));

COBALT_DECL(int, kill(pid_t pid, int sig));

COBALT_DECL(int, sigqueue(pid_t pid, int sig,
			  const union sigval value));

#ifdef __cplusplus
}
#endif

#endif /* !_COBALT_SIGNAL_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   /*
 * Copyright (C) 2013 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_TICKS_H
#define _COBALT_TICKS_H

#include <cobalt/uapi/kernel/types.h>

#ifdef __cplusplus
extern "C" {
#endif

xnticks_t cobalt_read_hrclock(void);

xnsticks_t cobalt_ticks_to_ns(xnsticks_t ticks);

xnsticks_t cobalt_ticks_to_ns_rounded(xnsticks_t ticks);

xnsticks_t cobalt_ns_to_ticks(xnsticks_t ns);

unsigned long long cobalt_divrem_billion(unsigned long long value,
					 unsigned long *rem);
#ifdef __cplusplus
}
#endif

#endif /* !_COBALT_TICKS_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       /*
 * Copyright (C) 2005 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#pragma GCC system_header
#include_next <unistd.h>

#ifndef _COBALT_UNISTD_H
#define _COBALT_UNISTD_H

#include <cobalt/wrappers.h>

#ifdef __cplusplus
extern "C" {
#endif

COBALT_DECL(ssize_t, read(int fd, void *buf, size_t nbyte));

COBALT_DECL(ssize_t, write(int fd, const void *buf, size_t nbyte));

COBALT_DECL(int, close(int fildes));

COBALT_DECL(unsigned int, sleep(unsigned int seconds));

#ifdef __cplusplus
}
#endif

#endif /* !_COBALT_UNISTD_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    /*
 * Copyright (C) 2006 Jan Kiszka <jan.kiszka@web.de>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_TRACE_H
#define _COBALT_TRACE_H

#ifdef __cplusplus
extern "C" {
#endif

int xntrace_max_begin(unsigned long v);

int xntrace_max_end(unsigned long v);

int xntrace_max_reset(void);

int xntrace_user_start(void);

int xntrace_user_stop(unsigned long v);

int xntrace_user_freeze(unsigned long v, int once);

int xntrace_special(unsigned char id, unsigned long v);

int xntrace_special_u64(unsigned char id, unsigned long long v);

#ifdef __cplusplus
}
#endif

#endif /* !_COBALT_TRACE_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         /*
 * Copyright (C) 2011 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _COBALT_WRAPPERS_H
#define _COBALT_WRAPPERS_H

#include <boilerplate/compiler.h>

#define __stringify_1(x...)	#x
#define __stringify(x...)	__stringify_1(x)

#define __WRAP(call)		__wrap_ ## call
#define __STD(call)		__real_ ## call
#define __COBALT(call)		__cobalt_ ## call
#define __RT(call)		__COBALT(call)
#define COBALT_DECL(T, P)	\
	__typeof__(T) __RT(P);	\
	__typeof__(T) __STD(P); \
	__typeof__(T) __WRAP(P)

/*
 * 
 * Each "foo" Cobalt routine shadowing a POSIX service may be
 * overriden by an external library (see --with-cobalt-override
 * option), in which case we generate the following symbols:
 * 
 * __real_foo() => Original POSIX implementation.
 * __cobalt_foo() => Cobalt implementation.
 * __wrap_foo() => Weak alias to __cobalt_foo(), may be
 * overriden.
 *
 * In the latter case, the external library shall provide its own
 * implementation of __wrap_foo(), overriding Cobalt's foo()
 * version. The original Cobalt implementation can still be
 * referenced as __COBALT(foo).
 */
#define COBALT_IMPL(T, I, A)								\
__typeof__(T) __wrap_ ## I A __attribute__((alias("__cobalt_" __stringify(I)), weak));	\
__typeof__(T) __cobalt_ ## I A

#endif /* !_COBALT_WRAPPERS_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           /*
 * Copyright (C) 2005 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#pragma GCC system_header
#include_next <semaphore.h>

#ifndef _COBALT_SEMAPHORE_H
#define _COBALT_SEMAPHORE_H

#include <boilerplate/atomic.h>
#include <cobalt/wrappers.h>
#include <cobalt/uapi/sem.h>

#ifdef __cplusplus
extern "C" {
#endif

COBALT_DECL(int, sem_init(sem_t *sem,
			  int pshared,
			  unsigned int value));

COBALT_DECL(int, sem_destroy(sem_t *sem));

COBALT_DECL(int, sem_post(sem_t *sem));

COBALT_DECL(int, sem_wait(sem_t *sem));

COBALT_DECL(int, sem_timedwait(sem_t *sem,
			       const struct timespec *abs_timeout));

COBALT_DECL(int, sem_trywait(sem_t *sem));

COBALT_DECL(int, sem_getvalue(sem_t *sem, int *value));

COBALT_DECL(sem_t *, sem_open(const char *name, int oflags, ...));

COBALT_DECL(int, sem_close(sem_t *sem));

COBALT_DECL(int, sem_unlink(const char *name));

int sem_init_np(sem_t *sem,
		int flags,
		unsigned int value);

int sem_broadcast_np(sem_t *sem);

#ifdef __cplusplus
}
#endif

#endif /* !_COBALT_SEMAPHORE_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       /*
 * Copyright (C) 2006 Gilles Chanteperdrix <gilles.chanteperdrix@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#pragma GCC system_header
#include_next <stdlib.h>

#ifndef _COBALT_STDLIB_H
#define _COBALT_STDLIB_H

/* Re-read in case we came from selective __need* block. */
#include_next <stdlib.h>
#include <cobalt/wrappers.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

COBALT_DECL(void, free(void *ptr));

COBALT_DECL(void *, malloc(size_t size));

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* !_COBALT_STDLIB_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      /*
 * Copyright (C) 2005 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#pragma GCC system_header
#include_next <fcntl.h>

#ifndef _COBALT_FCNTL_H
#define _COBALT_FCNTL_H

#include <cobalt/wrappers.h>

#ifdef __cplusplus
extern "C" {
#endif

COBALT_DECL(int, open(const char *path, int oflag, ...));

COBALT_DECL(int, open64(const char *path, int oflag, ...));

COBALT_DECL(int, fcntl(int fd, int cmd, ...));

#ifdef __cplusplus
}
#endif

#endif /* !_COBALT_FCNTL_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  /*
 * Copyright (C) 2005 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#pragma GCC system_header
#include_next <mqueue.h>

#ifndef _COBALT_MQUEUE_H
#define _COBALT_MQUEUE_H

#include <cobalt/wrappers.h>

#ifdef __cplusplus
extern "C" {
#endif

COBALT_DECL(mqd_t, mq_open(const char *name,
			   int oflags,
			   ...));

COBALT_DECL(int, mq_close(mqd_t qd));

COBALT_DECL(int, mq_unlink(const char *name));

COBALT_DECL(int, mq_getattr(mqd_t qd,
			    struct mq_attr *attr));

COBALT_DECL(int, mq_setattr(mqd_t qd,
			    const struct mq_attr *__restrict__ attr,
			    struct mq_attr *__restrict__ oattr));

COBALT_DECL(int, mq_send(mqd_t qd,
			 const char *buffer,
			 size_t len,
			 unsigned prio));

COBALT_DECL(int, mq_timedsend(mqd_t q,
			      const char * buffer,
			      size_t len,
			      unsigned prio,
			      const struct timespec *timeout));

COBALT_DECL(ssize_t, mq_receive(mqd_t q,
				char *buffer,
				size_t len,
				unsigned *prio));

COBALT_DECL(ssize_t, mq_timedreceive(mqd_t q,
				     char *__restrict__ buffer,
				     size_t len,
				     unsigned *__restrict__ prio,
				     const struct timespec *__restrict__ timeout));

COBALT_DECL(int, mq_notify(mqd_t q,
			   const struct sigevent *evp));

#ifdef __cplusplus
}
#endif

#endif /* !_COBALT_MQUEUE_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        /*
 * Copyright (C) 2005 Philippe Gerum <rpm@xenomai.org>.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#pragma GCC system_header
#include_next <pthread.h>

#ifndef _COBALT_PTHREAD_H
#define _COBALT_PTHREAD_H

#include <boilerplate/libc.h>
#include <cobalt/wrappers.h>
#include <cobalt/uapi/thread.h>

typedef struct pthread_attr_ex {
	pthread_attr_t std;
	struct {
		int personality;
		int sched_policy;
		struct sched_param_ex sched_param;
	} nonstd;
} pthread_attr_ex_t;

#ifdef __cplusplus
extern "C" {
#endif

COBALT_DECL(int, pthread_attr_init(pthread_attr_t *attr));

COBALT_DECL(int, pthread_create(pthread_t *ptid_r,
				const pthread_attr_t *attr,
				void *(*start) (void *),
				void *arg));

COBALT_DECL(int, pthread_getschedparam(pthread_t thread,
				       int *policy,
				       struct sched_param *param));

COBALT_DECL(int, pthread_setschedparam(pthread_t thread,
				       int policy,
				       const struct sched_param *param));

COBALT_DECL(int, pthread_mutex_init(pthread_mutex_t *mutex,
				    const pthread_mutexattr_t *attr));

COBALT_DECL(int, pthread_mutex_destroy(pthread_mutex_t *mutex));

COBALT_DECL(int, pthread_mutex_lock(pthread_mutex_t *mutex));

COBALT_DECL(int, pthread_mutex_timedlock(pthread_mutex_t *mutex,
					 const struct timespec *to));

COBALT_DECL(int, pthread_mutex_trylock(pthread_mutex_t *mutex));

COBALT_DECL(int, pthread_mutex_unlock(pthread_mutex_t *mutex));

COBALT_DECL(int, pthread_cond_init (pthread_cond_t *cond,
				    const pthread_condattr_t *attr));

COBALT_DECL(int, pthread_cond_destroy(pthread_cond_t *cond));

COBALT_DECL(int, pthread_cond_wait(pthread_cond_t *cond,
				   pthread_mutex_t *mutex));

COBALT_DECL(int, pthread_cond_timedwait(pthread_cond_t *cond,
					pthread_mutex_t *mutex,
					const struct timespec *abstime));

COBALT_DECL(int, pthread_cond_signal(pthread_cond_t *cond));

COBALT_DECL(int, pthread_cond_broadcast(pthread_cond_t *cond));

COBALT_DECL(int, pthread_kill(pthread_t ptid, int sig));

COBALT_DECL(int, pthread_join(pthread_t ptid, void **retval));

#ifndef pthread_yield
/*
 * linuxthreads wraps pthread_yield() to sched_yield() via a
 * preprocessor macro, which confuses the compiler with
 * COBALT_DECL(). Since Cobalt also routes pthread_yield() to its own
 * sched_yield() implementation internally, we can live with this
 * wrapping.
 */
COBALT_DECL(int, pthread_yield(void));
#endif

int pthread_setmode_np(int clrmask, int setmask,
		       int *mask_r);

COBALT_DECL(int, pthread_setname_np(pthread_t thread, const char *name));

int pthread_create_ex(pthread_t *ptid_r,
		      const pthread_attr_ex_t *attr_ex,
		      void *(*start)(void *),
		      void *arg);

int pthread_getschedparam_ex(pthread_t ptid,
			     int *pol,
			     struct sched_param_ex *par);

int pthread_setschedparam_ex(pthread_t ptid,
			     int pol,
			     const struct sched_param_ex *par);

int pthread_attr_init_ex(pthread_attr_ex_t *attr_ex);

int pthread_attr_destroy_ex(pthread_attr_ex_t *attr_ex);

int pthread_attr_setschedpolicy_ex(pthread_attr_ex_t *attr_ex,
				   int policy);

int pthread_attr_getschedpolicy_ex(const pthread_attr_ex_t *attr_ex,
				   int *policy);

int pthread_attr_setschedparam_ex(pthread_attr_ex_t *attr_ex,
				  const struct sched_param_ex *param_ex);

int pthread_attr_getschedparam_ex(const pthread_attr_ex_t *attr_ex,
				  struct sched_param_ex *param_ex);

int pthread_attr_getinheritsched_ex(const pthread_attr_ex_t *attr_ex,
				    int *inheritsched);

int pthread_attr_setinheritsched_ex(pthread_attr_ex_t *attr_ex,
				    int inheritsched);

int pthread_attr_getdetachstate_ex(const pthread_attr_ex_t *attr_ex,
				   int *detachstate);

int pthread_attr_setdetachstate_ex(pthread_attr_ex_t *attr_ex,
				   int detachstate);

int pthread_attr_setdetachstate_ex(pthread_attr_ex_t *attr_ex,
				   int detachstate);

int pthread_attr_getstacksize_ex(const pthread_attr_ex_t *attr_ex,
				 size_t *stacksize);

int pthread_attr_setstacksize_ex(pthread_attr_ex_t *attr_ex,
				 size_t stacksize);

int pthread_attr_getscope_ex(const pthread_attr_ex_t *attr_ex,
			     int *scope);

int pthread_attr_setscope_ex(pthread_attr_ex_t *attr_ex,
			     int scope);

int pthread_attr_getpersonality_ex(const pthread_attr_ex_t *attr_ex,
				   int *personality);

int pthread_attr_setpersonality_ex(pthread_attr_ex_t *attr_ex,
				   int personality);
#ifdef __cplusplus
}
#endif

#endif /* !_COBALT_PTHREAD_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          /**
 * @file
 * Real-Time Driver Model for Xenomai, serial device profile header
 *
 * @note Copyright (C) 2005-2007 Jan Kiszka <jan.kiszka@web.de>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 *
 * @ingroup rtserial
 */
#ifndef _RTDM_UAPI_SERIAL_H
#define _RTDM_UAPI_SERIAL_H

#define RTSER_PROFILE_VER		3

/*!
 * @anchor RTSER_DEF_BAUD   @name RTSER_DEF_BAUD
 * Default baud rate
 * @{ */
#define RTSER_DEF_BAUD			9600
/** @} */

/*!
 * @anchor RTSER_xxx_PARITY   @name RTSER_xxx_PARITY
 * Number of parity bits
 * @{ */
#define RTSER_NO_PARITY			0x00
#define RTSER_ODD_PARITY		0x01
#define RTSER_EVEN_PARITY		0x03
#define RTSER_DEF_PARITY		RTSER_NO_PARITY
/** @} */

/*!
 * @anchor RTSER_xxx_BITS   @name RTSER_xxx_BITS
 * Number of data bits
 * @{ */
#define RTSER_5_BITS			0x00
#define RTSER_6_BITS			0x01
#define RTSER_7_BITS			0x02
#define RTSER_8_BITS			0x03
#define RTSER_DEF_BITS			RTSER_8_BITS
/** @} */

/*!
 * @anchor RTSER_xxx_STOPB   @name RTSER_xxx_STOPB
 * Number of stop bits
 * @{ */
#define RTSER_1_STOPB			0x00
/** valid only in combination with 5 data bits */
#define RTSER_1_5_STOPB			0x01
#define RTSER_2_STOPB			0x01
#define RTSER_DEF_STOPB			RTSER_1_STOPB
/** @} */

/*!
 * @anchor RTSER_xxx_HAND   @name RTSER_xxx_HAND
 * Handshake mechanisms
 * @{ */
#define RTSER_NO_HAND			0x00
#define RTSER_RTSCTS_HAND		0x01
#define RTSER_DEF_HAND			RTSER_NO_HAND
/** @} */

/*!
 * @anchor RTSER_RS485_xxx   @name RTSER_RS485_xxx
 * RS485 mode with automatic RTS handling
 * @{ */
#define RTSER_RS485_DISABLE		0x00
#define RTSER_RS485_ENABLE		0x01
#define RTSER_DEF_RS485			RTSER_RS485_DISABLE
/** @} */

/*!
 * @anchor RTSER_FIFO_xxx   @name RTSER_FIFO_xxx
 * Reception FIFO interrupt threshold
 * @{ */
#define RTSER_FIFO_DEPTH_1		0x00
#define RTSER_FIFO_DEPTH_4		0x40
#define RTSER_FIFO_DEPTH_8		0x80
#define RTSER_FIFO_DEPTH_14		0xC0
#define RTSER_DEF_FIFO_DEPTH		RTSER_FIFO_DEPTH_1
/** @} */

/*!
 * @anchor RTSER_TIMEOUT_xxx   @name RTSER_TIMEOUT_xxx
 * Special timeout values, see also @ref RTDM_TIMEOUT_xxx
 * @{ */
#define RTSER_TIMEOUT_INFINITE		RTDM_TIMEOUT_INFINITE
#define RTSER_TIMEOUT_NONE		RTDM_TIMEOUT_NONE
#define RTSER_DEF_TIMEOUT		RTDM_TIMEOUT_INFINITE
/** @} */

/*!
 * @anchor RTSER_xxx_TIMESTAMP_HISTORY   @name RTSER_xxx_TIMESTAMP_HISTORY
 * Timestamp history control
 * @{ */
#define RTSER_RX_TIMESTAMP_HISTORY	0x01
#define RTSER_DEF_TIMESTAMP_HISTORY	0x00
/** @} */

/*!
 * @anchor RTSER_EVENT_xxx   @name RTSER_EVENT_xxx
 * Events bits
 * @{ */
#define RTSER_EVENT_RXPEND		0x01
#define RTSER_EVENT_ERRPEND		0x02
#define RTSER_EVENT_MODEMHI		0x04
#define RTSER_EVENT_MODEMLO		0x08
#define RTSER_EVENT_TXEMPTY		0x10
#define RTSER_DEF_EVENT_MASK		0x00
/** @} */


/*!
 * @anchor RTSER_SET_xxx   @name RTSER_SET_xxx
 * Configuration mask bits
 * @{ */
#define RTSER_SET_BAUD			0x0001
#define RTSER_SET_PARITY		0x0002
#define RTSER_SET_DATA_BITS		0x0004
#define RTSER_SET_STOP_BITS		0x0008
#define RTSER_SET_HANDSHAKE		0x0010
#define RTSER_SET_FIFO_DEPTH		0x0020
#define RTSER_SET_TIMEOUT_RX		0x0100
#define RTSER_SET_TIMEOUT_TX		0x0200
#define RTSER_SET_TIMEOUT_EVENT		0x0400
#define RTSER_SET_TIMESTAMP_HISTORY	0x0800
#define RTSER_SET_EVENT_MASK		0x1000
#define RTSER_SET_RS485			0x2000
/** @} */


/*!
 * @anchor RTSER_LSR_xxx   @name RTSER_LSR_xxx
 * Line status bits
 * @{ */
#define RTSER_LSR_DATA			0x01
#define RTSER_LSR_OVERRUN_ERR		0x02
#define RTSER_LSR_PARITY_ERR		0x04
#define RTSER_LSR_FRAMING_ERR		0x08
#define RTSER_LSR_BREAK_IND		0x10
#define RTSER_LSR_THR_EMTPY		0x20
#define RTSER_LSR_TRANSM_EMPTY		0x40
#define RTSER_LSR_FIFO_ERR		0x80
#define RTSER_SOFT_OVERRUN_ERR		0x0100
/** @} */


/*!
 * @anchor RTSER_MSR_xxx   @name RTSER_MSR_xxx
 * Modem status bits
 * @{ */
#define RTSER_MSR_DCTS			0x01
#define RTSER_MSR_DDSR			0x02
#define RTSER_MSR_TERI			0x04
#define RTSER_MSR_DDCD			0x08
#define RTSER_MSR_CTS			0x10
#define RTSER_MSR_DSR			0x20
#define RTSER_MSR_RI			0x40
#define RTSER_MSR_DCD			0x80
/** @} */


/*!
 * @anchor RTSER_MCR_xxx   @name RTSER_MCR_xxx
 * Modem control bits
 * @{ */
#define RTSER_MCR_DTR			0x01
#define RTSER_MCR_RTS			0x02
#define RTSER_MCR_OUT1			0x04
#define RTSER_MCR_OUT2			0x08
#define RTSER_MCR_LOOP			0x10
/** @} */


/*!
 * @anchor RTSER_BREAK_xxx   @name RTSER_BREAK_xxx
 * Break control
 * @{ */
#define RTSER_BREAK_CLR			0x00
#define RTSER_BREAK_SET			0x01


/**
 * Serial device configuration
 */
typedef struct rtser_config {
	/** mask specifying valid fields, see @ref RTSER_SET_xxx */
	int		config_mask;

	/** baud rate, default @ref RTSER_DEF_BAUD */
	int		baud_rate;

	/** number of parity bits, see @ref RTSER_xxx_PARITY */
	int		parity;

	/** number of data bits, see @ref RTSER_xxx_BITS */
	int		data_bits;

	/** number of stop bits, see @ref RTSER_xxx_STOPB */
	int		stop_bits;

	/** handshake mechanisms, see @ref RTSER_xxx_HAND */
	int		handshake;

	/** reception FIFO interrupt threshold, see @ref RTSER_FIFO_xxx */
	int		fifo_depth;

	int		reserved;

	/** reception timeout, see @ref RTSER_TIMEOUT_xxx for special
	 *  values */
	nanosecs_rel_t	rx_timeout;

	/** transmission timeout, see @ref RTSER_TIMEOUT_xxx for special
	 *  values */
	nanosecs_rel_t	tx_timeout;

	/** event timeout, see @ref RTSER_TIMEOUT_xxx for special values */
	nanosecs_rel_t	event_timeout;

	/** enable timestamp history, see @ref RTSER_xxx_TIMESTAMP_HISTORY */
	int		timestamp_history;

	/** event mask to be used with @ref RTSER_RTIOC_WAIT_EVENT, see
	 *  @ref RTSER_EVENT_xxx */
	int		event_mask;

	/** enable RS485 mode, see @ref RTSER_RS485_xxx */
	int		rs485;
} rtser_config_t;

/**
 * Serial device status
 */
typedef struct rtser_status {
	/** line status register, see @ref RTSER_LSR_xxx */
	int		line_status;

	/** modem status register, see @ref RTSER_MSR_xxx */
	int		modem_status;
} rtser_status_t;

/**
 * Additional information about serial device events
 */
typedef struct rtser_event {
	/** signalled events, see @ref RTSER_EVENT_xxx */
	int		events;

	/** number of pending input characters */
	int		rx_pending;

	/** last interrupt timestamp */
	nanosecs_abs_t	last_timestamp;

	/** reception timestamp of oldest character in input queue */
	nanosecs_abs_t	rxpend_timestamp;
} rtser_event_t;


#define RTIOC_TYPE_SERIAL		RTDM_CLASS_SERIAL


/*!
 * @name Sub-Classes of RTDM_CLASS_SERIAL
 * @{ */
#define RTDM_SUBCLASS_16550A		0
/** @} */


/*!
 * @anchor SERIOCTLs @name IOCTLs
 * Serial device IOCTLs
 * @{ */

/**
 * Get serial device configuration
 *
 * @param[out] arg Pointer to configuration buffer (struct rtser_config)
 *
 * @return 0 on success, otherwise negative error code
 *
 * @coretags{task-unrestricted}
 */
#define RTSER_RTIOC_GET_CONFIG	\
	_IOR(RTIOC_TYPE_SERIAL, 0x00, struct rtser_config)

/**
 * Set serial device configuration
 *
 * @param[in] arg Pointer to configuration buffer (struct rtser_config)
 *
 * @return 0 on success, otherwise:
 *
 * - -EPERM is returned if the caller's context is invalid, see note below.
 *
 * - -ENOMEM is returned if a new history buffer for timestamps cannot be
 * allocated.
 *
 * @coretags{task-unrestricted}
 *
 * @note If rtser_config contains a valid timestamp_history and the
 * addressed device has been opened in non-real-time context, this IOCTL must
 * be issued in non-real-time context as well. Otherwise, this command will
 * fail.
 */
#define RTSER_RTIOC_SET_CONFIG	\
	_IOW(RTIOC_TYPE_SERIAL, 0x01, struct rtser_config)

/**
 * Get serial device status
 *
 * @param[out] arg Pointer to status buffer (struct rtser_status)
 *
 * @return 0 on success, otherwise negative error code
 *
 * @coretags{task-unrestricted}
 *
 * @note The error states @c RTSER_LSR_OVERRUN_ERR, @c RTSER_LSR_PARITY_ERR,
 * @c RTSER_LSR_FRAMING_ERR, and @c RTSER_SOFT_OVERRUN_ERR that may have
 * occured during previous read accesses to the device will be saved for being
 * reported via this IOCTL. Upon return from @c RTSER_RTIOC_GET_STATUS, the
 * saved state will be cleared.
 */
#define RTSER_RTIOC_GET_STATUS	\
	_IOR(RTIOC_TYPE_SERIAL, 0x02, struct rtser_status)

/**
 * Get serial device's modem contol register
 *
 * @param[out] arg Pointer to variable receiving the content (int, see
 *             @ref RTSER_MCR_xxx)
 *
 * @return 0 on success, otherwise negative error code
 *
 * @coretags{task-unrestricted}
 */
#define RTSER_RTIOC_GET_CONTROL	\
	_IOR(RTIOC_TYPE_SERIAL, 0x03, int)

/**
 * Set serial device's modem contol register
 *
 * @param[in] arg New control register content (int, see @ref RTSER_MCR_xxx)
 *
 * @return 0 on success, otherwise negative error code
 *
 * @coretags{task-unrestricted}
 */
#define RTSER_RTIOC_SET_CONTROL	\
	_IOW(RTIOC_TYPE_SERIAL, 0x04, int)

/**
 * Wait on serial device events according to previously set mask
 *
 * @param[out] arg Pointer to event information buffer (struct rtser_event)
 *
 * @return 0 on success, otherwise:
 *
 * - -EBUSY is returned if another task is already waiting on events of this
 * device.
 *
 * - -EBADF is returned if the file descriptor is invalid or the device has
 * just been closed.
 *
 * @coretags{mode-unrestricted}
 */
#define RTSER_RTIOC_WAIT_EVENT	\
	_IOR(RTIOC_TYPE_SERIAL, 0x05, struct rtser_event)
/** @} */

/**
 * Set or clear break on UART output line
 *
 * @param[in] arg @c RTSER_BREAK_SET or @c RTSER_BREAK_CLR (int)
 *
 * @return 0 on success, otherwise negative error code
 *
 * @coretags{task-unrestricted}
 *
 * @note A set break condition may also be cleared on UART line
 * reconfiguration.
 */
#define RTSER_RTIOC_BREAK_CTL	\
	_IOR(RTIOC_TYPE_SERIAL, 0x06, int)
/** @} */

/*!
 * @anchor SERutils @name RT Serial example and utility programs
 * @{ */
/** @example cross-link.c */
/** @} */

#endif /* !_RTDM_UAPI_SERIAL_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               /**
 * @file
 * This file is part of the Xenomai project.
 *
 * @author Copyright (C) 2014 Philippe Gerum <rpm@xenomai.org>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 */
#ifndef _RTDM_UAPI_UDD_H
#define _RTDM_UAPI_UDD_H

/**
 * @addtogroup rtdm_udd
 *
 * @{
 */

/**
 * @anchor udd_signotify
 * @brief UDD event notification descriptor
 *
 * This structure shall be used to pass the information required to
 * enable/disable the notification by signal upon interrupt receipt.
 *
 * If PID is zero or negative, the notification is disabled.
 * Otherwise, the Cobalt thread whose PID is given will receive the
 * Cobalt signal also mentioned, along with the count of interrupts at
 * the time of the receipt stored in siginfo.si_int. A Cobalt thread
 * must explicitly wait for notifications using the sigwaitinfo() or
 * sigtimedwait() services (no asynchronous mode available).
 */
struct udd_signotify {
	/**
	 * PID of the Cobalt thread to notify upon interrupt
	 * receipt. If @a pid is zero or negative, the notification is
	 * disabled.
	 */
	pid_t pid;
	/**
	 * Signal number to send to PID for notifying, which must be
	 * in the range [SIGRTMIN .. SIGRTMAX] inclusive. This value
	 * is not considered if @a pid is zero or negative.
	 */
	int sig;
};

/**
 * @anchor udd_ioctl_codes @name UDD_IOCTL
 * IOCTL requests
 *
 * @{
 */

/**
 * Enable the interrupt line. The UDD-class mini-driver should handle
 * this request when received through its ->ioctl() handler if
 * provided. Otherwise, the UDD core enables the interrupt line in the
 * interrupt controller before returning to the caller.
 */
#define UDD_RTIOC_IRQEN		_IO(RTDM_CLASS_UDD, 0)
/**
 * Disable the interrupt line. The UDD-class mini-driver should handle
 * this request when received through its ->ioctl() handler if
 * provided. Otherwise, the UDD core disables the interrupt line in
 * the interrupt controller before returning to the caller.
 *
 * @note The mini-driver must handle the UDD_RTIOC_IRQEN request for a
 * custom IRQ from its ->ioctl() handler, otherwise such request
 * receives -EIO from the UDD core.
 */
#define UDD_RTIOC_IRQDIS	_IO(RTDM_CLASS_UDD, 1)
/**
 * Enable/Disable signal notification upon interrupt event. A valid
 * @ref udd_signotify "notification descriptor" must be passed along
 * with this request, which is handled by the UDD core directly.
 *
 * @note The mini-driver must handle the UDD_RTIOC_IRQDIS request for
 * a custom IRQ from its ->ioctl() handler, otherwise such request
 * receives -EIO from the UDD core.
 */
#define UDD_RTIOC_IRQSIG	_IOW(RTDM_CLASS_UDD, 2, struct udd_signotify)

/** @} */
/** @} */

#endif /* !_RTDM_UAPI_UDD_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      /**
 * @file
 * Real-Time Driver Model for Xenomai, user API header.
 *
 * @note Copyright (C) 2005, 2006 Jan Kiszka <jan.kiszka@web.de>
 * @note Copyright (C) 2005 Joerg Langenberg <joerg.langenberg@gmx.net>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 * @ingroup rtdm_user_api
 */
#ifndef _RTDM_UAPI_RTDM_H
#define _RTDM_UAPI_RTDM_H

/*!
 * @addtogroup rtdm
 * @{
 */

/*!
 * @anchor rtdm_api_versioning @name API Versioning
 * @{ */
/** Common user and driver API version */
#define RTDM_API_VER			9

/** Minimum API revision compatible with the current release */
#define RTDM_API_MIN_COMPAT_VER		9
/** @} API Versioning */

/** RTDM type for representing absolute dates. Its base type is a 64 bit
 *  unsigned integer. The unit is 1 nanosecond. */
typedef uint64_t nanosecs_abs_t;

/** RTDM type for representing relative intervals. Its base type is a 64 bit
 *  signed integer. The unit is 1 nanosecond. Relative intervals can also
 *  encode the special timeouts "infinite" and "non-blocking", see
 *  @ref RTDM_TIMEOUT_xxx. */
typedef int64_t nanosecs_rel_t;

/*!
 * @anchor RTDM_TIMEOUT_xxx @name RTDM_TIMEOUT_xxx
 * Special timeout values
 * @{ */
/** Block forever. */
#define RTDM_TIMEOUT_INFINITE		0

/** Any negative timeout means non-blocking. */
#define RTDM_TIMEOUT_NONE		(-1)
/** @} RTDM_TIMEOUT_xxx */
/** @} rtdm */

/*!
 * @addtogroup rtdm_profiles
 * @{
 */

/*!
 * @anchor RTDM_CLASS_xxx   @name RTDM_CLASS_xxx
 * Device classes
 * @{ */
#define RTDM_CLASS_PARPORT		1
#define RTDM_CLASS_SERIAL		2
#define RTDM_CLASS_CAN			3
#define RTDM_CLASS_NETWORK		4
#define RTDM_CLASS_RTMAC		5
#define RTDM_CLASS_TESTING		6
#define RTDM_CLASS_RTIPC		7
#define RTDM_CLASS_COBALT		8
#define RTDM_CLASS_UDD			9
#define RTDM_CLASS_MEMORY		10
#define RTDM_CLASS_GPIO			11
#define RTDM_CLASS_SPI			12

#define RTDM_CLASS_MISC			223
#define RTDM_CLASS_EXPERIMENTAL		224
#define RTDM_CLASS_MAX			255
/** @} RTDM_CLASS_xxx */

#define RTDM_SUBCLASS_GENERIC		(-1)

#define RTIOC_TYPE_COMMON		0

/*!
 * @anchor device_naming    @name Device Naming
 * Maximum length of device names (excluding the final null character)
 * @{
 */
#define RTDM_MAX_DEVNAME_LEN		31
/** @} Device Naming */

/**
 * Device information
 */
typedef struct rtdm_device_info {
	/** Device flags, see @ref dev_flags "Device Flags" for details */
	int device_flags;

	/** Device class ID, see @ref RTDM_CLASS_xxx */
	int device_class;

	/** Device sub-class, either RTDM_SUBCLASS_GENERIC or a
	 *  RTDM_SUBCLASS_xxx definition of the related @ref rtdm_profiles
	 *  "Device Profile" */
	int device_sub_class;

	/** Supported device profile version */
	int profile_version;
} rtdm_device_info_t;

/*!
 * @anchor RTDM_PURGE_xxx_BUFFER    @name RTDM_PURGE_xxx_BUFFER
 * Flags selecting buffers to be purged
 * @{ */
#define RTDM_PURGE_RX_BUFFER		0x0001
#define RTDM_PURGE_TX_BUFFER		0x0002
/** @} RTDM_PURGE_xxx_BUFFER*/

/*!
 * @anchor common_IOCTLs    @name Common IOCTLs
 * The following IOCTLs are common to all device rtdm_profiles.
 * @{
 */

/**
 * Retrieve information about a device or socket.
 * @param[out] arg Pointer to information buffer (struct rtdm_device_info)
 */
#define RTIOC_DEVICE_INFO \
	_IOR(RTIOC_TYPE_COMMON, 0x00, struct rtdm_device_info)

/**
 * Purge internal device or socket buffers.
 * @param[in] arg Purge mask, see @ref RTDM_PURGE_xxx_BUFFER
 */
#define RTIOC_PURGE		_IOW(RTIOC_TYPE_COMMON, 0x10, int)
/** @} Common IOCTLs */
/** @} rtdm */

/* Internally used for mapping socket functions on IOCTLs */
struct _rtdm_getsockopt_args {
	int level;
	int optname;
	void *optval;
	socklen_t *optlen;
};

struct _rtdm_setsockopt_args {
	int level;
	int optname;
	const void *optval;
	socklen_t optlen;
};

struct _rtdm_getsockaddr_args {
	struct sockaddr *addr;
	socklen_t *addrlen;
};

struct _rtdm_setsockaddr_args {
	const struct sockaddr *addr;
	socklen_t addrlen;
};

#define _RTIOC_GETSOCKOPT	_IOW(RTIOC_TYPE_COMMON, 0x20,		\
				     struct _rtdm_getsockopt_args)
#define _RTIOC_SETSOCKOPT	_IOW(RTIOC_TYPE_COMMON, 0x21,		\
				     struct _rtdm_setsockopt_args)
#define _RTIOC_BIND		_IOW(RTIOC_TYPE_COMMON, 0x22,		\
				     struct _rtdm_setsockaddr_args)
#define _RTIOC_CONNECT		_IOW(RTIOC_TYPE_COMMON, 0x23,		\
				     struct _rtdm_setsockaddr_args)
#define _RTIOC_LISTEN		_IOW(RTIOC_TYPE_COMMON, 0x24,		\
				     int)
#define _RTIOC_ACCEPT		_IOW(RTIOC_TYPE_COMMON, 0x25,		\
				     struct _rtdm_getsockaddr_args)
#define _RTIOC_GETSOCKNAME	_IOW(RTIOC_TYPE_COMMON, 0x26,		\
				     struct _rtdm_getsockaddr_args)
#define _RTIOC_GETPEERNAME	_IOW(RTIOC_TYPE_COMMON, 0x27,		\
				     struct _rtdm_getsockaddr_args)
#define _RTIOC_SHUTDOWN		_IOW(RTIOC_TYPE_COMMON, 0x28,		\
				     int)

/* Internally used for mmap() */
struct _rtdm_mmap_request {
	__u64 offset;
	size_t length;
	int prot;
	int flags;
};

#endif /* !_RTDM_UAPI_RTDM_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           /**
 * @file
 * Real-Time Driver Model for RT-Socket-CAN, CAN device profile header
 *
 * @note Copyright (C) 2006 Wolfgang Grandegger <wg@grandegger.com>
 *
 * @note Copyright (C) 2005, 2006 Sebastian Smolorz
 *                         <Sebastian.Smolorz@stud.uni-hannover.de>
 *
 * This RTDM CAN device profile header is based on:
 *
 * include/linux/can.h, include/linux/socket.h, net/can/pf_can.h in
 * linux-can.patch, a CAN socket framework for Linux
 *
 * Copyright (C) 2004, 2005,
 * Robert Schwebel, Benedikt Spranger, Marc Kleine-Budde, Pengutronix
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */
#ifndef _RTDM_UAPI_CAN_H
#define _RTDM_UAPI_CAN_H

/**
 * @addtogroup rtdm_can
 * @{
 */

#define RTCAN_PROFILE_VER  2

#ifndef AF_CAN

/** CAN address family */
#define AF_CAN	29

/** CAN protocol family */
#define PF_CAN	AF_CAN

#endif

/** CAN socket levels
 *
 *  Used for @ref Sockopts for the particular protocols.
 */
#define SOL_CAN_RAW  103

/** Type of CAN id (see @ref CAN_xxx_MASK and @ref CAN_xxx_FLAG) */
typedef uint32_t can_id_t;
typedef uint32_t canid_t;

/** Type of CAN error mask */
typedef can_id_t can_err_mask_t;

/*!
 * @anchor CAN_xxx_MASK @name CAN ID masks
 * Bit masks for masking CAN IDs
 * @{ */

/** Bit mask for extended CAN IDs */
#define CAN_EFF_MASK  0x1FFFFFFF

/** Bit mask for standard CAN IDs */
#define CAN_SFF_MASK  0x000007FF

/** @} */

/*!
 * @anchor CAN_xxx_FLAG @name CAN ID flags
 * Flags within a CAN ID indicating special CAN frame attributes
 * @{ */
/** Extended frame */
#define CAN_EFF_FLAG  0x80000000
/** Remote transmission frame */
#define CAN_RTR_FLAG  0x40000000
/** Error frame (see @ref Errors), not valid in struct can_filter */
#define CAN_ERR_FLAG  0x20000000
/** Invert CAN filter definition, only valid in struct can_filter */
#define CAN_INV_FILTER CAN_ERR_FLAG

/** @} */

/*!
 * @anchor CAN_PROTO @name Particular CAN protocols
 * Possible protocols for the PF_CAN protocol family
 *
 * Currently only the RAW protocol is supported.
 * @{ */
/** Raw protocol of @c PF_CAN, applicable to socket type @c SOCK_RAW */
#define CAN_RAW  1
/** @} */

#define CAN_BAUDRATE_UNKNOWN       ((uint32_t)-1)
#define CAN_BAUDRATE_UNCONFIGURED  0

/**
 * Baudrate definition in bits per second
 */
typedef uint32_t can_baudrate_t;

/**
 * Supported CAN bit-time types
 */
enum CAN_BITTIME_TYPE {
	/** Standard bit-time definition according to Bosch */
	CAN_BITTIME_STD,
	/** Hardware-specific BTR bit-time definition */
	CAN_BITTIME_BTR
};

/**
 * See @ref CAN_BITTIME_TYPE
 */
typedef enum CAN_BITTIME_TYPE can_bittime_type_t;

/**
 * Standard bit-time parameters according to Bosch
 */
struct can_bittime_std {
	uint32_t brp;		/**< Baud rate prescaler */
	uint8_t prop_seg;	/**< from 1 to 8 */
	uint8_t phase_seg1;	/**< from 1 to 8 */
	uint8_t phase_seg2;	/**< from 1 to 8 */
	uint8_t sjw:7;		/**< from 1 to 4 */
	uint8_t sam:1;		/**< 1 - enable triple sampling */
};

/**
 * Hardware-specific BTR bit-times
 */
struct can_bittime_btr {

	uint8_t btr0;		/**< Bus timing register 0 */
	uint8_t btr1;		/**< Bus timing register 1 */
};

/**
 * Custom CAN bit-time definition
 */
struct can_bittime {
	/** Type of bit-time definition */
	can_bittime_type_t type;

	union {
		/** Standard bit-time */
		struct can_bittime_std std;
		/** Hardware-spcific BTR bit-time */
		struct can_bittime_btr btr;
	};
};

/*!
 * @anchor CAN_MODE @name CAN operation modes
 * Modes into which CAN controllers can be set
 * @{ */
enum CAN_MODE {
	/*! Set controller in Stop mode (no reception / transmission possible) */
	CAN_MODE_STOP = 0,

	/*! Set controller into normal operation. @n
	 *  Coming from stopped mode or bus off, the controller begins with no
	 *  errors in @ref CAN_STATE_ACTIVE. */
	CAN_MODE_START,

	/*! Set controller into Sleep mode. @n
	 *  This is only possible if the controller is not stopped or bus-off. @n
	 *  Notice that sleep mode will only be entered when there is no bus
	 *  activity. If the controller detects bus activity while "sleeping"
	 *  it will go into operating mode again. @n
	 *  To actively leave sleep mode again trigger @c CAN_MODE_START. */
	CAN_MODE_SLEEP
};
/** @} */

/** See @ref CAN_MODE */
typedef enum CAN_MODE can_mode_t;

/*!
 * @anchor CAN_CTRLMODE @name CAN controller modes
 * Special CAN controllers modes, which can be or'ed together.
 *
 * @note These modes are hardware-dependent. Please consult the hardware
 * manual of the CAN controller for more detailed information.
 *
 * @{ */

/*! Listen-Only mode
 *
 *  In this mode the CAN controller would give no acknowledge to the CAN-bus,
 *  even if a message is received successfully and messages would not be
 *  transmitted. This mode might be useful for bus-monitoring, hot-plugging
 *  or throughput analysis. */
#define CAN_CTRLMODE_LISTENONLY 0x1

/*! Loopback mode
 *
 * In this mode the CAN controller does an internal loop-back, a message is
 * transmitted and simultaneously received. That mode can be used for self
 * test operation. */
#define CAN_CTRLMODE_LOOPBACK   0x2

/*! Triple sampling mode
 *
 * In this mode the CAN controller uses Triple sampling. */
#define CAN_CTRLMODE_3_SAMPLES  0x4

/** @} */

/** See @ref CAN_CTRLMODE */
typedef int can_ctrlmode_t;

/*!
 * @anchor CAN_STATE @name CAN controller states
 * States a CAN controller can be in.
 * @{ */
enum CAN_STATE {
	/** CAN controller is error active */
	CAN_STATE_ERROR_ACTIVE = 0,
	/** CAN controller is active */
	CAN_STATE_ACTIVE = 0,

	/** CAN controller is error active, warning level is reached */
	CAN_STATE_ERROR_WARNING = 1,
	/** CAN controller is error active, warning level is reached */
	CAN_STATE_BUS_WARNING = 1,

	/** CAN controller is error passive */
	CAN_STATE_ERROR_PASSIVE = 2,
	/** CAN controller is error passive */
	CAN_STATE_BUS_PASSIVE = 2,

	/** CAN controller went into Bus Off */
	CAN_STATE_BUS_OFF,

	/** CAN controller is scanning to get the baudrate */
	CAN_STATE_SCANNING_BAUDRATE,

	/** CAN controller is in stopped mode */
	CAN_STATE_STOPPED,

	/** CAN controller is in Sleep mode */
	CAN_STATE_SLEEPING,
};
/** @} */

/** See @ref CAN_STATE */
typedef enum CAN_STATE can_state_t;

#define CAN_STATE_OPERATING(state) ((state) < CAN_STATE_BUS_OFF)

/**
 * Filter for reception of CAN messages.
 *
 * This filter works as follows:
 * A received CAN ID is AND'ed bitwise with @c can_mask and then compared to
 * @c can_id. This also includes the @ref CAN_EFF_FLAG and @ref CAN_RTR_FLAG
 * of @ref CAN_xxx_FLAG. If this comparison is true, the message will be
 * received by the socket. The logic can be inverted with the @c can_id flag
 * @ref CAN_INV_FILTER :
 *
 * @code
 * if (can_id & CAN_INV_FILTER) {
 *    if ((received_can_id & can_mask) != (can_id & ~CAN_INV_FILTER))
 *       accept-message;
 * } else {
 *    if ((received_can_id & can_mask) == can_id)
 *       accept-message;
 * }
 * @endcode
 *
 * Multiple filters can be arranged in a filter list and set with
 * @ref Sockopts. If one of these filters matches a CAN ID upon reception
 * of a CAN frame, this frame is accepted.
 *
 */
typedef struct can_filter {
	/** CAN ID which must match with incoming IDs after passing the mask.
	 *  The filter logic can be inverted with the flag @ref CAN_INV_FILTER. */
	uint32_t can_id;

	/** Mask which is applied to incoming IDs. See @ref CAN_xxx_MASK
	 *  "CAN ID masks" if exactly one CAN ID should come through. */
	uint32_t can_mask;
} can_filter_t;

/**
 * Socket address structure for the CAN address family
 */
struct sockaddr_can {
	/** CAN address family, must be @c AF_CAN */
	sa_family_t can_family;

	/** Interface index of CAN controller. See @ref SIOCGIFINDEX. */
	int can_ifindex;
};

/**
 * Raw CAN frame
 *
 * Central structure for receiving and sending CAN frames.
 */
typedef struct can_frame {
	/** CAN ID of the frame
	 *
	 *  See @ref CAN_xxx_FLAG "CAN ID flags" for special bits.
	 */
	can_id_t can_id;

	/** Size of the payload in bytes */
	uint8_t can_dlc;

	/** Payload data bytes */
	uint8_t data[8] __attribute__ ((aligned(8)));
} can_frame_t;

/**
 * CAN interface request descriptor
 *
 * Parameter block for submitting CAN control requests.
 */
struct can_ifreq {
	union {
		char	ifrn_name[IFNAMSIZ];
	} ifr_ifrn;
	
	union {
		struct can_bittime bittime;
		can_baudrate_t baudrate;
		can_ctrlmode_t ctrlmode;
		can_mode_t mode;
		can_state_t state;
		int ifru_ivalue;
	} ifr_ifru;
};

/*!
 * @anchor RTCAN_TIMESTAMPS   @name Timestamp switches
 * Arguments to pass to @ref RTCAN_RTIOC_TAKE_TIMESTAMP
 * @{ */
#define RTCAN_TAKE_NO_TIMESTAMPS	0  /**< Switch off taking timestamps */
#define RTCAN_TAKE_TIMESTAMPS		1  /**< Do take timestamps */
/** @} */

#define RTIOC_TYPE_CAN  RTDM_CLASS_CAN

/*!
 * @anchor Rawsockopts @name RAW socket options
 * Setting and getting CAN RAW socket options.
 * @{ */

/**
 * CAN filter definition
 *
 * A CAN raw filter list with elements of struct can_filter can be installed
 * with @c setsockopt. This list is used upon reception of CAN frames to
 * decide whether the bound socket will receive a frame. An empty filter list
 * can also be defined using optlen = 0, which is recommanded for write-only
 * sockets.
 * @n
 * If the socket was already bound with @ref Bind, the old filter list
 * gets replaced with the new one. Be aware that already received, but
 * not read out CAN frames may stay in the socket buffer.
 * @n
 * @n
 * @param [in] level @b SOL_CAN_RAW
 *
 * @param [in] optname @b CAN_RAW_FILTER
 *
 * @param [in] optval Pointer to array of struct can_filter.
 *
 * @param [in] optlen Size of filter list: count * sizeof( struct can_filter).
 * @n
 * @coretags{task-unrestricted}
 * @n
 * Specific return values:
 * - -EFAULT (It was not possible to access user space memory area at the
 *            specified address.)
 * - -ENOMEM (Not enough memory to fulfill the operation)
 * - -EINVAL (Invalid length "optlen")
 * - -ENOSPC (No space to store filter list, check RT-Socket-CAN kernel
 *            parameters)
 * .
 */
#define CAN_RAW_FILTER		0x1

/**
 * CAN error mask
 *
 * A CAN error mask (see @ref Errors) can be set with @c setsockopt. This
 * mask is then used to decide if error frames are delivered to this socket
 * in case of error condidtions. The error frames are marked with the
 * @ref CAN_ERR_FLAG of @ref CAN_xxx_FLAG and must be handled by the
 * application properly. A detailed description of the errors can be
 * found in the @c can_id and the @c data fields of struct can_frame
 * (see @ref Errors for futher details).
 *
 * @n
 * @param [in] level @b SOL_CAN_RAW
 *
 * @param [in] optname @b CAN_RAW_ERR_FILTER
 *
 * @param [in] optval Pointer to error mask of type can_err_mask_t.
 *
 * @param [in] optlen Size of error mask: sizeof(can_err_mask_t).
 *
 * @coretags{task-unrestricted}
 * @n
 * Specific return values:
 * - -EFAULT (It was not possible to access user space memory area at the
 *            specified address.)
 * - -EINVAL (Invalid length "optlen")
 * .
 */
#define CAN_RAW_ERR_FILTER	0x2

/**
 * CAN TX loopback
 *
 * The TX loopback to other local sockets can be selected with this
 * @c setsockopt.
 *
 * @note The TX loopback feature must be enabled in the kernel and then
 * the loopback to other local TX sockets is enabled by default.
 *
 * @n
 * @param [in] level @b SOL_CAN_RAW
 *
 * @param [in] optname @b CAN_RAW_LOOPBACK
 *
 * @param [in] optval Pointer to integer value.
 *
 * @param [in] optlen Size of int: sizeof(int).
 *
 * @coretags{task-unrestricted}
 * @n
 * Specific return values:
 * - -EFAULT (It was not possible to access user space memory area at the
 *            specified address.)
 * - -EINVAL (Invalid length "optlen")
 * - -EOPNOTSUPP (not supported, check RT-Socket-CAN kernel parameters).
 */
#define CAN_RAW_LOOPBACK	0x3

/**
 * CAN receive own messages
 *
 * Not supported by RT-Socket-CAN, but defined for compatibility with
 * Socket-CAN.
 */
#define CAN_RAW_RECV_OWN_MSGS   0x4

/** @} */

/*!
 * @anchor CANIOCTLs @name IOCTLs
 * CAN device IOCTLs
 *
 * @deprecated Passing <TT>struct ifreq<TT> as a request descriptor
 * for CAN IOCTLs is still accepted for backward compatibility,
 * however it is recommended to switch to <TT>struct can_ifreq<TT> at
 * the first opportunity.
 *
 * @{ */

/**
 * Get CAN interface index by name
 *
 * @param [in,out] arg Pointer to interface request structure buffer
 *                     (<TT>struct can_ifreq</TT>). If
 *                     <TT>ifr_name</TT> holds a valid CAN interface
 *                     name <TT>ifr_ifindex</TT> will be filled with
 *                     the corresponding interface index.
 *
 * @return 0 on success, otherwise:
 * - -EFAULT: It was not possible to access user space memory area at the
 *            specified address.
 * - -ENODEV: No device with specified name exists.
 *
 * @coretags{task-unrestricted}
 */
#ifdef DOXYGEN_CPP /* For Doxygen only, already defined by kernel headers */
#define SIOCGIFINDEX defined_by_kernel_header_file
#endif

/**
 * Set baud rate
 *
 * The baudrate must be specified in bits per second. The driver will
 * try to calculate resonable CAN bit-timing parameters. You can use
 * @ref SIOCSCANCUSTOMBITTIME to set custom bit-timing.
 *
 * @param [in] arg Pointer to interface request structure buffer
 *                 (<TT>struct can_ifreq</TT>).
 *                 <TT>ifr_name</TT> must hold a valid CAN interface name,
 *                 <TT>ifr_ifru</TT> must be filled with an instance of
 *                 @ref can_baudrate_t.
 *
 * @return 0 on success, otherwise:
 * - -EFAULT: It was not possible to access user space memory area at the
 *            specified address.
 * - -ENODEV: No device with specified name exists.
 * - -EINVAL: No valid baud rate, see @ref can_baudrate_t.
 * - -EDOM  : Baud rate not possible.
 * - -EAGAIN: Request could not be successully fulfilled. Try again.
 *
 * @coretags{task-unrestricted, might-switch}
 *
 * @note Setting the baud rate is a configuration task. It should
 * be done deliberately or otherwise CAN messages will likely be lost.
 */
#define SIOCSCANBAUDRATE	_IOW(RTIOC_TYPE_CAN, 0x01, struct can_ifreq)

/**
 * Get baud rate
 *
 * @param [in,out] arg Pointer to interface request structure buffer
 *                    (<TT>struct can_ifreq</TT>).
 *                    <TT>ifr_name</TT> must hold a valid CAN interface name,
 *                    <TT>ifr_ifru</TT> will be filled with an instance of
 *                    @ref can_baudrate_t.
 *
 * @return 0 on success, otherwise:
 * - -EFAULT: It was not possible to access user space memory area at the
 *            specified address.
 * - -ENODEV: No device with specified name exists.
 * - -EINVAL: No baud rate was set yet.
 *
 * @coretags{task-unrestricted}
 */
#define SIOCGCANBAUDRATE	_IOWR(RTIOC_TYPE_CAN, 0x02, struct can_ifreq)

/**
 * Set custom bit time parameter
 *
 * Custem-bit time could be defined in various formats (see
 * struct can_bittime).
 *
 * @param [in] arg Pointer to interface request structure buffer
 *                 (<TT>struct can_ifreq</TT>).
 *                 <TT>ifr_name</TT> must hold a valid CAN interface name,
 *                 <TT>ifr_ifru</TT> must be filled with an instance of
 *                 struct can_bittime.
 *
 * @return 0 on success, otherwise:
 * - -EFAULT: It was not possible to access user space memory area at the
 *            specified address.
 * - -ENODEV: No device with specified name exists.
 * - -EINVAL: No valid baud rate, see @ref can_baudrate_t.
 * - -EAGAIN: Request could not be successully fulfilled. Try again.
 *
 * @coretags{task-unrestricted, might-switch}
 *
 * @note Setting the bit-time is a configuration task. It should
 * be done deliberately or otherwise CAN messages will likely be lost.
 */
#define SIOCSCANCUSTOMBITTIME	_IOW(RTIOC_TYPE_CAN, 0x03, struct can_ifreq)

/**
 * Get custom bit-time parameters
 *
 * @param [in,out] arg Pointer to interface request structure buffer
 *                    (<TT>struct can_ifreq</TT>).
 *                    <TT>ifr_name</TT> must hold a valid CAN interface name,
 *                    <TT>ifr_ifru</TT> will be filled with an instance of
 *                    struct can_bittime.
 *
 * @return 0 on success, otherwise:
 * - -EFAULT: It was not possible to access user space memory area at the
 *            specified address.
 * - -ENODEV: No device with specified name exists.
 * - -EINVAL: No baud rate was set yet.
 *
 * @coretags{task-unrestricted}
 */
#define SIOCGCANCUSTOMBITTIME	_IOWR(RTIOC_TYPE_CAN, 0x04, struct can_ifreq)

/**
 * Set operation mode of CAN controller
 *
 * See @ref CAN_MODE "CAN controller modes" for available modes.
 *
 * @param [in] arg Pointer to interface request structure buffer
 *                 (<TT>struct can_ifreq</TT>).
 *                 <TT>ifr_name</TT> must hold a valid CAN interface name,
 *                 <TT>ifr_ifru</TT> must be filled with an instance of
 *                 @ref can_mode_t.
 *
 * @return 0 on success, otherwise:
 * - -EFAULT: It was not possible to access user space memory area at the
 *            specified address.
 * - -ENODEV: No device with specified name exists.
 * - -EAGAIN: (@ref CAN_MODE_START, @ref CAN_MODE_STOP) Could not successfully
 *            set mode, hardware is busy. Try again.
 * - -EINVAL: (@ref CAN_MODE_START) Cannot start controller,
 *            set baud rate first.
 * - -ENETDOWN: (@ref CAN_MODE_SLEEP) Cannot go into sleep mode because
		controller is stopped or bus off.
 * - -EOPNOTSUPP: unknown mode
 *
 * @coretags{task-unrestricted, might-switch}
 *
 * @note Setting a CAN controller into normal operation after a bus-off can
 * take some time (128 occurrences of 11 consecutive recessive bits).
 * In such a case, although this IOCTL will return immediately with success
 * and @ref SIOCGCANSTATE will report @ref CAN_STATE_ACTIVE,
 * bus-off recovery may still be in progress. @n
 * If a controller is bus-off, setting it into stop mode will return no error
 * but the controller remains bus-off.
 */
#define SIOCSCANMODE		_IOW(RTIOC_TYPE_CAN, 0x05, struct can_ifreq)

/**
 * Get current state of CAN controller
 *
 * States are divided into main states and additional error indicators. A CAN
 * controller is always in exactly one main state. CAN bus errors are
 * registered by the CAN hardware and collected by the driver. There is one
 * error indicator (bit) per error type. If this IOCTL is triggered the error
 * types which occured since the last call of this IOCTL are reported and
 * thereafter the error indicators are cleared. See also
 * @ref CAN_STATE "CAN controller states".
 *
 * @param [in,out] arg Pointer to interface request structure buffer
 *                    (<TT>struct can_ifreq</TT>).
 *                    <TT>ifr_name</TT> must hold a valid CAN interface name,
 *                    <TT>ifr_ifru</TT> will be filled with an instance of
 *                    @ref can_mode_t.
 *
 * @return 0 on success, otherwise:
 * - -EFAULT: It was not possible to access user space memory area at the
 *            specified address.
 * - -ENODEV: No device with specified name exists.
 *
 * @coretags{task-unrestricted, might-switch}
 */
#define SIOCGCANSTATE		_IOWR(RTIOC_TYPE_CAN, 0x06, struct can_ifreq)

/**
 * Set special controller modes
 *
 * Various special controller modes could be or'ed together (see
 * @ref CAN_CTRLMODE for further information).
 *
 * @param [in] arg Pointer to interface request structure buffer
 *                 (<TT>struct can_ifreq</TT>).
 *                 <TT>ifr_name</TT> must hold a valid CAN interface name,
 *                 <TT>ifr_ifru</TT> must be filled with an instance of
 *                 @ref can_ctrlmode_t.
 *
 * @return 0 on success, otherwise:
 * - -EFAULT: It was not possible to access user space memory area at the
 *            specified address.
 * - -ENODEV: No device with specified name exists.
 * - -EINVAL: No valid baud rate, see @ref can_baudrate_t.
 * - -EAGAIN: Request could not be successully fulfilled. Try again.
 *
 * @coretags{task-unrestricted, might-switch}
 *
 * @note Setting special controller modes is a configuration task. It should
 * be done deliberately or otherwise CAN messages will likely be lost.
 */
#define SIOCSCANCTRLMODE	_IOW(RTIOC_TYPE_CAN, 0x07, struct can_ifreq)

/**
 * Get special controller modes
 *
 *
 * @param [in] arg Pointer to interface request structure buffer
 *                 (<TT>struct can_ifreq</TT>).
 *                 <TT>ifr_name</TT> must hold a valid CAN interface name,
 *                 <TT>ifr_ifru</TT> must be filled with an instance of
 *                 @ref can_ctrlmode_t.
 *
 * @return 0 on success, otherwise:
 * - -EFAULT: It was not possible to access user space memory area at the
 *            specified address.
 * - -ENODEV: No device with specified name exists.
 * - -EINVAL: No baud rate was set yet.
 *
 * @coretags{task-unrestricted, might-switch}
 */
#define SIOCGCANCTRLMODE	_IOWR(RTIOC_TYPE_CAN, 0x08, struct can_ifreq)

/**
 * Enable or disable storing a high precision timestamp upon reception of
 * a CAN frame.
 *
 * A newly created socket takes no timestamps by default.
 *
 * @param [in] arg int variable, see @ref RTCAN_TIMESTAMPS "Timestamp switches"
 *
 * @return 0 on success.
 *
 * @coretags{task-unrestricted}
 *
 * @note Activating taking timestamps only has an effect on newly received
 * CAN messages from the bus. Frames that already are in the socket buffer do
 * not have timestamps if it was deactivated before. See @ref Recv "Receive"
 * for more details.
 */
#define RTCAN_RTIOC_TAKE_TIMESTAMP _IOW(RTIOC_TYPE_CAN, 0x09, int)

/**
 * Specify a reception timeout for a socket
 *
 * Defines a timeout for all receive operations via a
 * socket which will take effect when one of the @ref Recv "receive functions"
 * is called without the @c MSG_DONTWAIT flag set.
 *
 * The default value for a newly created socket is an infinite timeout.
 *
 * @note The setting of the timeout value is not done atomically to avoid
 * locks. Please set the value before receiving messages from the socket.
 *
 * @param [in] arg Pointer to @ref nanosecs_rel_t variable. The value is
 *                interpreted as relative timeout in nanoseconds in case
 *                of a positive value.
 *                See @ref RTDM_TIMEOUT_xxx "Timeouts" for special timeouts.
 *
 * @return 0 on success, otherwise:
 * - -EFAULT: It was not possible to access user space memory area at the
 *            specified address.
 *
 * @coretags{task-unrestricted}
 */
#define RTCAN_RTIOC_RCV_TIMEOUT	_IOW(RTIOC_TYPE_CAN, 0x0A, nanosecs_rel_t)

/**
 * Specify a transmission timeout for a socket
 *
 * Defines a timeout for all send operations via a
 * socket which will take effect when one of the @ref Send "send functions"
 * is called without the @c MSG_DONTWAIT flag set.
 *
 * The default value for a newly created socket is an infinite timeout.
 *
 * @note The setting of the timeout value is not done atomically to avoid
 * locks. Please set the value before sending messages to the socket.
 *
 * @param [in] arg Pointer to @ref nanosecs_rel_t variable. The value is
 *                interpreted as relative timeout in nanoseconds in case
 *                of a positive value.
 *                See @ref RTDM_TIMEOUT_xxx "Timeouts" for special timeouts.
 *
 * @return 0 on success, otherwise:
 * - -EFAULT: It was not possible to access user space memory area at the
 *            specified address.
 *
 * @coretags{task-unrestricted}
 */
#define RTCAN_RTIOC_SND_TIMEOUT	_IOW(RTIOC_TYPE_CAN, 0x0B, nanosecs_rel_t)
/** @} */

#define CAN_ERR_DLC  8	/* dlc for error frames */

/*!
 * @anchor Errors @name Error mask
 * Error class (mask) in @c can_id field of struct can_frame to
 * be used with @ref CAN_RAW_ERR_FILTER.
 *
 * @b Note: Error reporting is hardware dependent and most CAN controllers
 * report less detailed error conditions than the SJA1000.
 *
 * @b Note: In case of a bus-off error condition (@ref CAN_ERR_BUSOFF), the
 * CAN controller is @b not restarted automatically. It is the application's
 * responsibility to react appropriately, e.g. calling @ref CAN_MODE_START.
 *
 * @b Note: Bus error interrupts (@ref CAN_ERR_BUSERROR) are enabled when an
 * application is calling a @ref Recv function on a socket listening
 * on bus errors (using @ref CAN_RAW_ERR_FILTER). After one bus error has
 * occured, the interrupt will be disabled to allow the application time for
 * error processing and to efficiently avoid bus error interrupt flooding.
 * @{ */

/** TX timeout (netdevice driver) */
#define CAN_ERR_TX_TIMEOUT	0x00000001U

/** Lost arbitration (see @ref Error0 "data[0]") */
#define CAN_ERR_LOSTARB		0x00000002U

/** Controller problems (see @ref Error1 "data[1]") */
#define CAN_ERR_CRTL		0x00000004U

/** Protocol violations (see @ref Error2 "data[2]",
			     @ref Error3 "data[3]") */
#define CAN_ERR_PROT		0x00000008U

/** Transceiver status (see @ref Error4 "data[4]")    */
#define CAN_ERR_TRX		0x00000010U

/** Received no ACK on transmission */
#define CAN_ERR_ACK		0x00000020U

/** Bus off */
#define CAN_ERR_BUSOFF		0x00000040U

/** Bus error (may flood!) */
#define CAN_ERR_BUSERROR	0x00000080U

/** Controller restarted */
#define CAN_ERR_RESTARTED	0x00000100U

/** Omit EFF, RTR, ERR flags */
#define CAN_ERR_MASK		0x1FFFFFFFU

/** @} */

/*!
 * @anchor Error0 @name Arbitration lost error
 * Error in the data[0] field of struct can_frame.
 * @{ */
/* arbitration lost in bit ... / data[0] */
#define CAN_ERR_LOSTARB_UNSPEC	0x00 /**< unspecified */
				     /**< else bit number in bitstream */
/** @} */

/*!
 * @anchor Error1 @name Controller problems
 * Error in the data[1] field of struct can_frame.
 * @{ */
/* error status of CAN-controller / data[1] */
#define CAN_ERR_CRTL_UNSPEC	 0x00 /**< unspecified */
#define CAN_ERR_CRTL_RX_OVERFLOW 0x01 /**< RX buffer overflow */
#define CAN_ERR_CRTL_TX_OVERFLOW 0x02 /**< TX buffer overflow */
#define CAN_ERR_CRTL_RX_WARNING	 0x04 /**< reached warning level for RX errors */
#define CAN_ERR_CRTL_TX_WARNING	 0x08 /**< reached warning level for TX errors */
#define CAN_ERR_CRTL_RX_PASSIVE	 0x10 /**< reached passive level for RX errors */
#define CAN_ERR_CRTL_TX_PASSIVE	 0x20 /**< reached passive level for TX errors */
/** @} */

/*!
 * @anchor Error2 @name Protocol error type
 * Error in the data[2] field of struct can_frame.
 * @{ */
/* error in CAN protocol (type) / data[2] */
#define CAN_ERR_PROT_UNSPEC	0x00 /**< unspecified */
#define CAN_ERR_PROT_BIT	0x01 /**< single bit error */
#define CAN_ERR_PROT_FORM	0x02 /**< frame format error */
#define CAN_ERR_PROT_STUFF	0x04 /**< bit stuffing error */
#define CAN_ERR_PROT_BIT0	0x08 /**< unable to send dominant bit */
#define CAN_ERR_PROT_BIT1	0x10 /**< unable to send recessive bit */
#define CAN_ERR_PROT_OVERLOAD	0x20 /**< bus overload */
#define CAN_ERR_PROT_ACTIVE	0x40 /**< active error announcement */
#define CAN_ERR_PROT_TX		0x80 /**< error occured on transmission */
/** @} */

/*!
 * @anchor Error3 @name Protocol error location
 * Error in the data[3] field of struct can_frame.
 * @{ */
/* error in CAN protocol (location) / data[3] */
#define CAN_ERR_PROT_LOC_UNSPEC	 0x00 /**< unspecified */
#define CAN_ERR_PROT_LOC_SOF	 0x03 /**< start of frame */
#define CAN_ERR_PROT_LOC_ID28_21 0x02 /**< ID bits 28 - 21 (SFF: 10 - 3) */
#define CAN_ERR_PROT_LOC_ID20_18 0x06 /**< ID bits 20 - 18 (SFF: 2 - 0 )*/
#define CAN_ERR_PROT_LOC_SRTR	 0x04 /**< substitute RTR (SFF: RTR) */
#define CAN_ERR_PROT_LOC_IDE	 0x05 /**< identifier extension */
#define CAN_ERR_PROT_LOC_ID17_13 0x07 /**< ID bits 17-13 */
#define CAN_ERR_PROT_LOC_ID12_05 0x0F /**< ID bits 12-5 */
#define CAN_ERR_PROT_LOC_ID04_00 0x0E /**< ID bits 4-0 */
#define CAN_ERR_PROT_LOC_RTR	 0x0C /**< RTR */
#define CAN_ERR_PROT_LOC_RES1	 0x0D /**< reserved bit 1 */
#define CAN_ERR_PROT_LOC_RES0	 0x09 /**< reserved bit 0 */
#define CAN_ERR_PROT_LOC_DLC	 0x0B /**< data length code */
#define CAN_ERR_PROT_LOC_DATA	 0x0A /**< data section */
#define CAN_ERR_PROT_LOC_CRC_SEQ 0x08 /**< CRC sequence */
#define CAN_ERR_PROT_LOC_CRC_DEL 0x18 /**< CRC delimiter */
#define CAN_ERR_PROT_LOC_ACK	 0x19 /**< ACK slot */
#define CAN_ERR_PROT_LOC_ACK_DEL 0x1B /**< ACK delimiter */
#define CAN_ERR_PROT_LOC_EOF	 0x1A /**< end of frame */
#define CAN_ERR_PROT_LOC_INTERM	 0x12 /**< intermission */
/** @} */

/*!
 * @anchor Error4 @name Protocol error location
 * Error in the data[4] field of struct can_frame.
 * @{ */
/* error status of CAN-transceiver / data[4] */
/*                                               CANH CANL */
#define CAN_ERR_TRX_UNSPEC		0x00 /**< 0000 0000 */
#define CAN_ERR_TRX_CANH_NO_WIRE	0x04 /**< 0000 0100 */
#define CAN_ERR_TRX_CANH_SHORT_TO_BAT	0x05 /**< 0000 0101 */
#define CAN_ERR_TRX_CANH_SHORT_TO_VCC	0x06 /**< 0000 0110 */
#define CAN_ERR_TRX_CANH_SHORT_TO_GND	0x07 /**< 0000 0111 */
#define CAN_ERR_TRX_CANL_NO_WIRE	0x40 /**< 0100 0000 */
#define CAN_ERR_TRX_CANL_SHORT_TO_BAT	0x50 /**< 0101 0000 */
#define CAN_ERR_TRX_CANL_SHORT_TO_VCC	0x60 /**< 0110 0000 */
#define CAN_ERR_TRX_CANL_SHORT_TO_GND	0x70 /**< 0111 0000 */
#define CAN_ERR_TRX_CANL_SHORT_TO_CANH	0x80 /**< 1000 0000 */
/** @} */

/** @} */

#endif /* !_RTDM_UAPI_CAN_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                /*
 * mac80211 <-> driver interface
 *
 * Copyright 2002-2005, Devicescape Software, Inc.
 * Copyright 2006-2007	Jiri Benc <jbenc@suse.cz>
 * Copyright 2007-2010	Johannes Berg <johannes@sipsolutions.net>
 * Copyright 2013-2014  Intel Mobile Communications GmbH
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef MAC80211_H
#define MAC80211_H

#include <linux/bug.h>
#include <linux/kernel.h>
#include <linux/if_ether.h>
#include <linux/skbuff.h>
#include <linux/ieee80211.h>
#include <net/cfg80211.h>
#include <asm/unaligned.h>

/**
 * DOC: Introduction
 *
 * mac80211 is the Linux stack for 802.11 hardware that implements
 * only partial functionality in hard- or firmware. This document
 * defines the interface between mac80211 and low-level hardware
 * drivers.
 */

/**
 * DOC: Calling mac80211 from interrupts
 *
 * Only ieee80211_tx_status_irqsafe() and ieee80211_rx_irqsafe() can be
 * called in hardware interrupt context. The low-level driver must not call any
 * other functions in hardware interrupt context. If there is a need for such
 * call, the low-level driver should first ACK the interrupt and perform the
 * IEEE 802.11 code call after this, e.g. from a scheduled workqueue or even
 * tasklet function.
 *
 * NOTE: If the driver opts to use the _irqsafe() functions, it may not also
 *	 use the non-IRQ-safe functions!
 */

/**
 * DOC: Warning
 *
 * If you're reading this document and not the header file itself, it will
 * be incomplete because not all documentation has been converted yet.
 */

/**
 * DOC: Frame format
 *
 * As a general rule, when frames are passed between mac80211 and the driver,
 * they start with the IEEE 802.11 header and include the same octets that are
 * sent over the air except for the FCS which should be calculated by the
 * hardware.
 *
 * There are, however, various exceptions to this rule for advanced features:
 *
 * The first exception is for hardware encryption and decryption offload
 * where the IV/ICV may or may not be generated in hardware.
 *
 * Secondly, when the hardware handles fragmentation, the frame handed to
 * the driver from mac80211 is the MSDU, not the MPDU.
 */

/**
 * DOC: mac80211 workqueue
 *
 * mac80211 provides its own workqueue for drivers and internal mac80211 use.
 * The workqueue is a single threaded workqueue and can only be accessed by
 * helpers for sanity checking. Drivers must ensure all work added onto the
 * mac80211 workqueue should be cancelled on the driver stop() callback.
 *
 * mac80211 will flushed the workqueue upon interface removal and during
 * suspend.
 *
 * All work performed on the mac80211 workqueue must not acquire the RTNL lock.
 *
 */

/**
 * DOC: mac80211 software tx queueing
 *
 * mac80211 provides an optional intermediate queueing implementation designed
 * to allow the driver to keep hardware queues short and provide some fairness
 * between different stations/interfaces.
 * In this model, the driver pulls data frames from the mac80211 queue instead
 * of letting mac80211 push them via drv_tx().
 * Other frames (e.g. control or management) are still pushed using drv_tx().
 *
 * Drivers indicate that they use this model by implementing the .wake_tx_queue
 * driver operation.
 *
 * Intermediate queues (struct ieee80211_txq) are kept per-sta per-tid, with a
 * single per-vif queue for multicast data frames.
 *
 * The driver is expected to initialize its private per-queue data for stations
 * and interfaces in the .add_interface and .sta_add ops.
 *
 * The driver can't access the queue directly. To dequeue a frame, it calls
 * ieee80211_tx_dequeue(). Whenever mac80211 adds a new frame to a queue, it
 * calls the .wake_tx_queue driver op.
 *
 * For AP powersave TIM handling, the driver only needs to indicate if it has
 * buffered packets in the driver specific data structures by calling
 * ieee80211_sta_set_buffered(). For frames buffered in the ieee80211_txq
 * struct, mac80211 sets the appropriate TIM PVB bits and calls
 * .release_buffered_frames().
 * In that callback the driver is therefore expected to release its own
 * buffered frames and afterwards also frames from the ieee80211_txq (obtained
 * via the usual ieee80211_tx_dequeue).
 */

struct device;

/**
 * enum ieee80211_max_queues - maximum number of queues
 *
 * @IEEE80211_MAX_QUEUES: Maximum number of regular device queues.
 * @IEEE80211_MAX_QUEUE_MAP: bitmap with maximum queues set
 */
enum ieee80211_max_queues {
	IEEE80211_MAX_QUEUES =		16,
	IEEE80211_MAX_QUEUE_MAP =	BIT(IEEE80211_MAX_QUEUES) - 1,
};

#define IEEE80211_INVAL_HW_QUEUE	0xff

/**
 * enum ieee80211_ac_numbers - AC numbers as used in mac80211
 * @IEEE80211_AC_VO: voice
 * @IEEE80211_AC_VI: video
 * @IEEE80211_AC_BE: best effort
 * @IEEE80211_AC_BK: background
 */
enum ieee80211_ac_numbers {
	IEEE80211_AC_VO		= 0,
	IEEE80211_AC_VI		= 1,
	IEEE80211_AC_BE		= 2,
	IEEE80211_AC_BK		= 3,
};
#define IEEE80211_NUM_ACS	4

/**
 * struct ieee80211_tx_queue_params - transmit queue configuration
 *
 * The information provided in this structure is required for QoS
 * transmit queue configuration. Cf. IEEE 802.11 7.3.2.29.
 *
 * @aifs: arbitration interframe space [0..255]
 * @cw_min: minimum contention window [a value of the form
 *	2^n-1 in the range 1..32767]
 * @cw_max: maximum contention window [like @cw_min]
 * @txop: maximum burst time in units of 32 usecs, 0 meaning disabled
 * @acm: is mandatory admission control required for the access category
 * @uapsd: is U-APSD mode enabled for the queue
 */
struct ieee80211_tx_queue_params {
	u16 txop;
	u16 cw_min;
	u16 cw_max;
	u8 aifs;
	bool acm;
	bool uapsd;
};

struct ieee80211_low_level_stats {
	unsigned int dot11ACKFailureCount;
	unsigned int dot11RTSFailureCount;
	unsigned int dot11FCSErrorCount;
	unsigned int dot11RTSSuccessCount;
};

/**
 * enum ieee80211_chanctx_change - change flag for channel context
 * @IEEE80211_CHANCTX_CHANGE_WIDTH: The channel width changed
 * @IEEE80211_CHANCTX_CHANGE_RX_CHAINS: The number of RX chains changed
 * @IEEE80211_CHANCTX_CHANGE_RADAR: radar detection flag changed
 * @IEEE80211_CHANCTX_CHANGE_CHANNEL: switched to another operating channel,
 *	this is used only with channel switching with CSA
 * @IEEE80211_CHANCTX_CHANGE_MIN_WIDTH: The min required channel width changed
 */
enum ieee80211_chanctx_change {
	IEEE80211_CHANCTX_CHANGE_WIDTH		= BIT(0),
	IEEE80211_CHANCTX_CHANGE_RX_CHAINS	= BIT(1),
	IEEE80211_CHANCTX_CHANGE_RADAR		= BIT(2),
	IEEE80211_CHANCTX_CHANGE_CHANNEL	= BIT(3),
	IEEE80211_CHANCTX_CHANGE_MIN_WIDTH	= BIT(4),
};

/**
 * struct ieee80211_chanctx_conf - channel context that vifs may be tuned to
 *
 * This is the driver-visible part. The ieee80211_chanctx
 * that contains it is visible in mac80211 only.
 *
 * @def: the channel definition
 * @min_def: the minimum channel definition currently required.
 * @rx_chains_static: The number of RX chains that must always be
 *	active on the channel to receive MIMO transmissions
 * @rx_chains_dynamic: The number of RX chains that must be enabled
 *	after RTS/CTS handshake to receive SMPS MIMO transmissions;
 *	this will always be >= @rx_chains_static.
 * @radar_enabled: whether radar detection is enabled on this channel.
 * @drv_priv: data area for driver use, will always be aligned to
 *	sizeof(void *), size is determined in hw information.
 */
struct ieee80211_chanctx_conf {
	struct cfg80211_chan_def def;
	struct cfg80211_chan_def min_def;

	u8 rx_chains_static, rx_chains_dynamic;

	bool radar_enabled;

	u8 drv_priv[0] __aligned(sizeof(void *));
};

/**
 * enum ieee80211_chanctx_switch_mode - channel context switch mode
 * @CHANCTX_SWMODE_REASSIGN_VIF: Both old and new contexts already
 *	exist (and will continue to exist), but the virtual interface
 *	needs to be switched from one to the other.
 * @CHANCTX_SWMODE_SWAP_CONTEXTS: The old context exists but will stop
 *      to exist with this call, the new context doesn't exist but
 *      will be active after this call, the virtual interface switches
 *      from the old to the new (note that the driver may of course
 *      implement this as an on-the-fly chandef switch of the existing
 *      hardware context, but the mac80211 pointer for the old context
 *      will cease to exist and only the new one will later be used
 *      for changes/removal.)
 */
enum ieee80211_chanctx_switch_mode {
	CHANCTX_SWMODE_REASSIGN_VIF,
	CHANCTX_SWMODE_SWAP_CONTEXTS,
};

/**
 * struct ieee80211_vif_chanctx_switch - vif chanctx switch information
 *
 * This is structure is used to pass information about a vif that
 * needs to switch from one chanctx to another.  The
 * &ieee80211_chanctx_switch_mode defines how the switch should be
 * done.
 *
 * @vif: the vif that should be switched from old_ctx to new_ctx
 * @old_ctx: the old context to which the vif was assigned
 * @new_ctx: the new context to which the vif must be assigned
 */
struct ieee80211_vif_chanctx_switch {
	struct ieee80211_vif *vif;
	struct ieee80211_chanctx_conf *old_ctx;
	struct ieee80211_chanctx_conf *new_ctx;
};

/**
 * enum ieee80211_bss_change - BSS change notification flags
 *
 * These flags are used with the bss_info_changed() callback
 * to indicate which BSS parameter changed.
 *
 * @BSS_CHANGED_ASSOC: association status changed (associated/disassociated),
 *	also implies a change in the AID.
 * @BSS_CHANGED_ERP_CTS_PROT: CTS protection changed
 * @BSS_CHANGED_ERP_PREAMBLE: preamble changed
 * @BSS_CHANGED_ERP_SLOT: slot timing changed
 * @BSS_CHANGED_HT: 802.11n parameters changed
 * @BSS_CHANGED_BASIC_RATES: Basic rateset changed
 * @BSS_CHANGED_BEACON_INT: Beacon interval changed
 * @BSS_CHANGED_BSSID: BSSID changed, for whatever
 *	reason (IBSS and managed mode)
 * @BSS_CHANGED_BEACON: Beacon data changed, retrieve
 *	new beacon (beaconing modes)
 * @BSS_CHANGED_BEACON_ENABLED: Beaconing should be
 *	enabled/disabled (beaconing modes)
 * @BSS_CHANGED_CQM: Connection quality monitor config changed
 * @BSS_CHANGED_IBSS: IBSS join status changed
 * @BSS_CHANGED_ARP_FILTER: Hardware ARP filter address list or state changed.
 * @BSS_CHANGED_QOS: QoS for this association was enabled/disabled. Note
 *	that it is only ever disabled for station mode.
 * @BSS_CHANGED_IDLE: Idle changed for this BSS/interface.
 * @BSS_CHANGED_SSID: SSID changed for this BSS (AP and IBSS mode)
 * @BSS_CHANGED_AP_PROBE_RESP: Probe Response changed for this BSS (AP mode)
 * @BSS_CHANGED_PS: PS changed for this BSS (STA mode)
 * @BSS_CHANGED_TXPOWER: TX power setting changed for this interface
 * @BSS_CHANGED_P2P_PS: P2P powersave settings (CTWindow, opportunistic PS)
 *	changed (currently only in P2P client mode, GO mode will be later)
 * @BSS_CHANGED_BEACON_INFO: Data from the AP's beacon became available:
 *	currently dtim_period only is under consideration.
 * @BSS_CHANGED_BANDWIDTH: The bandwidth used by this interface changed,
 *	note that this is only called when it changes after the channel
 *	context had been assigned.
 * @BSS_CHANGED_OCB: OCB join status changed
 */
enum ieee80211_bss_change {
	BSS_CHANGED_ASSOC		= 1<<0,
	BSS_CHANGED_ERP_CTS_PROT	= 1<<1,
	BSS_CHANGED_ERP_PREAMBLE	= 1<<2,
	BSS_CHANGED_ERP_SLOT		= 1<<3,
	BSS_CHANGED_HT			= 1<<4,
	BSS_CHANGED_BASIC_RATES		= 1<<5,
	BSS_CHANGED_BEACON_INT		= 1<<6,
	BSS_CHANGED_BSSID		= 1<<7,
	BSS_CHANGED_BEACON		= 1<<8,
	BSS_CHANGED_BEACON_ENABLED	= 1<<9,
	BSS_CHANGED_CQM			= 1<<10,
	BSS_CHANGED_IBSS		= 1<<11,
	BSS_CHANGED_ARP_FILTER		= 1<<12,
	BSS_CHANGED_QOS			= 1<<13,
	BSS_CHANGED_IDLE		= 1<<14,
	BSS_CHANGED_SSID		= 1<<15,
	BSS_CHANGED_AP_PROBE_RESP	= 1<<16,
	BSS_CHANGED_PS			= 1<<17,
	BSS_CHANGED_TXPOWER		= 1<<18,
	BSS_CHANGED_P2P_PS		= 1<<19,
	BSS_CHANGED_BEACON_INFO		= 1<<20,
	BSS_CHANGED_BANDWIDTH		= 1<<21,
	BSS_CHANGED_OCB                 = 1<<22,

	/* when adding here, make sure to change ieee80211_reconfig */
};

/*
 * The maximum number of IPv4 addresses listed for ARP filtering. If the number
 * of addresses for an interface increase beyond this value, hardware ARP
 * filtering will be disabled.
 */
#define IEEE80211_BSS_ARP_ADDR_LIST_LEN 4

/**
 * enum ieee80211_event_type - event to be notified to the low level driver
 * @RSSI_EVENT: AP's rssi crossed the a threshold set by the driver.
 * @MLME_EVENT: event related to MLME
 */
enum ieee80211_event_type {
	RSSI_EVENT,
	MLME_EVENT,
};

/**
 * enum ieee80211_rssi_event_data - relevant when event type is %RSSI_EVENT
 * @RSSI_EVENT_HIGH: AP's rssi went below the threshold set by the driver.
 * @RSSI_EVENT_LOW: AP's rssi went above the threshold set by the driver.
 */
enum ieee80211_rssi_event_data {
	RSSI_EVENT_HIGH,
	RSSI_EVENT_LOW,
};

/**
 * struct ieee80211_rssi_event - data attached to an %RSSI_EVENT
 * @data: See &enum ieee80211_rssi_event_data
 */
struct ieee80211_rssi_event {
	enum ieee80211_rssi_event_data data;
};

/**
 * enum ieee80211_mlme_event_data - relevant when event type is %MLME_EVENT
 * @AUTH_EVENT: the MLME operation is authentication
 * @ASSOC_EVENT: the MLME operation is association
 * @DEAUTH_RX_EVENT: deauth received..
 * @DEAUTH_TX_EVENT: deauth sent.
 */
enum ieee80211_mlme_event_data {
	AUTH_EVENT,
	ASSOC_EVENT,
	DEAUTH_RX_EVENT,
	DEAUTH_TX_EVENT,
};

/**
 * enum ieee80211_mlme_event_status - relevant when event type is %MLME_EVENT
 * @MLME_SUCCESS: the MLME operation completed successfully.
 * @MLME_DENIED: the MLME operation was denied by the peer.
 * @MLME_TIMEOUT: the MLME operation timed out.
 */
enum ieee80211_mlme_event_status {
	MLME_SUCCESS,
	MLME_DENIED,
	MLME_TIMEOUT,
};

/**
 * struct ieee80211_mlme_event - data attached to an %MLME_EVENT
 * @data: See &enum ieee80211_mlme_event_data
 * @status: See &enum ieee80211_mlme_event_status
 * @reason: the reason code if applicable
 */
struct ieee80211_mlme_event {
	enum ieee80211_mlme_event_data data;
	enum ieee80211_mlme_event_status status;
	u16 reason;
};

/**
 * struct ieee80211_event - event to be sent to the driver
 * @type: The event itself. See &enum ieee80211_event_type.
 * @rssi: relevant if &type is %RSSI_EVENT
 * @mlme: relevant if &type is %AUTH_EVENT
 * @u:    union holding the above two fields
 */
struct ieee80211_event {
	enum ieee80211_event_type type;
	union {
		struct ieee80211_rssi_event rssi;
		struct ieee80211_mlme_event mlme;
	} u;
};

/**
 * struct ieee80211_bss_conf - holds the BSS's changing parameters
 *
 * This structure keeps information about a BSS (and an association
 * to that BSS) that can change during the lifetime of the BSS.
 *
 * @assoc: association status
 * @ibss_joined: indicates whether this station is part of an IBSS
 *	or not
 * @ibss_creator: indicates if a new IBSS network is being created
 * @aid: association ID number, valid only when @assoc is true
 * @use_cts_prot: use CTS protection
 * @use_short_preamble: use 802.11b short preamble;
 *	if the hardware cannot handle this it must set the
 *	IEEE80211_HW_2GHZ_SHORT_PREAMBLE_INCAPABLE hardware flag
 * @use_short_slot: use short slot time (only relevant for ERP);
 *	if the hardware cannot handle this it must set the
 *	IEEE80211_HW_2GHZ_SHORT_SLOT_INCAPABLE hardware flag
 * @dtim_period: num of beacons before the next DTIM, for beaconing,
 *	valid in station mode only if after the driver was notified
 *	with the %BSS_CHANGED_BEACON_INFO flag, will be non-zero then.
 * @sync_tsf: last beacon's/probe response's TSF timestamp (could be old
 *	as it may have been received during scanning long ago). If the
 *	HW flag %IEEE80211_HW_TIMING_BEACON_ONLY is set, then this can
 *	only come from a beacon, but might not become valid until after
 *	association when a beacon is received (which is notified with the
 *	%BSS_CHANGED_DTIM flag.). See also sync_dtim_count important notice.
 * @sync_device_ts: the device timestamp corresponding to the sync_tsf,
 *	the driver/device can use this to calculate synchronisation
 *	(see @sync_tsf). See also sync_dtim_count important notice.
 * @sync_dtim_count: Only valid when %IEEE80211_HW_TIMING_BEACON_ONLY
 *	is requested, see @sync_tsf/@sync_device_ts.
 *	IMPORTANT: These three sync_* parameters would possibly be out of sync
 *	by the time the driver will use them. The synchronized view is currently
 *	guaranteed only in certain callbacks.
 * @beacon_int: beacon interval
 * @assoc_capability: capabilities taken from assoc resp
 * @basic_rates: bitmap of basic rates, each bit stands for an
 *	index into the rate table configured by the driver in
 *	the current band.
 * @beacon_rate: associated AP's beacon TX rate
 * @mcast_rate: per-band multicast rate index + 1 (0: disabled)
 * @bssid: The BSSID for this BSS
 * @enable_beacon: whether beaconing should be enabled or not
 * @chandef: Channel definition for this BSS -- the hardware might be
 *	configured a higher bandwidth than this BSS uses, for example.
 * @ht_operation_mode: HT operation mode like in &struct ieee80211_ht_operation.
 *	This field is only valid when the channel type is one of the HT types.
 * @cqm_rssi_thold: Connection quality monitor RSSI threshold, a zero value
 *	implies disabled
 * @cqm_rssi_hyst: Connection quality monitor RSSI hysteresis
 * @arp_addr_list: List of IPv4 addresses for hardware ARP filtering. The
 *	may filter ARP queries targeted for other addresses than listed here.
 *	The driver must allow ARP queries targeted for all address listed here
 *	to pass through. An empty list implies no ARP queries need to pass.
 * @arp_addr_cnt: Number of addresses currently on the list. Note that this
 *	may be larger than %IEEE80211_BSS_ARP_ADDR_LIST_LEN (the arp_addr_list
 *	array size), it's up to the driver what to do in that case.
 * @qos: This is a QoS-enabled BSS.
 * @idle: This interface is idle. There's also a global idle flag in the
 *	hardware config which may be more appropriate depending on what
 *	your driver/device needs to do.
 * @ps: power-save mode (STA only). This flag is NOT affected by
 *	offchannel/dynamic_ps operations.
 * @ssid: The SSID of the current vif. Valid in AP and IBSS mode.
 * @ssid_len: Length of SSID given in @ssid.
 * @hidden_ssid: The SSID of the current vif is hidden. Only valid in AP-mode.
 * @txpower: TX power in dBm
 * @txpower_type: TX power adjustment used to control per packet Transmit
 *	Power Control (TPC) in lower driver for the current vif. In particular
 *	TPC is enabled if value passed in %txpower_type is
 *	NL80211_TX_POWER_LIMITED (allow using less than specified from
 *	userspace), whereas TPC is disabled if %txpower_type is set to
 *	NL80211_TX_POWER_FIXED (use value configured from userspace)
 * @p2p_noa_attr: P2P NoA attribute for P2P powersave
 */
struct ieee80211_bss_conf {
	const u8 *bssid;
	/* association related data */
	bool assoc, ibss_joined;
	bool ibss_creator;
	u16 aid;
	/* erp related data */
	bool use_cts_prot;
	bool use_short_preamble;
	bool use_short_slot;
	bool enable_beacon;
	u8 dtim_period;
	u16 beacon_int;
	u16 assoc_capability;
	u64 sync_tsf;
	u32 sync_device_ts;
	u8 sync_dtim_count;
	u32 basic_rates;
	struct ieee80211_rate *beacon_rate;
	int mcast_rate[IEEE80211_NUM_BANDS];
	u16 ht_operation_mode;
	s32 cqm_rssi_thold;
	u32 cqm_rssi_hyst;
	struct cfg80211_chan_def chandef;
	__be32 arp_addr_list[IEEE80211_BSS_ARP_ADDR_LIST_LEN];
	int arp_addr_cnt;
	bool qos;
	bool idle;
	bool ps;
	u8 ssid[IEEE80211_MAX_SSID_LEN];
	size_t ssid_len;
	bool hidden_ssid;
	int txpower;
	enum nl80211_tx_power_setting txpower_type;
	struct ieee80211_p2p_noa_attr p2p_noa_attr;
};

/**
 * enum mac80211_tx_info_flags - flags to describe transmission information/status
 *
 * These flags are used with the @flags member of &ieee80211_tx_info.
 *
 * @IEEE80211_TX_CTL_REQ_TX_STATUS: require TX status callback for this frame.
 * @IEEE80211_TX_CTL_ASSIGN_SEQ: The driver has to assign a sequence
 *	number to this frame, taking care of not overwriting the fragment
 *	number and increasing the sequence number only when the
 *	IEEE80211_TX_CTL_FIRST_FRAGMENT flag is set. mac80211 will properly
 *	assign sequence numbers to QoS-data frames but cannot do so correctly
 *	for non-QoS-data and management frames because beacons need them from
 *	that counter as well and mac80211 cannot guarantee proper sequencing.
 *	If this flag is set, the driver should instruct the hardware to
 *	assign a sequence number to the frame or assign one itself. Cf. IEEE
 *	802.11-2007 7.1.3.4.1 paragraph 3. This flag will always be set for
 *	beacons and always be clear for frames without a sequence number field.
 * @IEEE80211_TX_CTL_NO_ACK: tell the low level not to wait for an ack
 * @IEEE80211_TX_CTL_CLEAR_PS_FILT: clear powersave filter for destination
 *	station
 * @IEEE80211_TX_CTL_FIRST_FRAGMENT: this is a first fragment of the frame
 * @IEEE80211_TX_CTL_SEND_AFTER_DTIM: send this frame after DTIM beacon
 * @IEEE80211_TX_CTL_AMPDU: this frame should be sent as part of an A-MPDU
 * @IEEE80211_TX_CTL_INJECTED: Frame was injected, internal to mac80211.
 * @IEEE80211_TX_STAT_TX_FILTERED: The frame was not transmitted
 *	because the destination STA was in powersave mode. Note that to
 *	avoid race conditions, the filter must be set by the hardware or
 *	firmware upon receiving a frame that indicates that the station
 *	went to sleep (must be done on device to filter frames already on
 *	the queue) and may only be unset after mac80211 gives the OK for
 *	that by setting the IEEE80211_TX_CTL_CLEAR_PS_FILT (see above),
 *	since only then is it guaranteed that no more frames are in the
 *	hardware queue.
 * @IEEE80211_TX_STAT_ACK: Frame was acknowledged
 * @IEEE80211_TX_STAT_AMPDU: The frame was aggregated, so status
 * 	is for the whole aggregation.
 * @IEEE80211_TX_STAT_AMPDU_NO_BACK: no block ack was returned,
 * 	so consider using block ack request (BAR).
 * @IEEE80211_TX_CTL_RATE_CTRL_PROBE: internal to mac80211, can be
 *	set by rate control algorithms to indicate probe rate, will
 *	be cleared for fragmented frames (except on the last fragment)
 * @IEEE80211_TX_INTFL_OFFCHAN_TX_OK: Internal to mac80211. Used to indicate
 *	that a frame can be transmitted while the queues are stopped for
 *	off-channel operation.
 * @IEEE80211_TX_INTFL_NEED_TXPROCESSING: completely internal to mac80211,
 *	used to indicate that a pending frame requires TX processing before
 *	it can be sent out.
 * @IEEE80211_TX_INTFL_RETRIED: completely internal to mac80211,
 *	used to indicate that a frame was already retried due to PS
 * @IEEE80211_TX_INTFL_DONT_ENCRYPT: completely internal to mac80211,
 *	used to indicate frame should not be encrypted
 * @IEEE80211_TX_CTL_NO_PS_BUFFER: This frame is a response to a poll
 *	frame (PS-Poll or uAPSD) or a non-bufferable MMPDU and must
 *	be sent although the station is in powersave mode.
 * @IEEE80211_TX_CTL_MORE_FRAMES: More frames will be passed to the
 *	transmit function after the current frame, this can be used
 *	by drivers to kick the DMA queue only if unset or when the
 *	queue gets full.
 * @IEEE80211_TX_INTFL_RETRANSMISSION: This frame is being retransmitted
 *	after TX status because the destination was asleep, it must not
 *	be modified again (no seqno assignment, crypto, etc.)
 * @IEEE80211_TX_INTFL_MLME_CONN_TX: This frame was transmitted by the MLME
 *	code for connection establishment, this indicates that its status
 *	should kick the MLME state machine.
 * @IEEE80211_TX_INTFL_NL80211_FRAME_TX: Frame was requested through nl80211
 *	MLME command (internal to mac80211 to figure out whether to send TX
 *	status to user space)
 * @IEEE80211_TX_CTL_LDPC: tells the driver to use LDPC for this frame
 * @IEEE80211_TX_CTL_STBC: Enables Space-Time Block Coding (STBC) for this
 *	frame and selects the maximum number of streams that it can use.
 * @IEEE80211_TX_CTL_TX_OFFCHAN: Marks this packet to be transmitted on
 *	the off-channel channel when a remain-on-channel offload is done
 *	in hardware -- normal packets still flow and are expected to be
 *	handled properly by the device.
 * @IEEE80211_TX_INTFL_TKIP_MIC_FAILURE: Marks this packet to be used for TKIP
 *	testing. It will be sent out with incorrect Michael MIC key to allow
 *	TKIP countermeasures to be tested.
 * @IEEE80211_TX_CTL_NO_CCK_RATE: This frame will be sent at non CCK rate.
 *	This flag is actually used for management frame especially for P2P
 *	frames not being sent at CCK rate in 2GHz band.
 * @IEEE80211_TX_STATUS_EOSP: This packet marks the end of service period,
 *	when its status is reported the service period ends. For frames in
 *	an SP that mac80211 transmits, it is already set; for driver frames
 *	the driver may set this flag. It is also used to do the same for
 *	PS-Poll responses.
 * @IEEE80211_TX_CTL_USE_MINRATE: This frame will be sent at lowest rate.
 *	This flag is used to send nullfunc frame at minimum rate when
 *	the nullfunc is used for connection monitoring purpose.
 * @IEEE80211_TX_CTL_DONTFRAG: Don't fragment this packet even if it
 *	would be fragmented by size (this is optional, only used for
 *	monitor injection).
 * @IEEE80211_TX_STAT_NOACK_TRANSMITTED: A frame that was marked with
 *	IEEE80211_TX_CTL_NO_ACK has been successfully transmitted without
 *	any errors (like issues specific to the driver/HW).
 *	This flag must not be set for frames that don't request no-ack
 *	behaviour with IEEE80211_TX_CTL_NO_ACK.
 *
 * Note: If you have to add new flags to the enumeration, then don't
 *	 forget to update %IEEE80211_TX_TEMPORARY_FLAGS when necessary.
 */
enum mac80211_tx_info_flags {
	IEEE80211_TX_CTL_REQ_TX_STATUS		= BIT(0),
	IEEE80211_TX_CTL_ASSIGN_SEQ		= BIT(1),
	IEEE80211_TX_CTL_NO_ACK			= BIT(2),
	IEEE80211_TX_CTL_CLEAR_PS_FILT		= BIT(3),
	IEEE80211_TX_CTL_FIRST_FRAGMENT		= BIT(4),
	IEEE80211_TX_CTL_SEND_AFTER_DTIM	= BIT(5),
	IEEE80211_TX_CTL_AMPDU			= BIT(6),
	IEEE80211_TX_CTL_INJECTED		= BIT(7),
	IEEE80211_TX_STAT_TX_FILTERED		= BIT(8),
	IEEE80211_TX_STAT_ACK			= BIT(9),
	IEEE80211_TX_STAT_AMPDU			= BIT(10),
	IEEE80211_TX_STAT_AMPDU_NO_BACK		= BIT(11),
	IEEE80211_TX_CTL_RATE_CTRL_PROBE	= BIT(12),
	IEEE80211_TX_INTFL_OFFCHAN_TX_OK	= BIT(13),
	IEEE80211_TX_INTFL_NEED_TXPROCESSING	= BIT(14),
	IEEE80211_TX_INTFL_RETRIED		= BIT(15),
	IEEE80211_TX_INTFL_DONT_ENCRYPT		= BIT(16),
	IEEE80211_TX_CTL_NO_PS_BUFFER		= BIT(17),
	IEEE80211_TX_CTL_MORE_FRAMES		= BIT(18),
	IEEE80211_TX_INTFL_RETRANSMISSION	= BIT(19),
	IEEE80211_TX_INTFL_MLME_CONN_TX		= BIT(20),
	IEEE80211_TX_INTFL_NL80211_FRAME_TX	= BIT(21),
	IEEE80211_TX_CTL_LDPC			= BIT(22),
	IEEE80211_TX_CTL_STBC			= BIT(23) | BIT(24),
	IEEE80211_TX_CTL_TX_OFFCHAN		= BIT(25),
	IEEE80211_TX_INTFL_TKIP_MIC_FAILURE	= BIT(26),
	IEEE80211_TX_CTL_NO_CCK_RATE		= BIT(27),
	IEEE80211_TX_STATUS_EOSP		= BIT(28),
	IEEE80211_TX_CTL_USE_MINRATE		= BIT(29),
	IEEE80211_TX_CTL_DONTFRAG		= BIT(30),
	IEEE80211_TX_STAT_NOACK_TRANSMITTED	= BIT(31),
};

#define IEEE80211_TX_CTL_STBC_SHIFT		23

/**
 * enum mac80211_tx_control_flags - flags to describe transmit control
 *
 * @IEEE80211_TX_CTRL_PORT_CTRL_PROTO: this frame is a port control
 *	protocol frame (e.g. EAP)
 * @IEEE80211_TX_CTRL_PS_RESPONSE: This frame is a response to a poll
 *	frame (PS-Poll or uAPSD).
 *
 * These flags are used in tx_info->control.flags.
 */
enum mac80211_tx_control_flags {
	IEEE80211_TX_CTRL_PORT_CTRL_PROTO	= BIT(0),
	IEEE80211_TX_CTRL_PS_RESPONSE		= BIT(1),
};

/*
 * This definition is used as a mask to clear all temporary flags, which are
 * set by the tx handlers for each transmission attempt by the mac80211 stack.
 */
#define IEEE80211_TX_TEMPORARY_FLAGS (IEEE80211_TX_CTL_NO_ACK |		      \
	IEEE80211_TX_CTL_CLEAR_PS_FILT | IEEE80211_TX_CTL_FIRST_FRAGMENT |    \
	IEEE80211_TX_CTL_SEND_AFTER_DTIM | IEEE80211_TX_CTL_AMPDU |	      \
	IEEE80211_TX_STAT_TX_FILTERED |	IEEE80211_TX_STAT_ACK |		      \
	IEEE80211_TX_STAT_AMPDU | IEEE80211_TX_STAT_AMPDU_NO_BACK |	      \
	IEEE80211_TX_CTL_RATE_CTRL_PROBE | IEEE80211_TX_CTL_NO_PS_BUFFER |    \
	IEEE80211_TX_CTL_MORE_FRAMES | IEEE80211_TX_CTL_LDPC |		      \
	IEEE80211_TX_CTL_STBC | IEEE80211_TX_STATUS_EOSP)

/**
 * enum mac80211_rate_control_flags - per-rate flags set by the
 *	Rate Control algorithm.
 *
 * These flags are set by the Rate control algorithm for each rate during tx,
 * in the @flags member of struct ieee80211_tx_rate.
 *
 * @IEEE80211_TX_RC_USE_RTS_CTS: Use RTS/CTS exchange for this rate.
 * @IEEE80211_TX_RC_USE_CTS_PROTECT: CTS-to-self protection is required.
 *	This is set if the current BSS requires ERP protection.
 * @IEEE80211_TX_RC_USE_SHORT_PREAMBLE: Use short preamble.
 * @IEEE80211_TX_RC_MCS: HT rate.
 * @IEEE80211_TX_RC_VHT_MCS: VHT MCS rate, in this case the idx field is split
 *	into a higher 4 bits (Nss) and lower 4 bits (MCS number)
 * @IEEE80211_TX_RC_GREEN_FIELD: Indicates whether this rate should be used in
 *	Greenfield mode.
 * @IEEE80211_TX_RC_40_MHZ_WIDTH: Indicates if the Channel Width should be 40 MHz.
 * @IEEE80211_TX_RC_80_MHZ_WIDTH: Indicates 80 MHz transmission
 * @IEEE80211_TX_RC_160_MHZ_WIDTH: Indicates 160 MHz transmission
 *	(80+80 isn't supported yet)
 * @IEEE80211_TX_RC_DUP_DATA: The frame should be transmitted on both of the
 *	adjacent 20 MHz channels, if the current channel type is
 *	NL80211_CHAN_HT40MINUS or NL80211_CHAN_HT40PLUS.
 * @IEEE80211_TX_RC_SHORT_GI: Short Guard interval should be used for this rate.
 */
enum mac80211_rate_control_flags {
	IEEE80211_TX_RC_USE_RTS_CTS		= BIT(0),
	IEEE80211_TX_RC_USE_CTS_PROTECT		= BIT(1),
	IEEE80211_TX_RC_USE_SHORT_PREAMBLE	= BIT(2),

	/* rate index is an HT/VHT MCS instead of an index */
	IEEE80211_TX_RC_MCS			= BIT(3),
	IEEE80211_TX_RC_GREEN_FIELD		= BIT(4),
	IEEE80211_TX_RC_40_MHZ_WIDTH		= BIT(5),
	IEEE80211_TX_RC_DUP_DATA		= BIT(6),
	IEEE80211_TX_RC_SHORT_GI		= BIT(7),
	IEEE80211_TX_RC_VHT_MCS			= BIT(8),
	IEEE80211_TX_RC_80_MHZ_WIDTH		= BIT(9),
	IEEE80211_TX_RC_160_MHZ_WIDTH		= BIT(10),
};


/* there are 40 bytes if you don't need the rateset to be kept */
#define IEEE80211_TX_INFO_DRIVER_DATA_SIZE 40

/* if you do need the rateset, then you have less space */
#define IEEE80211_TX_INFO_RATE_DRIVER_DATA_SIZE 24

/* maximum number of rate stages */
#define IEEE80211_TX_MAX_RATES	4

/* maximum number of rate table entries */
#define IEEE80211_TX_RATE_TABLE_SIZE	4

/**
 * struct ieee80211_tx_rate - rate selection/status
 *
 * @idx: rate index to attempt to send with
 * @flags: rate control flags (&enum mac80211_rate_control_flags)
 * @count: number of tries in this rate before going to the next rate
 *
 * A value of -1 for @idx indicates an invalid rate and, if used
 * in an array of retry rates, that no more rates should be tried.
 *
 * When used for transmit status reporting, the driver should
 * always report the rate along with the flags it used.
 *
 * &struct ieee80211_tx_info contains an array of these structs
 * in the control information, and it will be filled by the rate
 * control algorithm according to what should be sent. For example,
 * if this array contains, in the format { <idx>, <count> } the
 * information
 *    { 3, 2 }, { 2, 2 }, { 1, 4 }, { -1, 0 }, { -1, 0 }
 * then this means that the frame should be transmitted
 * up to twice at rate 3, up to twice at rate 2, and up to four
 * times at rate 1 if it doesn't get acknowledged. Say it gets
 * acknowledged by the peer after the fifth attempt, the status
 * information should then contain
 *   { 3, 2 }, { 2, 2 }, { 1, 1 }, { -1, 0 } ...
 * since it was transmitted twice at rate 3, twice at rate 2
 * and once at rate 1 after which we received an acknowledgement.
 */
struct ieee80211_tx_rate {
	s8 idx;
	u16 count:5,
	    flags:11;
} __packed;

#define IEEE80211_MAX_TX_RETRY		31

static inline void ieee80211_rate_set_vht(struct ieee80211_tx_rate *rate,
					  u8 mcs, u8 nss)
{
	WARN_ON(mcs & ~0xF);
	WARN_ON((nss - 1) & ~0x7);
	rate->idx = ((nss - 1) << 4) | mcs;
}

static inline u8
ieee80211_rate_get_vht_mcs(const struct ieee80211_tx_rate *rate)
{
	return rate->idx & 0xF;
}

static inline u8
ieee80211_rate_get_vht_nss(const struct ieee80211_tx_rate *rate)
{
	return (rate->idx >> 4) + 1;
}

/**
 * struct ieee80211_tx_info - skb transmit information
 *
 * This structure is placed in skb->cb for three uses:
 *  (1) mac80211 TX control - mac80211 tells the driver what to do
 *  (2) driver internal use (if applicable)
 *  (3) TX status information - driver tells mac80211 what happened
 *
 * @flags: transmit info flags, defined above
 * @band: the band to transmit on (use for checking for races)
 * @hw_queue: HW queue to put the frame on, skb_get_queue_mapping() gives the AC
 * @ack_frame_id: internal frame ID for TX status, used internally
 * @control: union for control data
 * @status: union for status data
 * @driver_data: array of driver_data pointers
 * @ampdu_ack_len: number of acked aggregated frames.
 * 	relevant only if IEEE80211_TX_STAT_AMPDU was set.
 * @ampdu_len: number of aggregated frames.
 * 	relevant only if IEEE80211_TX_STAT_AMPDU was set.
 * @ack_signal: signal strength of the ACK frame
 */
struct ieee80211_tx_info {
	/* common information */
	u32 flags;
	u8 band;

	u8 hw_queue;

	u16 ack_frame_id;

	union {
		struct {
			union {
				/* rate control */
				struct {
					struct ieee80211_tx_rate rates[
						IEEE80211_TX_MAX_RATES];
					s8 rts_cts_rate_idx;
					u8 use_rts:1;
					u8 use_cts_prot:1;
					u8 short_preamble:1;
					u8 skip_table:1;
					/* 2 bytes free */
				};
				/* only needed before rate control */
				unsigned long jiffies;
			};
			/* NB: vif can be NULL for injected frames */
			struct ieee80211_vif *vif;
			struct ieee80211_key_conf *hw_key;
			u32 flags;
			/* 4 bytes free */
		} control;
		struct {
			struct ieee80211_tx_rate rates[IEEE80211_TX_MAX_RATES];
			s32 ack_signal;
			u8 ampdu_ack_len;
			u8 ampdu_len;
			u8 antenna;
			u16 tx_time;
			void *status_driver_data[19 / sizeof(void *)];
		} status;
		struct {
			struct ieee80211_tx_rate driver_rates[
				IEEE80211_TX_MAX_RATES];
			u8 pad[4];

			void *rate_driver_data[
				IEEE80211_TX_INFO_RATE_DRIVER_DATA_SIZE / sizeof(void *)];
		};
		void *driver_data[
			IEEE80211_TX_INFO_DRIVER_DATA_SIZE / sizeof(void *)];
	};
};

/**
 * struct ieee80211_scan_ies - descriptors for different blocks of IEs
 *
 * This structure is used to point to different blocks of IEs in HW scan
 * and scheduled scan. These blocks contain the IEs passed by userspace
 * and the ones generated by mac80211.
 *
 * @ies: pointers to band specific IEs.
 * @len: lengths of band_specific IEs.
 * @common_ies: IEs for all bands (especially vendor specific ones)
 * @common_ie_len: length of the common_ies
 */
struct ieee80211_scan_ies {
	const u8 *ies[IEEE80211_NUM_BANDS];
	size_t len[IEEE80211_NUM_BANDS];
	const u8 *common_ies;
	size_t common_ie_len;
};


static inline struct ieee80211_tx_info *IEEE80211_SKB_CB(struct sk_buff *skb)
{
	return (struct ieee80211_tx_info *)skb->cb;
}

static inline struct ieee80211_rx_status *IEEE80211_SKB_RXCB(struct sk_buff *skb)
{
	return (struct ieee80211_rx_status *)skb->cb;
}

/**
 * ieee80211_tx_info_clear_status - clear TX status
 *
 * @info: The &struct ieee80211_tx_info to be cleared.
 *
 * When the driver passes an skb back to mac80211, it must report
 * a number of things in TX status. This function clears everything
 * in the TX status but the rate control information (it does clear
 * the count since you need to fill that in anyway).
 *
 * NOTE: You can only use this function if you do NOT use
 *	 info->driver_data! Use info->rate_driver_data
 *	 instead if you need only the less space that allows.
 */
static inline void
ieee80211_tx_info_clear_status(struct ieee80211_tx_info *info)
{
	int i;

	BUILD_BUG_ON(offsetof(struct ieee80211_tx_info, status.rates) !=
		     offsetof(struct ieee80211_tx_info, control.rates));
	BUILD_BUG_ON(offsetof(struct ieee80211_tx_info, status.rates) !=
		     offsetof(struct ieee80211_tx_info, driver_rates));
	BUILD_BUG_ON(offsetof(struct ieee80211_tx_info, status.rates) != 8);
	/* clear the rate counts */
	for (i = 0; i < IEEE80211_TX_MAX_RATES; i++)
		info->status.rates[i].count = 0;

	BUILD_BUG_ON(
	    offsetof(struct ieee80211_tx_info, status.ack_signal) != 20);
	memset(&info->status.ampdu_ack_len, 0,
	       sizeof(struct ieee80211_tx_info) -
	       offsetof(struct ieee80211_tx_info, status.ampdu_ack_len));
}


/**
 * enum mac80211_rx_flags - receive flags
 *
 * These flags are used with the @flag member of &struct ieee80211_rx_status.
 * @RX_FLAG_MMIC_ERROR: Michael MIC error was reported on this frame.
 *	Use together with %RX_FLAG_MMIC_STRIPPED.
 * @RX_FLAG_DECRYPTED: This frame was decrypted in hardware.
 * @RX_FLAG_MMIC_STRIPPED: the Michael MIC is stripped off this frame,
 *	verification has been done by the hardware.
 * @RX_FLAG_IV_STRIPPED: The IV/ICV are stripped from this frame.
 *	If this flag is set, the stack cannot do any replay detection
 *	hence the driver or hardware will have to do that.
 * @RX_FLAG_FAILED_FCS_CRC: Set this flag if the FCS check failed on
 *	the frame.
 * @RX_FLAG_FAILED_PLCP_CRC: Set this flag if the PCLP check failed on
 *	the frame.
 * @RX_FLAG_MACTIME_START: The timestamp passed in the RX status (@mactime
 *	field) is valid and contains the time the first symbol of the MPDU
 *	was received. This is useful in monitor mode and for proper IBSS
 *	merging.
 * @RX_FLAG_MACTIME_END: The timestamp passed in the RX status (@mactime
 *	field) is valid and contains the time the last symbol of the MPDU
 *	(including FCS) was received.
 * @RX_FLAG_SHORTPRE: Short preamble was used for this frame
 * @RX_FLAG_HT: HT MCS was used and rate_idx is MCS index
 * @RX_FLAG_VHT: VHT MCS was used and rate_index is MCS index
 * @RX_FLAG_40MHZ: HT40 (40 MHz) was used
 * @RX_FLAG_SHORT_GI: Short guard interval was used
 * @RX_FLAG_NO_SIGNAL_VAL: The signal strength value is not present.
 *	Valid only for data frames (mainly A-MPDU)
 * @RX_FLAG_HT_GF: This frame was received in a HT-greenfield transmission, if
 *	the driver fills this value it should add %IEEE80211_RADIOTAP_MCS_HAVE_FMT
 *	to hw.radiotap_mcs_details to advertise that fact
 * @RX_FLAG_AMPDU_DETAILS: A-MPDU details are known, in particular the reference
 *	number (@ampdu_reference) must be populated and be a distinct number for
 *	each A-MPDU
 * @RX_FLAG_AMPDU_REPORT_ZEROLEN: driver reports 0-length subframes
 * @RX_FLAG_AMPDU_IS_ZEROLEN: This is a zero-length subframe, for
 *	monitoring purposes only
 * @RX_FLAG_AMPDU_LAST_KNOWN: last subframe is known, should be set on all
 *	subframes of a single A-MPDU
 * @RX_FLAG_AMPDU_IS_LAST: this subframe is the last subframe of the A-MPDU
 * @RX_FLAG_AMPDU_DELIM_CRC_ERROR: A delimiter CRC error has been detected
 *	on this subframe
 * @RX_FLAG_AMPDU_DELIM_CRC_KNOWN: The delimiter CRC field is known (the CRC
 *	is stored in the @ampdu_delimiter_crc field)
 * @RX_FLAG_LDPC: LDPC was used
 * @RX_FLAG_STBC_MASK: STBC 2 bit bitmask. 1 - Nss=1, 2 - Nss=2, 3 - Nss=3
 * @RX_FLAG_10MHZ: 10 MHz (half channel) was used
 * @RX_FLAG_5MHZ: 5 MHz (quarter channel) was used
 * @RX_FLAG_AMSDU_MORE: Some drivers may prefer to report separate A-MSDU
 *	subframes instead of a one huge frame for performance reasons.
 *	All, but the last MSDU from an A-MSDU should have this flag set. E.g.
 *	if an A-MSDU has 3 frames, the first 2 must have the flag set, while
 *	the 3rd (last) one must not have this flag set. The flag is used to
 *	deal with retransmission/duplication recovery properly since A-MSDU
 *	subframes share the same sequence number. Reported subframes can be
 *	either regular MSDU or singly A-MSDUs. Subframes must not be
 *	interleaved with other frames.
 * @RX_FLAG_RADIOTAP_VENDOR_DATA: This frame contains vendor-specific
 *	radiotap data in the skb->data (before the frame) as described by
 *	the &struct ieee80211_vendor_radiotap.
 */
enum mac80211_rx_flags {
	RX_FLAG_MMIC_ERROR		= BIT(0),
	RX_FLAG_DECRYPTED		= BIT(1),
	RX_FLAG_MMIC_STRIPPED		= BIT(3),
	RX_FLAG_IV_STRIPPED		= BIT(4),
	RX_FLAG_FAILED_FCS_CRC		= BIT(5),
	RX_FLAG_FAILED_PLCP_CRC 	= BIT(6),
	RX_FLAG_MACTIME_START		= BIT(7),
	RX_FLAG_SHORTPRE		= BIT(8),
	RX_FLAG_HT			= BIT(9),
	RX_FLAG_40MHZ			= BIT(10),
	RX_FLAG_SHORT_GI		= BIT(11),
	RX_FLAG_NO_SIGNAL_VAL		= BIT(12),
	RX_FLAG_HT_GF			= BIT(13),
	RX_FLAG_AMPDU_DETAILS		= BIT(14),
	RX_FLAG_AMPDU_REPORT_ZEROLEN	= BIT(15),
	RX_FLAG_AMPDU_IS_ZEROLEN	= BIT(16),
	RX_FLAG_AMPDU_LAST_KNOWN	= BIT(17),
	RX_FLAG_AMPDU_IS_LAST		= BIT(18),
	RX_FLAG_AMPDU_DELIM_CRC_ERROR	= BIT(19),
	RX_FLAG_AMPDU_DELIM_CRC_KNOWN	= BIT(20),
	RX_FLAG_MACTIME_END		= BIT(21),
	RX_FLAG_VHT			= BIT(22),
	RX_FLAG_LDPC			= BIT(23),
	RX_FLAG_STBC_MASK		= BIT(26) | BIT(27),
	RX_FLAG_10MHZ			= BIT(28),
	RX_FLAG_5MHZ			= BIT(29),
	RX_FLAG_AMSDU_MORE		= BIT(30),
	RX_FLAG_RADIOTAP_VENDOR_DATA	= BIT(31),
};

#define RX_FLAG_STBC_SHIFT		26

/**
 * enum mac80211_rx_vht_flags - receive VHT flags
 *
 * These flags are used with the @vht_flag member of
 *	&struct ieee80211_rx_status.
 * @RX_VHT_FLAG_80MHZ: 80 MHz was used
 * @RX_VHT_FLAG_160MHZ: 160 MHz was used
 * @RX_VHT_FLAG_BF: packet was beamformed
 */
enum mac80211_rx_vht_flags {
	RX_VHT_FLAG_80MHZ		= BIT(0),
	RX_VHT_FLAG_160MHZ		= BIT(1),
	RX_VHT_FLAG_BF			= BIT(2),
};

/**
 * struct ieee80211_rx_status - receive status
 *
 * The low-level driver should provide this information (the subset
 * supported by hardware) to the 802.11 code with each received
 * frame, in the skb's control buffer (cb).
 *
 * @mactime: value in microseconds of the 64-bit Time Synchronization Function
 * 	(TSF) timer when the first data symbol (MPDU) arrived at the hardware.
 * @device_timestamp: arbitrary timestamp for the device, mac80211 doesn't use
 *	it but can store it and pass it back to the driver for synchronisation
 * @band: the active band when this frame was received
 * @freq: frequency the radio was tuned to when receiving this frame, in MHz
 * @signal: signal strength when receiving this frame, either in dBm, in dB or
 *	unspecified depending on the hardware capabilities flags
 *	@IEEE80211_HW_SIGNAL_*
 * @chains: bitmask of receive chains for which separate signal strength
 *	values were filled.
 * @chain_signal: per-chain signal strength, in dBm (unlike @signal, doesn't
 *	support dB or unspecified units)
 * @antenna: antenna used
 * @rate_idx: index of data rate into band's supported rates or MCS index if
 *	HT or VHT is used (%RX_FLAG_HT/%RX_FLAG_VHT)
 * @vht_nss: number of streams (VHT only)
 * @flag: %RX_FLAG_*
 * @vht_flag: %RX_VHT_FLAG_*
 * @rx_flags: internal RX flags for mac80211
 * @ampdu_reference: A-MPDU reference number, must be a different value for
 *	each A-MPDU but the same for each subframe within one A-MPDU
 * @ampdu_delimiter_crc: A-MPDU delimiter CRC
 */
struct ieee80211_rx_status {
	u64 mactime;
	u32 device_timestamp;
	u32 ampdu_reference;
	u32 flag;
	u16 freq;
	u8 vht_flag;
	u8 rate_idx;
	u8 vht_nss;
	u8 rx_flags;
	u8 band;
	u8 antenna;
	s8 signal;
	u8 chains;
	s8 chain_signal[IEEE80211_MAX_CHAINS];
	u8 ampdu_delimiter_crc;
};

/**
 * struct ieee80211_vendor_radiotap - vendor radiotap data information
 * @present: presence bitmap for this vendor namespace
 *	(this could be extended in the future if any vendor needs more
 *	 bits, the radiotap spec does allow for that)
 * @align: radiotap vendor namespace alignment. This defines the needed
 *	alignment for the @data field below, not for the vendor namespace
 *	description itself (which has a fixed 2-byte alignment)
 *	Must be a power of two, and be set to at least 1!
 * @oui: radiotap vendor namespace OUI
 * @subns: radiotap vendor sub namespace
 * @len: radiotap vendor sub namespace skip length, if alignment is done
 *	then that's added to this, i.e. this is only the length of the
 *	@data field.
 * @pad: number of bytes of padding after the @data, this exists so that
 *	the skb data alignment can be preserved even if the data has odd
 *	length
 * @data: the actual vendor namespace data
 *
 * This struct, including the vendor data, goes into the skb->data before
 * the 802.11 header. It's split up in mac80211 using the align/oui/subns
 * data.
 */
struct ieee80211_vendor_radiotap {
	u32 present;
	u8 align;
	u8 oui[3];
	u8 subns;
	u8 pad;
	u16 len;
	u8 data[];
} __packed;

/**
 * enum ieee80211_conf_flags - configuration flags
 *
 * Flags to define PHY configuration options
 *
 * @IEEE80211_CONF_MONITOR: there's a monitor interface present -- use this
 *	to determine for example whether to calculate timestamps for packets
 *	or not, do not use instead of filter flags!
 * @IEEE80211_CONF_PS: Enable 802.11 power save mode (managed mode only).
 *	This is the power save mode defined by IEEE 802.11-2007 section 11.2,
 *	meaning that the hardware still wakes up for beacons, is able to
 *	transmit frames and receive the possible acknowledgment frames.
 *	Not to be confused with hardware specific wakeup/sleep states,
 *	driver is responsible for that. See the section "Powersave support"
 *	for more.
 * @IEEE80211_CONF_IDLE: The device is running, but idle; if the flag is set
 *	the driver should be prepared to handle configuration requests but
 *	may turn the device off as much as possible. Typically, this flag will
 *	be set when an interface is set UP but not associated or scanning, but
 *	it can also be unset in that case when monitor interfaces are active.
 * @IEEE80211_CONF_OFFCHANNEL: The device is currently not on its main
 *	operating channel.
 */
enum ieee80211_conf_flags {
	IEEE80211_CONF_MONITOR		= (1<<0),
	IEEE80211_CONF_PS		= (1<<1),
	IEEE80211_CONF_IDLE		= (1<<2),
	IEEE80211_CONF_OFFCHANNEL	= (1<<3),
};


/**
 * enum ieee80211_conf_changed - denotes which configuration changed
 *
 * @IEEE80211_CONF_CHANGE_LISTEN_INTERVAL: the listen interval changed
 * @IEEE80211_CONF_CHANGE_MONITOR: the monitor flag changed
 * @IEEE80211_CONF_CHANGE_PS: the PS flag or dynamic PS timeout changed
 * @IEEE80211_CONF_CHANGE_POWER: the TX power changed
 * @IEEE80211_CONF_CHANGE_CHANNEL: the channel/channel_type changed
 * @IEEE80211_CONF_CHANGE_RETRY_LIMITS: retry limits changed
 * @IEEE80211_CONF_CHANGE_IDLE: Idle flag changed
 * @IEEE80211_CONF_CHANGE_SMPS: Spatial multiplexing powersave mode changed
 *	Note that this is only valid if channel contexts are not used,
 *	otherwise each channel context has the number of chains listed.
 */
enum ieee80211_conf_changed {
	IEEE80211_CONF_CHANGE_SMPS		= BIT(1),
	IEEE80211_CONF_CHANGE_LISTEN_INTERVAL	= BIT(2),
	IEEE80211_CONF_CHANGE_MONITOR		= BIT(3),
	IEEE80211_CONF_CHANGE_PS		= BIT(4),
	IEEE80211_CONF_CHANGE_POWER		= BIT(5),
	IEEE80211_CONF_CHANGE_CHANNEL		= BIT(6),
	IEEE80211_CONF_CHANGE_RETRY_LIMITS	= BIT(7),
	IEEE80211_CONF_CHANGE_IDLE		= BIT(8),
};

/**
 * enum ieee80211_smps_mode - spatial multiplexing power save mode
 *
 * @IEEE80211_SMPS_AUTOMATIC: automatic
 * @IEEE80211_SMPS_OFF: off
 * @IEEE80211_SMPS_STATIC: static
 * @IEEE80211_SMPS_DYNAMIC: dynamic
 * @IEEE80211_SMPS_NUM_MODES: internal, don't use
 */
enum ieee80211_smps_mode {
	IEEE80211_SMPS_AUTOMATIC,
	IEEE80211_SMPS_OFF,
	IEEE80211_SMPS_STATIC,
	IEEE80211_SMPS_DYNAMIC,

	/* keep last */
	IEEE80211_SMPS_NUM_MODES,
};

/**
 * struct ieee80211_conf - configuration of the device
 *
 * This struct indicates how the driver shall configure the hardware.
 *
 * @flags: configuration flags defined above
 *
 * @listen_interval: listen interval in units of beacon interval
 * @max_sleep_period: the maximum number of beacon intervals to sleep for
 *	before checking the beacon for a TIM bit (managed mode only); this
 *	value will be only achievable between DTIM frames, the hardware
 *	needs to check for the multicast traffic bit in DTIM beacons.
 *	This variable is valid only when the CONF_PS flag is set.
 * @ps_dtim_period: The DTIM period of the AP we're connected to, for use
 *	in power saving. Power saving will not be enabled until a beacon
 *	has been received and the DTIM period is known.
 * @dynamic_ps_timeout: The dynamic powersave timeout (in ms), see the
 *	powersave documentation below. This variable is valid only when
 *	the CONF_PS flag is set.
 *
 * @power_level: requested transmit power (in dBm), backward compatibility
 *	value only that is set to the minimum of all interfaces
 *
 * @chandef: the channel definition to tune to
 * @radar_enabled: whether radar detection is enabled
 *
 * @long_frame_max_tx_count: Maximum number of transmissions for a "long" frame
 *	(a frame not RTS protected), called "dot11LongRetryLimit" in 802.11,
 *	but actually means the number of transmissions not the number of retries
 * @short_frame_max_tx_count: Maximum number of transmissions for a "short"
 *	frame, called "dot11ShortRetryLimit" in 802.11, but actually means the
 *	number of transmissions not the number of retries
 *
 * @smps_mode: spatial multiplexing powersave mode; note that
 *	%IEEE80211_SMPS_STATIC is used when the device is not
 *	configured for an HT channel.
 *	Note that this is only valid if channel contexts are not used,
 *	otherwise each channel context has the number of chains listed.
 */
struct ieee80211_conf {
	u32 flags;
	int power_level, dynamic_ps_timeout;
	int max_sleep_period;

	u16 listen_interval;
	u8 ps_dtim_period;

	u8 long_frame_max_tx_count, short_frame_max_tx_count;

	struct cfg80211_chan_def chandef;
	bool radar_enabled;
	enum ieee80211_smps_mode smps_mode;
};

/**
 * struct ieee80211_channel_switch - holds the channel switch data
 *
 * The information provided in this structure is required for channel switch
 * operation.
 *
 * @timestamp: value in microseconds of the 64-bit Time Synchronization
 *	Function (TSF) timer when the frame containing the channel switch
 *	announcement was received. This is simply the rx.mactime parameter
 *	the driver passed into mac80211.
 * @device_timestamp: arbitrary timestamp for the device, this is the
 *	rx.device_timestamp parameter the driver passed to mac80211.
 * @block_tx: Indicates whether transmission must be blocked before the
 *	scheduled channel switch, as indicated by the AP.
 * @chandef: the new channel to switch to
 * @count: the number of TBTT's until the channel switch event
 */
struct ieee80211_channel_switch {
	u64 timestamp;
	u32 device_timestamp;
	bool block_tx;
	struct cfg80211_chan_def chandef;
	u8 count;
};

/**
 * enum ieee80211_vif_flags - virtual interface flags
 *
 * @IEEE80211_VIF_BEACON_FILTER: the device performs beacon filtering
 *	on this virtual interface to avoid unnecessary CPU wakeups
 * @IEEE80211_VIF_SUPPORTS_CQM_RSSI: the device can do connection quality
 *	monitoring on this virtual interface -- i.e. it can monitor
 *	connection quality related parameters, such as the RSSI level and
 *	provide notifications if configured trigger levels are reached.
 * @IEEE80211_VIF_SUPPORTS_UAPSD: The device can do U-APSD for this
 *	interface. This flag should be set during interface addition,
 *	but may be set/cleared as late as authentication to an AP. It is
 *	only valid for managed/station mode interfaces.
 */
enum ieee80211_vif_flags {
	IEEE80211_VIF_BEACON_FILTER		= BIT(0),
	IEEE80211_VIF_SUPPORTS_CQM_RSSI		= BIT(1),
	IEEE80211_VIF_SUPPORTS_UAPSD		= BIT(2),
};

/**
 * struct ieee80211_vif - per-interface data
 *
 * Data in this structure is continually present for driver
 * use during the life of a virtual interface.
 *
 * @type: type of this virtual interface
 * @bss_conf: BSS configuration for this interface, either our own
 *	or the BSS we're associated to
 * @addr: address of this interface
 * @p2p: indicates whether this AP or STA interface is a p2p
 *	interface, i.e. a GO or p2p-sta respectively
 * @csa_active: marks whether a channel switch is going on. Internally it is
 *	write-protected by sdata_lock and local->mtx so holding either is fine
 *	for read access.
 * @driver_flags: flags/capabilities the driver has for this interface,
 *	these need to be set (or cleared) when the interface is added
 *	or, if supported by the driver, the interface type is changed
 *	at runtime, mac80211 will never touch this field
 * @hw_queue: hardware queue for each AC
 * @cab_queue: content-after-beacon (DTIM beacon really) queue, AP mode only
 * @chanctx_conf: The channel context this interface is assigned to, or %NULL
 *	when it is not assigned. This pointer is RCU-protected due to the TX
 *	path needing to access it; even though the netdev carrier will always
 *	be off when it is %NULL there can still be races and packets could be
 *	processed after it switches back to %NULL.
 * @debugfs_dir: debugfs dentry, can be used by drivers to create own per
 *	interface debug files. Note that it will be NULL for the virtual
 *	monitor interface (if that is requested.)
 * @drv_priv: data area for driver use, will always be aligned to
 *	sizeof(void *).
 * @txq: the multicast data TX queue (if driver uses the TXQ abstraction)
 */
struct ieee80211_vif {
	enum nl80211_iftype type;
	struct ieee80211_bss_conf bss_conf;
	u8 addr[ETH_ALEN];
	bool p2p;
	bool csa_active;

	u8 cab_queue;
	u8 hw_queue[IEEE80211_NUM_ACS];

	struct ieee80211_txq *txq;

	struct ieee80211_chanctx_conf __rcu *chanctx_conf;

	u32 driver_flags;

#ifdef CONFIG_MAC80211_DEBUGFS
	struct dentry *debugfs_dir;
#endif

	/* must be last */
	u8 drv_priv[0] __aligned(sizeof(void *));
};

static inline bool ieee80211_vif_is_mesh(struct ieee80211_vif *vif)
{
#ifdef CONFIG_MAC80211_MESH
	return vif->type == NL80211_IFTYPE_MESH_POINT;
#endif
	return false;
}

/**
 * wdev_to_ieee80211_vif - return a vif struct from a wdev
 * @wdev: the wdev to get the vif for
 *
 * This can be used by mac80211 drivers with direct cfg80211 APIs
 * (like the vendor commands) that get a wdev.
 *
 * Note that this function may return %NULL if the given wdev isn't
 * associated with a vif that the driver knows about (e.g. monitor
 * or AP_VLAN interfaces.)
 */
struct ieee80211_vif *wdev_to_ieee80211_vif(struct wireless_dev *wdev);

/**
 * ieee80211_vif_to_wdev - return a wdev struct from a vif
 * @vif: the vif to get the wdev for
 *
 * This can be used by mac80211 drivers with direct cfg80211 APIs
 * (like the vendor commands) that needs to get the wdev for a vif.
 *
 * Note that this function may return %NULL if the given wdev isn't
 * associated with a vif that the driver knows about (e.g. monitor
 * or AP_VLAN interfaces.)
 */
struct wireless_dev *ieee80211_vif_to_wdev(struct ieee80211_vif *vif);

/**
 * enum ieee80211_key_flags - key flags
 *
 * These flags are used for communication about keys between the driver
 * and mac80211, with the @flags parameter of &struct ieee80211_key_conf.
 *
 * @IEEE80211_KEY_FLAG_GENERATE_IV: This flag should be set by the
 *	driver to indicate that it requires IV generation for this
 *	particular key. Setting this flag does not necessarily mean that SKBs
 *	will have sufficient tailroom for ICV or MIC.
 * @IEEE80211_KEY_FLAG_GENERATE_MMIC: This flag should be set by
 *	the driver for a TKIP key if it requires Michael MIC
 *	generation in software.
 * @IEEE80211_KEY_FLAG_PAIRWISE: Set by mac80211, this flag indicates
 *	that the key is pairwise rather then a shared key.
 * @IEEE80211_KEY_FLAG_SW_MGMT_TX: This flag should be set by the driver for a
 *	CCMP/GCMP key if it requires CCMP/GCMP encryption of management frames
 *	(MFP) to be done in software.
 * @IEEE80211_KEY_FLAG_PUT_IV_SPACE: This flag should be set by the driver
 *	if space should be prepared for the IV, but the IV
 *	itself should not be generated. Do not set together with
 *	@IEEE80211_KEY_FLAG_GENERATE_IV on the same key. Setting this flag does
 *	not necessarily mean that SKBs will have sufficient tailroom for ICV or
 *	MIC.
 * @IEEE80211_KEY_FLAG_RX_MGMT: This key will be used to decrypt received
 *	management frames. The flag can help drivers that have a hardware
 *	crypto implementation that doesn't deal with management frames
 *	properly by allowing them to not upload the keys to hardware and
 *	fall back to software crypto. Note that this flag deals only with
 *	RX, if your crypto engine can't deal with TX you can also set the
 *	%IEEE80211_KEY_FLAG_SW_MGMT_TX flag to encrypt such frames in SW.
 * @IEEE80211_KEY_FLAG_GENERATE_IV_MGMT: This flag should be set by the
 *	driver for a CCMP/GCMP key to indicate that is requires IV generation
 *	only for managment frames (MFP).
 * @IEEE80211_KEY_FLAG_RESERVE_TAILROOM: This flag should be set by the
 *	driver for a key to indicate that sufficient tailroom must always
 *	be reserved for ICV or MIC, even when HW encryption is enabled.
 */
enum ieee80211_key_flags {
	IEEE80211_KEY_FLAG_GENERATE_IV_MGMT	= BIT(0),
	IEEE80211_KEY_FLAG_GENERATE_IV		= BIT(1),
	IEEE80211_KEY_FLAG_GENERATE_MMIC	= BIT(2),
	IEEE80211_KEY_FLAG_PAIRWISE		= BIT(3),
	IEEE80211_KEY_FLAG_SW_MGMT_TX		= BIT(4),
	IEEE80211_KEY_FLAG_PUT_IV_SPACE		= BIT(5),
	IEEE80211_KEY_FLAG_RX_MGMT		= BIT(6),
	IEEE80211_KEY_FLAG_RESERVE_TAILROOM	= BIT(7),
};

/**
 * struct ieee80211_key_conf - key information
 *
 * This key information is given by mac80211 to the driver by
 * the set_key() callback in &struct ieee80211_ops.
 *
 * @hw_key_idx: To be set by the driver, this is the key index the driver
 *	wants to be given when a frame is transmitted and needs to be
 *	encrypted in hardware.
 * @cipher: The key's cipher suite selector.
 * @flags: key flags, see &enum ieee80211_key_flags.
 * @keyidx: the key index (0-3)
 * @keylen: key material length
 * @key: key material. For ALG_TKIP the key is encoded as a 256-bit (32 byte)
 * 	data block:
 * 	- Temporal Encryption Key (128 bits)
 * 	- Temporal Authenticator Tx MIC Key (64 bits)
 * 	- Temporal Authenticator Rx MIC Key (64 bits)
 * @icv_len: The ICV length for this key type
 * @iv_len: The IV length for this key type
 */
struct ieee80211_key_conf {
	u32 cipher;
	u8 icv_len;
	u8 iv_len;
	u8 hw_key_idx;
	u8 flags;
	s8 keyidx;
	u8 keylen;
	u8 key[0];
};

/**
 * struct ieee80211_cipher_scheme - cipher scheme
 *
 * This structure contains a cipher scheme information defining
 * the secure packet crypto handling.
 *
 * @cipher: a cipher suite selector
 * @iftype: a cipher iftype bit mask indicating an allowed cipher usage
 * @hdr_len: a length of a security header used the cipher
 * @pn_len: a length of a packet number in the security header
 * @pn_off: an offset of pn from the beginning of the security header
 * @key_idx_off: an offset of key index byte in the security header
 * @key_idx_mask: a bit mask of key_idx bits
 * @key_idx_shift: a bit shift needed to get key_idx
 *     key_idx value calculation:
 *      (sec_header_base[key_idx_off] & key_idx_mask) >> key_idx_shift
 * @mic_len: a mic length in bytes
 */
struct ieee80211_cipher_scheme {
	u32 cipher;
	u16 iftype;
	u8 hdr_len;
	u8 pn_len;
	u8 pn_off;
	u8 key_idx_off;
	u8 key_idx_mask;
	u8 key_idx_shift;
	u8 mic_len;
};

/**
 * enum set_key_cmd - key command
 *
 * Used with the set_key() callback in &struct ieee80211_ops, this
 * indicates whether a key is being removed or added.
 *
 * @SET_KEY: a key is set
 * @DISABLE_KEY: a key must be disabled
 */
enum set_key_cmd {
	SET_KEY, DISABLE_KEY,
};

/**
 * enum ieee80211_sta_state - station state
 *
 * @IEEE80211_STA_NOTEXIST: station doesn't exist at all,
 *	this is a special state for add/remove transitions
 * @IEEE80211_STA_NONE: station exists without special state
 * @IEEE80211_STA_AUTH: station is authenticated
 * @IEEE80211_STA_ASSOC: station is associated
 * @IEEE80211_STA_AUTHORIZED: station is authorized (802.1X)
 */
enum ieee80211_sta_state {
	/* NOTE: These need to be ordered correctly! */
	IEEE80211_STA_NOTEXIST,
	IEEE80211_STA_NONE,
	IEEE80211_STA_AUTH,
	IEEE80211_STA_ASSOC,
	IEEE80211_STA_AUTHORIZED,
};

/**
 * enum ieee80211_sta_rx_bandwidth - station RX bandwidth
 * @IEEE80211_STA_RX_BW_20: station can only receive 20 MHz
 * @IEEE80211_STA_RX_BW_40: station can receive up to 40 MHz
 * @IEEE80211_STA_RX_BW_80: station can receive up to 80 MHz
 * @IEEE80211_STA_RX_BW_160: station can receive up to 160 MHz
 *	(including 80+80 MHz)
 *
 * Implementation note: 20 must be zero to be initialized
 *	correctly, the values must be sorted.
 */
enum ieee80211_sta_rx_bandwidth {
	IEEE80211_STA_RX_BW_20 = 0,
	IEEE80211_STA_RX_BW_40,
	IEEE80211_STA_RX_BW_80,
	IEEE80211_STA_RX_BW_160,
};

/**
 * struct ieee80211_sta_rates - station rate selection table
 *
 * @rcu_head: RCU head used for freeing the table on update
 * @rate: transmit rates/flags to be used by default.
 *	Overriding entries per-packet is possible by using cb tx control.
 */
struct ieee80211_sta_rates {
	struct rcu_head rcu_head;
	struct {
		s8 idx;
		u8 count;
		u8 count_cts;
		u8 count_rts;
		u16 flags;
	} rate[IEEE80211_TX_RATE_TABLE_SIZE];
};

/**
 * struct ieee80211_sta - station table entry
 *
 * A station table entry represents a station we are possibly
 * communicating with. Since stations are RCU-managed in
 * mac80211, any ieee80211_sta pointer you get access to must
 * either be protected by rcu_read_lock() explicitly or implicitly,
 * or you must take good care to not use such a pointer after a
 * call to your sta_remove callback that removed it.
 *
 * @addr: MAC address
 * @aid: AID we assigned to the station if we're an AP
 * @supp_rates: Bitmap of supported rates (per band)
 * @ht_cap: HT capabilities of this STA; restricted to our own capabilities
 * @vht_cap: VHT capabilities of this STA; restricted to our own capabilities
 * @wme: indicates whether the STA supports QoS/WME (if local devices does,
 *	otherwise always false)
 * @drv_priv: data area for driver use, will always be aligned to
 *	sizeof(void *), size is determined in hw information.
 * @uapsd_queues: bitmap of queues configured for uapsd. Only valid
 *	if wme is supported.
 * @max_sp: max Service Period. Only valid if wme is supported.
 * @bandwidth: current bandwidth the station can receive with
 * @rx_nss: in HT/VHT, the maximum number of spatial streams the
 *	station can receive at the moment, changed by operating mode
 *	notifications and capabilities. The value is only valid after
 *	the station moves to associated state.
 * @smps_mode: current SMPS mode (off, static or dynamic)
 * @rates: rate control selection table
 * @tdls: indicates whether the STA is a TDLS peer
 * @tdls_initiator: indicates the STA is an initiator of the TDLS link. Only
 *	valid if the STA is a TDLS peer in the first place.
 * @mfp: indicates whether the STA uses management frame protection or not.
 * @txq: per-TID data TX queues (if driver uses the TXQ abstraction)
 */
struct ieee80211_sta {
	u32 supp_rates[IEEE80211_NUM_BANDS];
	u8 addr[ETH_ALEN];
	u16 aid;
	struct ieee80211_sta_ht_cap ht_cap;
	struct ieee80211_sta_vht_cap vht_cap;
	bool wme;
	u8 uapsd_queues;
	u8 max_sp;
	u8 rx_nss;
	enum ieee80211_sta_rx_bandwidth bandwidth;
	enum ieee80211_smps_mode smps_mode;
	struct ieee80211_sta_rates __rcu *rates;
	bool tdls;
	bool tdls_initiator;
	bool mfp;

	struct ieee80211_txq *txq[IEEE80211_NUM_TIDS];

	/* must be last */
	u8 drv_priv[0] __aligned(sizeof(void *));
};

/**
 * enum sta_notify_cmd - sta notify command
 *
 * Used with the sta_notify() callback in &struct ieee80211_ops, this
 * indicates if an associated station made a power state transition.
 *
 * @STA_NOTIFY_SLEEP: a station is now sleeping
 * @STA_NOTIFY_AWAKE: a sleeping station woke up
 */
enum sta_notify_cmd {
	STA_NOTIFY_SLEEP, STA_NOTIFY_AWAKE,
};

/**
 * struct ieee80211_tx_control - TX control data
 *
 * @sta: station table entry, this sta pointer may be NULL and
 * 	it is not allowed to copy the pointer, due to RCU.
 */
struct ieee80211_tx_control {
	struct ieee80211_sta *sta;
};

/**
 * struct ieee80211_txq - Software intermediate tx queue
 *
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 * @sta: station table entry, %NULL for per-vif queue
 * @tid: the TID for this queue (unused for per-vif queue)
 * @ac: the AC for this queue
 * @drv_priv: data area for driver use, will always be aligned to
 *	sizeof(void *).
 *
 * The driver can obtain packets from this queue by calling
 * ieee80211_tx_dequeue().
 */
struct ieee80211_txq {
	struct ieee80211_vif *vif;
	struct ieee80211_sta *sta;
	u8 tid;
	u8 ac;

	/* must be last */
	u8 drv_priv[0] __aligned(sizeof(void *));
};

/**
 * enum ieee80211_hw_flags - hardware flags
 *
 * These flags are used to indicate hardware capabilities to
 * the stack. Generally, flags here should have their meaning
 * done in a way that the simplest hardware doesn't need setting
 * any particular flags. There are some exceptions to this rule,
 * however, so you are advised to review these flags carefully.
 *
 * @IEEE80211_HW_HAS_RATE_CONTROL:
 *	The hardware or firmware includes rate control, and cannot be
 *	controlled by the stack. As such, no rate control algorithm
 *	should be instantiated, and the TX rate reported to userspace
 *	will be taken from the TX status instead of the rate control
 *	algorithm.
 *	Note that this requires that the driver implement a number of
 *	callbacks so it has the correct information, it needs to have
 *	the @set_rts_threshold callback and must look at the BSS config
 *	@use_cts_prot for G/N protection, @use_short_slot for slot
 *	timing in 2.4 GHz and @use_short_preamble for preambles for
 *	CCK frames.
 *
 * @IEEE80211_HW_RX_INCLUDES_FCS:
 *	Indicates that received frames passed to the stack include
 *	the FCS at the end.
 *
 * @IEEE80211_HW_HOST_BROADCAST_PS_BUFFERING:
 *	Some wireless LAN chipsets buffer broadcast/multicast frames
 *	for power saving stations in the hardware/firmware and others
 *	rely on the host system for such buffering. This option is used
 *	to configure the IEEE 802.11 upper layer to buffer broadcast and
 *	multicast frames when there are power saving stations so that
 *	the driver can fetch them with ieee80211_get_buffered_bc().
 *
 * @IEEE80211_HW_2GHZ_SHORT_SLOT_INCAPABLE:
 *	Hardware is not capable of short slot operation on the 2.4 GHz band.
 *
 * @IEEE80211_HW_2GHZ_SHORT_PREAMBLE_INCAPABLE:
 *	Hardware is not capable of receiving frames with short preamble on
 *	the 2.4 GHz band.
 *
 * @IEEE80211_HW_SIGNAL_UNSPEC:
 *	Hardware can provide signal values but we don't know its units. We
 *	expect values between 0 and @max_signal.
 *	If possible please provide dB or dBm instead.
 *
 * @IEEE80211_HW_SIGNAL_DBM:
 *	Hardware gives signal values in dBm, decibel difference from
 *	one milliwatt. This is the preferred method since it is standardized
 *	between different devices. @max_signal does not need to be set.
 *
 * @IEEE80211_HW_SPECTRUM_MGMT:
 * 	Hardware supports spectrum management defined in 802.11h
 * 	Measurement, Channel Switch, Quieting, TPC
 *
 * @IEEE80211_HW_AMPDU_AGGREGATION:
 *	Hardware supports 11n A-MPDU aggregation.
 *
 * @IEEE80211_HW_SUPPORTS_PS:
 *	Hardware has power save support (i.e. can go to sleep).
 *
 * @IEEE80211_HW_PS_NULLFUNC_STACK:
 *	Hardware requires nullfunc frame handling in stack, implies
 *	stack support for dynamic PS.
 *
 * @IEEE80211_HW_SUPPORTS_DYNAMIC_PS:
 *	Hardware has support for dynamic PS.
 *
 * @IEEE80211_HW_MFP_CAPABLE:
 *	Hardware supports management frame protection (MFP, IEEE 802.11w).
 *
 * @IEEE80211_HW_REPORTS_TX_ACK_STATUS:
 *	Hardware can provide ack status reports of Tx frames to
 *	the stack.
 *
 * @IEEE80211_HW_CONNECTION_MONITOR:
 *	The hardware performs its own connection monitoring, including
 *	periodic keep-alives to the AP and probing the AP on beacon loss.
 *
 * @IEEE80211_HW_NEED_DTIM_BEFORE_ASSOC:
 *	This device needs to get data from beacon before association (i.e.
 *	dtim_period).
 *
 * @IEEE80211_HW_SUPPORTS_PER_STA_GTK: The device's crypto engine supports
 *	per-station GTKs as used by IBSS RSN or during fast transition. If
 *	the device doesn't support per-station GTKs, but can be asked not
 *	to decrypt group addressed frames, then IBSS RSN support is still
 *	possible but software crypto will be used. Advertise the wiphy flag
 *	only in that case.
 *
 * @IEEE80211_HW_AP_LINK_PS: When operating in AP mode the device
 *	autonomously manages the PS status of connected stations. When
 *	this flag is set mac80211 will not trigger PS mode for connected
 *	stations based on the PM bit of incoming frames.
 *	Use ieee80211_start_ps()/ieee8021_end_ps() to manually configure
 *	the PS mode of connected stations.
 *
 * @IEEE80211_HW_TX_AMPDU_SETUP_IN_HW: The device handles TX A-MPDU session
 *	setup strictly in HW. mac80211 should not attempt to do this in
 *	software.
 *
 * @IEEE80211_HW_WANT_MONITOR_VIF: The driver would like to be informed of
 *	a virtual monitor interface when monitor interfaces are the only
 *	active interfaces.
 *
 * @IEEE80211_HW_NO_AUTO_VIF: The driver would like for no wlanX to
 *	be created.  It is expected user-space will create vifs as
 *	desired (and thus have them named as desired).
 *
 * @IEEE80211_HW_SW_CRYPTO_CONTROL: The driver wants to control which of the
 *	crypto algorithms can be done in software - so don't automatically
 *	try to fall back to it if hardware crypto fails, but do so only if
 *	the driver returns 1. This also forces the driver to advertise its
 *	supported cipher suites.
 *
 * @IEEE80211_HW_QUEUE_CONTROL: The driver wants to control per-interface
 *	queue mapping in order to use different queues (not just one per AC)
 *	for different virtual interfaces. See the doc section on HW queue
 *	control for more details.
 *
 * @IEEE80211_HW_SUPPORTS_RC_TABLE: The driver supports using a rate
 *	selection table provided by the rate control algorithm.
 *
 * @IEEE80211_HW_P2P_DEV_ADDR_FOR_INTF: Use the P2P Device address for any
 *	P2P Interface. This will be honoured even if more than one interface
 *	is supported.
 *
 * @IEEE80211_HW_TIMING_BEACON_ONLY: Use sync timing from beacon frames
 *	only, to allow getting TBTT of a DTIM beacon.
 *
 * @IEEE80211_HW_SUPPORTS_HT_CCK_RATES: Hardware supports mixing HT/CCK rates
 *	and can cope with CCK rates in an aggregation session (e.g. by not
 *	using aggregation for such frames.)
 *
 * @IEEE80211_HW_CHANCTX_STA_CSA: Support 802.11h based channel-switch (CSA)
 *	for a single active channel while using channel contexts. When support
 *	is not enabled the default action is to disconnect when getting the
 *	CSA frame.
 *
 * @IEEE80211_HW_SUPPORTS_CLONED_SKBS: The driver will never modify the payload
 *	or tailroom of TX skbs without copying them first.
 *
 * @IEEE80211_SINGLE_HW_SCAN_ON_ALL_BANDS: The HW supports scanning on all bands
 *	in one command, mac80211 doesn't have to run separate scans per band.
 */
enum ieee80211_hw_flags {
	IEEE80211_HW_HAS_RATE_CONTROL			= 1<<0,
	IEEE80211_HW_RX_INCLUDES_FCS			= 1<<1,
	IEEE80211_HW_HOST_BROADCAST_PS_BUFFERING	= 1<<2,
	IEEE80211_HW_2GHZ_SHORT_SLOT_INCAPABLE		= 1<<3,
	IEEE80211_HW_2GHZ_SHORT_PREAMBLE_INCAPABLE	= 1<<4,
	IEEE80211_HW_SIGNAL_UNSPEC			= 1<<5,
	IEEE80211_HW_SIGNAL_DBM				= 1<<6,
	IEEE80211_HW_NEED_DTIM_BEFORE_ASSOC		= 1<<7,
	IEEE80211_HW_SPECTRUM_MGMT			= 1<<8,
	IEEE80211_HW_AMPDU_AGGREGATION			= 1<<9,
	IEEE80211_HW_SUPPORTS_PS			= 1<<10,
	IEEE80211_HW_PS_NULLFUNC_STACK			= 1<<11,
	IEEE80211_HW_SUPPORTS_DYNAMIC_PS		= 1<<12,
	IEEE80211_HW_MFP_CAPABLE			= 1<<13,
	IEEE80211_HW_WANT_MONITOR_VIF			= 1<<14,
	IEEE80211_HW_NO_AUTO_VIF			= 1<<15,
	IEEE80211_HW_SW_CRYPTO_CONTROL			= 1<<16,
	/* free slots */
	IEEE80211_HW_REPORTS_TX_ACK_STATUS		= 1<<18,
	IEEE80211_HW_CONNECTION_MONITOR			= 1<<19,
	IEEE80211_HW_QUEUE_CONTROL			= 1<<20,
	IEEE80211_HW_SUPPORTS_PER_STA_GTK		= 1<<21,
	IEEE80211_HW_AP_LINK_PS				= 1<<22,
	IEEE80211_HW_TX_AMPDU_SETUP_IN_HW		= 1<<23,
	IEEE80211_HW_SUPPORTS_RC_TABLE			= 1<<24,
	IEEE80211_HW_P2P_DEV_ADDR_FOR_INTF		= 1<<25,
	IEEE80211_HW_TIMING_BEACON_ONLY			= 1<<26,
	IEEE80211_HW_SUPPORTS_HT_CCK_RATES		= 1<<27,
	IEEE80211_HW_CHANCTX_STA_CSA			= 1<<28,
	IEEE80211_HW_SUPPORTS_CLONED_SKBS		= 1<<29,
	IEEE80211_SINGLE_HW_SCAN_ON_ALL_BANDS		= 1<<30,
};

/**
 * struct ieee80211_hw - hardware information and state
 *
 * This structure contains the configuration and hardware
 * information for an 802.11 PHY.
 *
 * @wiphy: This points to the &struct wiphy allocated for this
 *	802.11 PHY. You must fill in the @perm_addr and @dev
 *	members of this structure using SET_IEEE80211_DEV()
 *	and SET_IEEE80211_PERM_ADDR(). Additionally, all supported
 *	bands (with channels, bitrates) are registered here.
 *
 * @conf: &struct ieee80211_conf, device configuration, don't use.
 *
 * @priv: pointer to private area that was allocated for driver use
 *	along with this structure.
 *
 * @flags: hardware flags, see &enum ieee80211_hw_flags.
 *
 * @extra_tx_headroom: headroom to reserve in each transmit skb
 *	for use by the driver (e.g. for transmit headers.)
 *
 * @extra_beacon_tailroom: tailroom to reserve in each beacon tx skb.
 *	Can be used by drivers to add extra IEs.
 *
 * @max_signal: Maximum value for signal (rssi) in RX information, used
 *	only when @IEEE80211_HW_SIGNAL_UNSPEC or @IEEE80211_HW_SIGNAL_DB
 *
 * @max_listen_interval: max listen interval in units of beacon interval
 *	that HW supports
 *
 * @queues: number of available hardware transmit queues for
 *	data packets. WMM/QoS requires at least four, these
 *	queues need to have configurable access parameters.
 *
 * @rate_control_algorithm: rate control algorithm for this hardware.
 *	If unset (NULL), the default algorithm will be used. Must be
 *	set before calling ieee80211_register_hw().
 *
 * @vif_data_size: size (in bytes) of the drv_priv data area
 *	within &struct ieee80211_vif.
 * @sta_data_size: size (in bytes) of the drv_priv data area
 *	within &struct ieee80211_sta.
 * @chanctx_data_size: size (in bytes) of the drv_priv data area
 *	within &struct ieee80211_chanctx_conf.
 * @txq_data_size: size (in bytes) of the drv_priv data area
 *	within @struct ieee80211_txq.
 *
 * @max_rates: maximum number of alternate rate retry stages the hw
 *	can handle.
 * @max_report_rates: maximum number of alternate rate retry stages
 *	the hw can report back.
 * @max_rate_tries: maximum number of tries for each stage
 *
 * @max_rx_aggregation_subframes: maximum buffer size (number of
 *	sub-frames) to be used for A-MPDU block ack receiver
 *	aggregation.
 *	This is only relevant if the device has restrictions on the
 *	number of subframes, if it relies on mac80211 to do reordering
 *	it shouldn't be set.
 *
 * @max_tx_aggregation_subframes: maximum number of subframes in an
 *	aggregate an HT driver will transmit, used by the peer as a
 *	hint to size its reorder buffer.
 *
 * @offchannel_tx_hw_queue: HW queue ID to use for offchannel TX
 *	(if %IEEE80211_HW_QUEUE_CONTROL is set)
 *
 * @radiotap_mcs_details: lists which MCS information can the HW
 *	reports, by default it is set to _MCS, _GI and _BW but doesn't
 *	include _FMT. Use %IEEE80211_RADIOTAP_MCS_HAVE_* values, only
 *	adding _BW is supported today.
 *
 * @radiotap_vht_details: lists which VHT MCS information the HW reports,
 *	the default is _GI | _BANDWIDTH.
 *	Use the %IEEE80211_RADIOTAP_VHT_KNOWN_* values.
 *
 * @netdev_features: netdev features to be set in each netdev created
 *	from this HW. Note only HW checksum features are currently
 *	compatible with mac80211. Other feature bits will be rejected.
 *
 * @uapsd_queues: This bitmap is included in (re)association frame to indicate
 *	for each access category if it is uAPSD trigger-enabled and delivery-
 *	enabled. Use IEEE80211_WMM_IE_STA_QOSINFO_AC_* to set this bitmap.
 *	Each bit corresponds to different AC. Value '1' in specific bit means
 *	that corresponding AC is both trigger- and delivery-enabled. '0' means
 *	neither enabled.
 *
 * @uapsd_max_sp_len: maximum number of total buffered frames the WMM AP may
 *	deliver to a WMM STA during any Service Period triggered by the WMM STA.
 *	Use IEEE80211_WMM_IE_STA_QOSINFO_SP_* for correct values.
 *
 * @n_cipher_schemes: a size of an array of cipher schemes definitions.
 * @cipher_schemes: a pointer to an array of cipher scheme definitions
 *	supported by HW.
 *
 * @txq_ac_max_pending: maximum number of frames per AC pending in all txq
 *	entries for a vif.
 */
struct ieee80211_hw {
	struct ieee80211_conf conf;
	struct wiphy *wiphy;
	const char *rate_control_algorithm;
	void *priv;
	u32 flags;
	unsigned int extra_tx_headroom;
	unsigned int extra_beacon_tailroom;
	int vif_data_size;
	int sta_data_size;
	int chanctx_data_size;
	int txq_data_size;
	u16 queues;
	u16 max_listen_interval;
	s8 max_signal;
	u8 max_rates;
	u8 max_report_rates;
	u8 max_rate_tries;
	u8 max_rx_aggregation_subframes;
	u8 max_tx_aggregation_subframes;
	u8 offchannel_tx_hw_queue;
	u8 radiotap_mcs_details;
	u16 radiotap_vht_details;
	netdev_features_t netdev_features;
	u8 uapsd_queues;
	u8 uapsd_max_sp_len;
	u8 n_cipher_schemes;
	const struct ieee80211_cipher_scheme *cipher_schemes;
	int txq_ac_max_pending;
};

/**
 * struct ieee80211_scan_request - hw scan request
 *
 * @ies: pointers different parts of IEs (in req.ie)
 * @req: cfg80211 request.
 */
struct ieee80211_scan_request {
	struct ieee80211_scan_ies ies;

	/* Keep last */
	struct cfg80211_scan_request req;
};

/**
 * struct ieee80211_tdls_ch_sw_params - TDLS channel switch parameters
 *
 * @sta: peer this TDLS channel-switch request/response came from
 * @chandef: channel referenced in a TDLS channel-switch request
 * @action_code: see &enum ieee80211_tdls_actioncode
 * @status: channel-switch response status
 * @timestamp: time at which the frame was received
 * @switch_time: switch-timing parameter received in the frame
 * @switch_timeout: switch-timing parameter received in the frame
 * @tmpl_skb: TDLS switch-channel response template
 * @ch_sw_tm_ie: offset of the channel-switch timing IE inside @tmpl_skb
 */
struct ieee80211_tdls_ch_sw_params {
	struct ieee80211_sta *sta;
	struct cfg80211_chan_def *chandef;
	u8 action_code;
	u32 status;
	u32 timestamp;
	u16 switch_time;
	u16 switch_timeout;
	struct sk_buff *tmpl_skb;
	u32 ch_sw_tm_ie;
};

/**
 * wiphy_to_ieee80211_hw - return a mac80211 driver hw struct from a wiphy
 *
 * @wiphy: the &struct wiphy which we want to query
 *
 * mac80211 drivers can use this to get to their respective
 * &struct ieee80211_hw. Drivers wishing to get to their own private
 * structure can then access it via hw->priv. Note that mac802111 drivers should
 * not use wiphy_priv() to try to get their private driver structure as this
 * is already used internally by mac80211.
 *
 * Return: The mac80211 driver hw struct of @wiphy.
 */
struct ieee80211_hw *wiphy_to_ieee80211_hw(struct wiphy *wiphy);

/**
 * SET_IEEE80211_DEV - set device for 802.11 hardware
 *
 * @hw: the &struct ieee80211_hw to set the device for
 * @dev: the &struct device of this 802.11 device
 */
static inline void SET_IEEE80211_DEV(struct ieee80211_hw *hw, struct device *dev)
{
	set_wiphy_dev(hw->wiphy, dev);
}

/**
 * SET_IEEE80211_PERM_ADDR - set the permanent MAC address for 802.11 hardware
 *
 * @hw: the &struct ieee80211_hw to set the MAC address for
 * @addr: the address to set
 */
static inline void SET_IEEE80211_PERM_ADDR(struct ieee80211_hw *hw, u8 *addr)
{
	memcpy(hw->wiphy->perm_addr, addr, ETH_ALEN);
}

static inline struct ieee80211_rate *
ieee80211_get_tx_rate(const struct ieee80211_hw *hw,
		      const struct ieee80211_tx_info *c)
{
	if (WARN_ON_ONCE(c->control.rates[0].idx < 0))
		return NULL;
	return &hw->wiphy->bands[c->band]->bitrates[c->control.rates[0].idx];
}

static inline struct ieee80211_rate *
ieee80211_get_rts_cts_rate(const struct ieee80211_hw *hw,
			   const struct ieee80211_tx_info *c)
{
	if (c->control.rts_cts_rate_idx < 0)
		return NULL;
	return &hw->wiphy->bands[c->band]->bitrates[c->control.rts_cts_rate_idx];
}

static inline struct ieee80211_rate *
ieee80211_get_alt_retry_rate(const struct ieee80211_hw *hw,
			     const struct ieee80211_tx_info *c, int idx)
{
	if (c->control.rates[idx + 1].idx < 0)
		return NULL;
	return &hw->wiphy->bands[c->band]->bitrates[c->control.rates[idx + 1].idx];
}

/**
 * ieee80211_free_txskb - free TX skb
 * @hw: the hardware
 * @skb: the skb
 *
 * Free a transmit skb. Use this funtion when some failure
 * to transmit happened and thus status cannot be reported.
 */
void ieee80211_free_txskb(struct ieee80211_hw *hw, struct sk_buff *skb);

/**
 * DOC: Hardware crypto acceleration
 *
 * mac80211 is capable of taking advantage of many hardware
 * acceleration designs for encryption and decryption operations.
 *
 * The set_key() callback in the &struct ieee80211_ops for a given
 * device is called to enable hardware acceleration of encryption and
 * decryption. The callback takes a @sta parameter that will be NULL
 * for default keys or keys used for transmission only, or point to
 * the station information for the peer for individual keys.
 * Multiple transmission keys with the same key index may be used when
 * VLANs are configured for an access point.
 *
 * When transmitting, the TX control data will use the @hw_key_idx
 * selected by the driver by modifying the &struct ieee80211_key_conf
 * pointed to by the @key parameter to the set_key() function.
 *
 * The set_key() call for the %SET_KEY command should return 0 if
 * the key is now in use, -%EOPNOTSUPP or -%ENOSPC if it couldn't be
 * added; if you return 0 then hw_key_idx must be assigned to the
 * hardware key index, you are free to use the full u8 range.
 *
 * Note that in the case that the @IEEE80211_HW_SW_CRYPTO_CONTROL flag is
 * set, mac80211 will not automatically fall back to software crypto if
 * enabling hardware crypto failed. The set_key() call may also return the
 * value 1 to permit this specific key/algorithm to be done in software.
 *
 * When the cmd is %DISABLE_KEY then it must succeed.
 *
 * Note that it is permissible to not decrypt a frame even if a key
 * for it has been uploaded to hardware, the stack will not make any
 * decision based on whether a key has been uploaded or not but rather
 * based on the receive flags.
 *
 * The &struct ieee80211_key_conf structure pointed to by the @key
 * parameter is guaranteed to be valid until another call to set_key()
 * removes it, but it can only be used as a cookie to differentiate
 * keys.
 *
 * In TKIP some HW need to be provided a phase 1 key, for RX decryption
 * acceleration (i.e. iwlwifi). Those drivers should provide update_tkip_key
 * handler.
 * The update_tkip_key() call updates the driver with the new phase 1 key.
 * This happens every time the iv16 wraps around (every 65536 packets). The
 * set_key() call will happen only once for each key (unless the AP did
 * rekeying), it will not include a valid phase 1 key. The valid phase 1 key is
 * provided by update_tkip_key only. The trigger that makes mac80211 call this
 * handler is software decryption with wrap around of iv16.
 *
 * The set_default_unicast_key() call updates the default WEP key index
 * configured to the hardware for WEP encryption type. This is required
 * for devices that support offload of data packets (e.g. ARP responses).
 */

/**
 * DOC: Powersave support
 *
 * mac80211 has support for various powersave implementations.
 *
 * First, it can support hardware that handles all powersaving by itself,
 * such hardware should simply set the %IEEE80211_HW_SUPPORTS_PS hardware
 * flag. In that case, it will be told about the desired powersave mode
 * with the %IEEE80211_CONF_PS flag depending on the association status.
 * The hardware must take care of sending nullfunc frames when necessary,
 * i.e. when entering and leaving powersave mode. The hardware is required
 * to look at the AID in beacons and signal to the AP that it woke up when
 * it finds traffic directed to it.
 *
 * %IEEE80211_CONF_PS flag enabled means that the powersave mode defined in
 * IEEE 802.11-2007 section 11.2 is enabled. This is not to be confused
 * with hardware wakeup and sleep states. Driver is responsible for waking
 * up the hardware before issuing commands to the hardware and putting it
 * back to sleep at appropriate times.
 *
 * When PS is enabled, hardware needs to wakeup for beacons and receive the
 * buffered multicast/broadcast frames after the beacon. Also it must be
 * possible to send frames and receive the acknowledment frame.
 *
 * Other hardware designs cannot send nullfunc frames by themselves and also
 * need software support for parsing the TIM bitmap. This is also supported
 * by mac80211 by combining the %IEEE80211_HW_SUPPORTS_PS and
 * %IEEE80211_HW_PS_NULLFUNC_STACK flags. The hardware is of course still
 * required to pass up beacons. The hardware is still required to handle
 * waking up for multicast traffic; if it cannot the driver must handle that
 * as best as it can, mac80211 is too slow to do that.
 *
 * Dynamic powersave is an extension to normal powersave in which the
 * hardware stays awake for a user-specified period of time after sending a
 * frame so that reply frames need not be buffered and therefore delayed to
 * the next wakeup. It's compromise of getting good enough latency when
 * there's data traffic and still saving significantly power in idle
 * periods.
 *
 * Dynamic powersave is simply supported by mac80211 enabling and disabling
 * PS based on traffic. Driver needs to only set %IEEE80211_HW_SUPPORTS_PS
 * flag and mac80211 will handle everything automatically. Additionally,
 * hardware having support for the dynamic PS feature may set the
 * %IEEE80211_HW_SUPPORTS_DYNAMIC_PS flag to indicate that it can support
 * dynamic PS mode itself. The driver needs to look at the
 * @dynamic_ps_timeout hardware configuration value and use it that value
 * whenever %IEEE80211_CONF_PS is set. In this case mac80211 will disable
 * dynamic PS feature in stack and will just keep %IEEE80211_CONF_PS
 * enabled whenever user has enabled powersave.
 *
 * Driver informs U-APSD client support by enabling
 * %IEEE80211_VIF_SUPPORTS_UAPSD flag. The mode is configured through the
 * uapsd parameter in conf_tx() operation. Hardware needs to send the QoS
 * Nullfunc frames and stay awake until the service period has ended. To
 * utilize U-APSD, dynamic powersave is disabled for voip AC and all frames
 * from that AC are transmitted with powersave enabled.
 *
 * Note: U-APSD client mode is not yet supported with
 * %IEEE80211_HW_PS_NULLFUNC_STACK.
 */

/**
 * DOC: Beacon filter support
 *
 * Some hardware have beacon filter support to reduce host cpu wakeups
 * which will reduce system power consumption. It usually works so that
 * the firmware creates a checksum of the beacon but omits all constantly
 * changing elements (TSF, TIM etc). Whenever the checksum changes the
 * beacon is forwarded to the host, otherwise it will be just dropped. That
 * way the host will only receive beacons where some relevant information
 * (for example ERP protection or WMM settings) have changed.
 *
 * Beacon filter support is advertised with the %IEEE80211_VIF_BEACON_FILTER
 * interface capability. The driver needs to enable beacon filter support
 * whenever power save is enabled, that is %IEEE80211_CONF_PS is set. When
 * power save is enabled, the stack will not check for beacon loss and the
 * driver needs to notify about loss of beacons with ieee80211_beacon_loss().
 *
 * The time (or number of beacons missed) until the firmware notifies the
 * driver of a beacon loss event (which in turn causes the driver to call
 * ieee80211_beacon_loss()) should be configurable and will be controlled
 * by mac80211 and the roaming algorithm in the future.
 *
 * Since there may be constantly changing information elements that nothing
 * in the software stack cares about, we will, in the future, have mac80211
 * tell the driver which information elements are interesting in the sense
 * that we want to see changes in them. This will include
 *  - a list of information element IDs
 *  - a list of OUIs for the vendor information element
 *
 * Ideally, the hardware would filter out any beacons without changes in the
 * requested elements, but if it cannot support that it may, at the expense
 * of some efficiency, filter out only a subset. For example, if the device
 * doesn't support checking for OUIs it should pass up all changes in all
 * vendor information elements.
 *
 * Note that change, for the sake of simplification, also includes information
 * elements appearing or disappearing from the beacon.
 *
 * Some hardware supports an "ignore list" instead, just make sure nothing
 * that was requested is on the ignore list, and include commonly changing
 * information element IDs in the ignore list, for example 11 (BSS load) and
 * the various vendor-assigned IEs with unknown contents (128, 129, 133-136,
 * 149, 150, 155, 156, 173, 176, 178, 179, 219); for forward compatibility
 * it could also include some currently unused IDs.
 *
 *
 * In addition to these capabilities, hardware should support notifying the
 * host of changes in the beacon RSSI. This is relevant to implement roaming
 * when no traffic is flowing (when traffic is flowing we see the RSSI of
 * the received data packets). This can consist in notifying the host when
 * the RSSI changes significantly or when it drops below or rises above
 * configurable thresholds. In the future these thresholds will also be
 * configured by mac80211 (which gets them from userspace) to implement
 * them as the roaming algorithm requires.
 *
 * If the hardware cannot implement this, the driver should ask it to
 * periodically pass beacon frames to the host so that software can do the
 * signal strength threshold checking.
 */

/**
 * DOC: Spatial multiplexing power save
 *
 * SMPS (Spatial multiplexing power save) is a mechanism to conserve
 * power in an 802.11n implementation. For details on the mechanism
 * and rationale, please refer to 802.11 (as amended by 802.11n-2009)
 * "11.2.3 SM power save".
 *
 * The mac80211 implementation is capable of sending action frames
 * to update the AP about the station's SMPS mode, and will instruct
 * the driver to enter the specific mode. It will also announce the
 * requested SMPS mode during the association handshake. Hardware
 * support for this feature is required, and can be indicated by
 * hardware flags.
 *
 * The default mode will be "automatic", which nl80211/cfg80211
 * defines to be dynamic SMPS in (regular) powersave, and SMPS
 * turned off otherwise.
 *
 * To support this feature, the driver must set the appropriate
 * hardware support flags, and handle the SMPS flag to the config()
 * operation. It will then with this mechanism be instructed to
 * enter the requested SMPS mode while associated to an HT AP.
 */

/**
 * DOC: Frame filtering
 *
 * mac80211 requires to see many management frames for proper
 * operation, and users may want to see many more frames when
 * in monitor mode. However, for best CPU usage and power consumption,
 * having as few frames as possible percolate through the stack is
 * desirable. Hence, the hardware should filter as much as possible.
 *
 * To achieve this, mac80211 uses filter flags (see below) to tell
 * the driver's configure_filter() function which frames should be
 * passed to mac80211 and which should be filtered out.
 *
 * Before configure_filter() is invoked, the prepare_multicast()
 * callback is invoked with the parameters @mc_count and @mc_list
 * for the combined multicast address list of all virtual interfaces.
 * It's use is optional, and it returns a u64 that is passed to
 * configure_filter(). Additionally, configure_filter() has the
 * arguments @changed_flags telling which flags were changed and
 * @total_flags with the new flag states.
 *
 * If your device has no multicast address filters your driver will
 * need to check both the %FIF_ALLMULTI flag and the @mc_count
 * parameter to see whether multicast frames should be accepted
 * or dropped.
 *
 * All unsupported flags in @total_flags must be cleared.
 * Hardware does not support a flag if it is incapable of _passing_
 * the frame to the stack. Otherwise the driver must ignore
 * the flag, but not clear it.
 * You must _only_ clear the flag (announce no support for the
 * flag to mac80211) if you are not able to pass the packet type
 * to the stack (so the hardware always filters it).
 * So for example, you should clear @FIF_CONTROL, if your hardware
 * always filters control frames. If your hardware always passes
 * control frames to the kernel and is incapable of filtering them,
 * you do _not_ clear the @FIF_CONTROL flag.
 * This rule applies to all other FIF flags as well.
 */

/**
 * DOC: AP support for powersaving clients
 *
 * In order to implement AP and P2P GO modes, mac80211 has support for
 * client powersaving, both "legacy" PS (PS-Poll/null data) and uAPSD.
 * There currently is no support for sAPSD.
 *
 * There is one assumption that mac80211 makes, namely that a client
 * will not poll with PS-Poll and trigger with uAPSD at the same time.
 * Both are supported, and both can be used by the same client, but
 * they can't be used concurrently by the same client. This simplifies
 * the driver code.
 *
 * The first thing to keep in mind is that there is a flag for complete
 * driver implementation: %IEEE80211_HW_AP_LINK_PS. If this flag is set,
 * mac80211 expects the driver to handle most of the state machine for
 * powersaving clients and will ignore the PM bit in incoming frames.
 * Drivers then use ieee80211_sta_ps_transition() to inform mac80211 of
 * stations' powersave transitions. In this mode, mac80211 also doesn't
 * handle PS-Poll/uAPSD.
 *
 * In the mode without %IEEE80211_HW_AP_LINK_PS, mac80211 will check the
 * PM bit in incoming frames for client powersave transitions. When a
 * station goes to sleep, we will stop transmitting to it. There is,
 * however, a race condition: a station might go to sleep while there is
 * data buffered on hardware queues. If the device has support for this
 * it will reject frames, and the driver should give the frames back to
 * mac80211 with the %IEEE80211_TX_STAT_TX_FILTERED flag set which will
 * cause mac80211 to retry the frame when the station wakes up. The
 * driver is also notified of powersave transitions by calling its
 * @sta_notify callback.
 *
 * When the station is asleep, it has three choices: it can wake up,
 * it can PS-Poll, or it can possibly start a uAPSD service period.
 * Waking up is implemented by simply transmitting all buffered (and
 * filtered) frames to the station. This is the easiest case. When
 * the station sends a PS-Poll or a uAPSD trigger frame, mac80211
 * will inform the driver of this with the @allow_buffered_frames
 * callback; this callback is optional. mac80211 will then transmit
 * the frames as usual and set the %IEEE80211_TX_CTL_NO_PS_BUFFER
 * on each frame. The last frame in the service period (or the only
 * response to a PS-Poll) also has %IEEE80211_TX_STATUS_EOSP set to
 * indicate that it ends the service period; as this frame must have
 * TX status report it also sets %IEEE80211_TX_CTL_REQ_TX_STATUS.
 * When TX status is reported for this frame, the service period is
 * marked has having ended and a new one can be started by the peer.
 *
 * Additionally, non-bufferable MMPDUs can also be transmitted by
 * mac80211 with the %IEEE80211_TX_CTL_NO_PS_BUFFER set in them.
 *
 * Another race condition can happen on some devices like iwlwifi
 * when there are frames queued for the station and it wakes up
 * or polls; the frames that are already queued could end up being
 * transmitted first instead, causing reordering and/or wrong
 * processing of the EOSP. The cause is that allowing frames to be
 * transmitted to a certain station is out-of-band communication to
 * the device. To allow this problem to be solved, the driver can
 * call ieee80211_sta_block_awake() if frames are buffered when it
 * is notified that the station went to sleep. When all these frames
 * have been filtered (see above), it must call the function again
 * to indicate that the station is no longer blocked.
 *
 * If the driver buffers frames in the driver for aggregation in any
 * way, it must use the ieee80211_sta_set_buffered() call when it is
 * notified of the station going to sleep to inform mac80211 of any
 * TIDs that have frames buffered. Note that when a station wakes up
 * this information is reset (hence the requirement to call it when
 * informed of the station going to sleep). Then, when a service
 * period starts for any reason, @release_buffered_frames is called
 * with the number of frames to be released and which TIDs they are
 * to come from. In this case, the driver is responsible for setting
 * the EOSP (for uAPSD) and MORE_DATA bits in the released frames,
 * to help the @more_data parameter is passed to tell the driver if
 * there is more data on other TIDs -- the TIDs to release frames
 * from are ignored since mac80211 doesn't know how many frames the
 * buffers for those TIDs contain.
 *
 * If the driver also implement GO mode, where absence periods may
 * shorten service periods (or abort PS-Poll responses), it must
 * filter those response frames except in the case of frames that
 * are buffered in the driver -- those must remain buffered to avoid
 * reordering. Because it is possible that no frames are released
 * in this case, the driver must call ieee80211_sta_eosp()
 * to indicate to mac80211 that the service period ended anyway.
 *
 * Finally, if frames from multiple TIDs are released from mac80211
 * but the driver might reorder them, it must clear & set the flags
 * appropriately (only the last frame may have %IEEE80211_TX_STATUS_EOSP)
 * and also take care of the EOSP and MORE_DATA bits in the frame.
 * The driver may also use ieee80211_sta_eosp() in this case.
 *
 * Note that if the driver ever buffers frames other than QoS-data
 * frames, it must take care to never send a non-QoS-data frame as
 * the last frame in a service period, adding a QoS-nulldata frame
 * after a non-QoS-data frame if needed.
 */

/**
 * DOC: HW queue control
 *
 * Before HW queue control was introduced, mac80211 only had a single static
 * assignment of per-interface AC software queues to hardware queues. This
 * was problematic for a few reasons:
 * 1) off-channel transmissions might get stuck behind other frames
 * 2) multiple virtual interfaces couldn't be handled correctly
 * 3) after-DTIM frames could get stuck behind other frames
 *
 * To solve this, hardware typically uses multiple different queues for all
 * the different usages, and this needs to be propagated into mac80211 so it
 * won't have the same problem with the software queues.
 *
 * Therefore, mac80211 now offers the %IEEE80211_HW_QUEUE_CONTROL capability
 * flag that tells it that the driver implements its own queue control. To do
 * so, the driver will set up the various queues in each &struct ieee80211_vif
 * and the offchannel queue in &struct ieee80211_hw. In response, mac80211 will
 * use those queue IDs in the hw_queue field of &struct ieee80211_tx_info and
 * if necessary will queue the frame on the right software queue that mirrors
 * the hardware queue.
 * Additionally, the driver has to then use these HW queue IDs for the queue
 * management functions (ieee80211_stop_queue() et al.)
 *
 * The driver is free to set up the queue mappings as needed, multiple virtual
 * interfaces may map to the same hardware queues if needed. The setup has to
 * happen during add_interface or change_interface callbacks. For example, a
 * driver supporting station+station and station+AP modes might decide to have
 * 10 hardware queues to handle different scenarios:
 *
 * 4 AC HW queues for 1st vif: 0, 1, 2, 3
 * 4 AC HW queues for 2nd vif: 4, 5, 6, 7
 * after-DTIM queue for AP:   8
 * off-channel queue:         9
 *
 * It would then set up the hardware like this:
 *   hw.offchannel_tx_hw_queue = 9
 *
 * and the first virtual interface that is added as follows:
 *   vif.hw_queue[IEEE80211_AC_VO] = 0
 *   vif.hw_queue[IEEE80211_AC_VI] = 1
 *   vif.hw_queue[IEEE80211_AC_BE] = 2
 *   vif.hw_queue[IEEE80211_AC_BK] = 3
 *   vif.cab_queue = 8 // if AP mode, otherwise %IEEE80211_INVAL_HW_QUEUE
 * and the second virtual interface with 4-7.
 *
 * If queue 6 gets full, for example, mac80211 would only stop the second
 * virtual interface's BE queue since virtual interface queues are per AC.
 *
 * Note that the vif.cab_queue value should be set to %IEEE80211_INVAL_HW_QUEUE
 * whenever the queue is not used (i.e. the interface is not in AP mode) if the
 * queue could potentially be shared since mac80211 will look at cab_queue when
 * a queue is stopped/woken even if the interface is not in AP mode.
 */

/**
 * enum ieee80211_filter_flags - hardware filter flags
 *
 * These flags determine what the filter in hardware should be
 * programmed to let through and what should not be passed to the
 * stack. It is always safe to pass more frames than requested,
 * but this has negative impact on power consumption.
 *
 * @FIF_PROMISC_IN_BSS: promiscuous mode within your BSS,
 *	think of the BSS as your network segment and then this corresponds
 *	to the regular ethernet device promiscuous mode.
 *
 * @FIF_ALLMULTI: pass all multicast frames, this is used if requested
 *	by the user or if the hardware is not capable of filtering by
 *	multicast address.
 *
 * @FIF_FCSFAIL: pass frames with failed FCS (but you need to set the
 *	%RX_FLAG_FAILED_FCS_CRC for them)
 *
 * @FIF_PLCPFAIL: pass frames with failed PLCP CRC (but you need to set
 *	the %RX_FLAG_FAILED_PLCP_CRC for them
 *
 * @FIF_BCN_PRBRESP_PROMISC: This flag is set during scanning to indicate
 *	to the hardware that it should not filter beacons or probe responses
 *	by BSSID. Filtering them can greatly reduce the amount of processing
 *	mac80211 needs to do and the amount of CPU wakeups, so you should
 *	honour this flag if possible.
 *
 * @FIF_CONTROL: pass control frames (except for PS Poll), if PROMISC_IN_BSS
 * 	is not set then only those addressed to this station.
 *
 * @FIF_OTHER_BSS: pass frames destined to other BSSes
 *
 * @FIF_PSPOLL: pass PS Poll frames, if PROMISC_IN_BSS is not set then only
 * 	those addressed to this station.
 *
 * @FIF_PROBE_REQ: pass probe request frames
 */
enum ieee80211_filter_flags {
	FIF_PROMISC_IN_BSS	= 1<<0,
	FIF_ALLMULTI		= 1<<1,
	FIF_FCSFAIL		= 1<<2,
	FIF_PLCPFAIL		= 1<<3,
	FIF_BCN_PRBRESP_PROMISC	= 1<<4,
	FIF_CONTROL		= 1<<5,
	FIF_OTHER_BSS		= 1<<6,
	FIF_PSPOLL		= 1<<7,
	FIF_PROBE_REQ		= 1<<8,
};

/**
 * enum ieee80211_ampdu_mlme_action - A-MPDU actions
 *
 * These flags are used with the ampdu_action() callback in
 * &struct ieee80211_ops to indicate which action is needed.
 *
 * Note that drivers MUST be able to deal with a TX aggregation
 * session being stopped even before they OK'ed starting it by
 * calling ieee80211_start_tx_ba_cb_irqsafe, because the peer
 * might receive the addBA frame and send a delBA right away!
 *
 * @IEEE80211_AMPDU_RX_START: start RX aggregation
 * @IEEE80211_AMPDU_RX_STOP: stop RX aggregation
 * @IEEE80211_AMPDU_TX_START: start TX aggregation
 * @IEEE80211_AMPDU_TX_OPERATIONAL: TX aggregation has become operational
 * @IEEE80211_AMPDU_TX_STOP_CONT: stop TX aggregation but continue transmitting
 *	queued packets, now unaggregated. After all packets are transmitted the
 *	driver has to call ieee80211_stop_tx_ba_cb_irqsafe().
 * @IEEE80211_AMPDU_TX_STOP_FLUSH: stop TX aggregation and flush all packets,
 *	called when the station is removed. There's no need or reason to call
 *	ieee80211_stop_tx_ba_cb_irqsafe() in this case as mac80211 assumes the
 *	session is gone and removes the station.
 * @IEEE80211_AMPDU_TX_STOP_FLUSH_CONT: called when TX aggregation is stopped
 *	but the driver hasn't called ieee80211_stop_tx_ba_cb_irqsafe() yet and
 *	now the connection is dropped and the station will be removed. Drivers
 *	should clean up and drop remaining packets when this is called.
 */
enum ieee80211_ampdu_mlme_action {
	IEEE80211_AMPDU_RX_START,
	IEEE80211_AMPDU_RX_STOP,
	IEEE80211_AMPDU_TX_START,
	IEEE80211_AMPDU_TX_STOP_CONT,
	IEEE80211_AMPDU_TX_STOP_FLUSH,
	IEEE80211_AMPDU_TX_STOP_FLUSH_CONT,
	IEEE80211_AMPDU_TX_OPERATIONAL,
};

/**
 * enum ieee80211_frame_release_type - frame release reason
 * @IEEE80211_FRAME_RELEASE_PSPOLL: frame released for PS-Poll
 * @IEEE80211_FRAME_RELEASE_UAPSD: frame(s) released due to
 *	frame received on trigger-enabled AC
 */
enum ieee80211_frame_release_type {
	IEEE80211_FRAME_RELEASE_PSPOLL,
	IEEE80211_FRAME_RELEASE_UAPSD,
};

/**
 * enum ieee80211_rate_control_changed - flags to indicate what changed
 *
 * @IEEE80211_RC_BW_CHANGED: The bandwidth that can be used to transmit
 *	to this station changed. The actual bandwidth is in the station
 *	information -- for HT20/40 the IEEE80211_HT_CAP_SUP_WIDTH_20_40
 *	flag changes, for HT and VHT the bandwidth field changes.
 * @IEEE80211_RC_SMPS_CHANGED: The SMPS state of the station changed.
 * @IEEE80211_RC_SUPP_RATES_CHANGED: The supported rate set of this peer
 *	changed (in IBSS mode) due to discovering more information about
 *	the peer.
 * @IEEE80211_RC_NSS_CHANGED: N_SS (number of spatial streams) was changed
 *	by the peer
 */
enum ieee80211_rate_control_changed {
	IEEE80211_RC_BW_CHANGED		= BIT(0),
	IEEE80211_RC_SMPS_CHANGED	= BIT(1),
	IEEE80211_RC_SUPP_RATES_CHANGED	= BIT(2),
	IEEE80211_RC_NSS_CHANGED	= BIT(3),
};

/**
 * enum ieee80211_roc_type - remain on channel type
 *
 * With the support for multi channel contexts and multi channel operations,
 * remain on channel operations might be limited/deferred/aborted by other
 * flows/operations which have higher priority (and vise versa).
 * Specifying the ROC type can be used by devices to prioritize the ROC
 * operations compared to other operations/flows.
 *
 * @IEEE80211_ROC_TYPE_NORMAL: There are no special requirements for this ROC.
 * @IEEE80211_ROC_TYPE_MGMT_TX: The remain on channel request is required
 *	for sending managment frames offchannel.
 */
enum ieee80211_roc_type {
	IEEE80211_ROC_TYPE_NORMAL = 0,
	IEEE80211_ROC_TYPE_MGMT_TX,
};

/**
 * enum ieee80211_reconfig_complete_type - reconfig type
 *
 * This enum is used by the reconfig_complete() callback to indicate what
 * reconfiguration type was completed.
 *
 * @IEEE80211_RECONFIG_TYPE_RESTART: hw restart type
 *	(also due to resume() callback returning 1)
 * @IEEE80211_RECONFIG_TYPE_SUSPEND: suspend type (regardless
 *	of wowlan configuration)
 */
enum ieee80211_reconfig_type {
	IEEE80211_RECONFIG_TYPE_RESTART,
	IEEE80211_RECONFIG_TYPE_SUSPEND,
};

/**
 * struct ieee80211_ops - callbacks from mac80211 to the driver
 *
 * This structure contains various callbacks that the driver may
 * handle or, in some cases, must handle, for example to configure
 * the hardware to a new channel or to transmit a frame.
 *
 * @tx: Handler that 802.11 module calls for each transmitted frame.
 *	skb contains the buffer starting from the IEEE 802.11 header.
 *	The low-level driver should send the frame out based on
 *	configuration in the TX control data. This handler should,
 *	preferably, never fail and stop queues appropriately.
 *	Must be atomic.
 *
 * @start: Called before the first netdevice attached to the hardware
 *	is enabled. This should turn on the hardware and must turn on
 *	frame reception (for possibly enabled monitor interfaces.)
 *	Returns negative error codes, these may be seen in userspace,
 *	or zero.
 *	When the device is started it should not have a MAC address
 *	to avoid acknowledging frames before a non-monitor device
 *	is added.
 *	Must be implemented and can sleep.
 *
 * @stop: Called after last netdevice attached to the hardware
 *	is disabled. This should turn off the hardware (at least
 *	it must turn off frame reception.)
 *	May be called right after add_interface if that rejects
 *	an interface. If you added any work onto the mac80211 workqueue
 *	you should ensure to cancel it on this callback.
 *	Must be implemented and can sleep.
 *
 * @suspend: Suspend the device; mac80211 itself will quiesce before and
 *	stop transmitting and doing any other configuration, and then
 *	ask the device to suspend. This is only invoked when WoWLAN is
 *	configured, otherwise the device is deconfigured completely and
 *	reconfigured at resume time.
 *	The driver may also impose special conditions under which it
 *	wants to use the "normal" suspend (deconfigure), say if it only
 *	supports WoWLAN when the device is associated. In this case, it
 *	must return 1 from this function.
 *
 * @resume: If WoWLAN was configured, this indicates that mac80211 is
 *	now resuming its operation, after this the device must be fully
 *	functional again. If this returns an error, the only way out is
 *	to also unregister the device. If it returns 1, then mac80211
 *	will also go through the regular complete restart on resume.
 *
 * @set_wakeup: Enable or disable wakeup when WoWLAN configuration is
 *	modified. The reason is that device_set_wakeup_enable() is
 *	supposed to be called when the configuration changes, not only
 *	in suspend().
 *
 * @add_interface: Called when a netdevice attached to the hardware is
 *	enabled. Because it is not called for monitor mode devices, @start
 *	and @stop must be implemented.
 *	The driver should perform any initialization it needs before
 *	the device can be enabled. The initial configuration for the
 *	interface is given in the conf parameter.
 *	The callback may refuse to add an interface by returning a
 *	negative error code (which will be seen in userspace.)
 *	Must be implemented and can sleep.
 *
 * @change_interface: Called when a netdevice changes type. This callback
 *	is optional, but only if it is supported can interface types be
 *	switched while the interface is UP. The callback may sleep.
 *	Note that while an interface is being switched, it will not be
 *	found by the interface iteration callbacks.
 *
 * @remove_interface: Notifies a driver that an interface is going down.
 *	The @stop callback is called after this if it is the last interface
 *	and no monitor interfaces are present.
 *	When all interfaces are removed, the MAC address in the hardware
 *	must be cleared so the device no longer acknowledges packets,
 *	the mac_addr member of the conf structure is, however, set to the
 *	MAC address of the device going away.
 *	Hence, this callback must be implemented. It can sleep.
 *
 * @config: Handler for configuration requests. IEEE 802.11 code calls this
 *	function to change hardware configuration, e.g., channel.
 *	This function should never fail but returns a negative error code
 *	if it does. The callback can sleep.
 *
 * @bss_info_changed: Handler for configuration requests related to BSS
 *	parameters that may vary during BSS's lifespan, and may affect low
 *	level driver (e.g. assoc/disassoc status, erp parameters).
 *	This function should not be used if no BSS has been set, unless
 *	for association indication. The @changed parameter indicates which
 *	of the bss parameters has changed when a call is made. The callback
 *	can sleep.
 *
 * @prepare_multicast: Prepare for multicast filter configuration.
 *	This callback is optional, and its return value is passed
 *	to configure_filter(). This callback must be atomic.
 *
 * @configure_filter: Configure the device's RX filter.
 *	See the section "Frame filtering" for more information.
 *	This callback must be implemented and can sleep.
 *
 * @set_tim: Set TIM bit. mac80211 calls this function when a TIM bit
 * 	must be set or cleared for a given STA. Must be atomic.
 *
 * @set_key: See the section "Hardware crypto acceleration"
 *	This callback is only called between add_interface and
 *	remove_interface calls, i.e. while the given virtual interface
 *	is enabled.
 *	Returns a negative error code if the key can't be added.
 *	The callback can sleep.
 *
 * @update_tkip_key: See the section "Hardware crypto acceleration"
 * 	This callback will be called in the context of Rx. Called for drivers
 * 	which set IEEE80211_KEY_FLAG_TKIP_REQ_RX_P1_KEY.
 *	The callback must be atomic.
 *
 * @set_rekey_data: If the device supports GTK rekeying, for example while the
 *	host is suspended, it can assign this callback to retrieve the data
 *	necessary to do GTK rekeying, this is the KEK, KCK and replay counter.
 *	After rekeying was done it should (for example during resume) notify
 *	userspace of the new replay counter using ieee80211_gtk_rekey_notify().
 *
 * @set_default_unicast_key: Set the default (unicast) key index, useful for
 *	WEP when the device sends data packets autonomously, e.g. for ARP
 *	offloading. The index can be 0-3, or -1 for unsetting it.
 *
 * @hw_scan: Ask the hardware to service the scan request, no need to start
 *	the scan state machine in stack. The scan must honour the channel
 *	configuration done by the regulatory agent in the wiphy's
 *	registered bands. The hardware (or the driver) needs to make sure
 *	that power save is disabled.
 *	The @req ie/ie_len members are rewritten by mac80211 to contain the
 *	entire IEs after the SSID, so that drivers need not look at these
 *	at all but just send them after the SSID -- mac80211 includes the
 *	(extended) supported rates and HT information (where applicable).
 *	When the scan finishes, ieee80211_scan_completed() must be called;
 *	note that it also must be called when the scan cannot finish due to
 *	any error unless this callback returned a negative error code.
 *	The callback can sleep.
 *
 * @cancel_hw_scan: Ask the low-level tp cancel the active hw scan.
 *	The driver should ask the hardware to cancel the scan (if possible),
 *	but the scan will be completed only after the driver will call
 *	ieee80211_scan_completed().
 *	This callback is needed for wowlan, to prevent enqueueing a new
 *	scan_work after the low-level driver was already suspended.
 *	The callback can sleep.
 *
 * @sched_scan_start: Ask the hardware to start scanning repeatedly at
 *	specific intervals.  The driver must call the
 *	ieee80211_sched_scan_results() function whenever it finds results.
 *	This process will continue until sched_scan_stop is called.
 *
 * @sched_scan_stop: Tell the hardware to stop an ongoing scheduled scan.
 *	In this case, ieee80211_sched_scan_stopped() must not be called.
 *
 * @sw_scan_start: Notifier function that is called just before a software scan
 *	is started. Can be NULL, if the driver doesn't need this notification.
 *	The mac_addr parameter allows supporting NL80211_SCAN_FLAG_RANDOM_ADDR,
 *	the driver may set the NL80211_FEATURE_SCAN_RANDOM_MAC_ADDR flag if it
 *	can use this parameter. The callback can sleep.
 *
 * @sw_scan_complete: Notifier function that is called just after a
 *	software scan finished. Can be NULL, if the driver doesn't need
 *	this notification.
 *	The callback can sleep.
 *
 * @get_stats: Return low-level statistics.
 * 	Returns zero if statistics are available.
 *	The callback can sleep.
 *
 * @get_tkip_seq: If your device implements TKIP encryption in hardware this
 *	callback should be provided to read the TKIP transmit IVs (both IV32
 *	and IV16) for the given key from hardware.
 *	The callback must be atomic.
 *
 * @set_frag_threshold: Configuration of fragmentation threshold. Assign this
 *	if the device does fragmentation by itself; if this callback is
 *	implemented then the stack will not do fragmentation.
 *	The callback can sleep.
 *
 * @set_rts_threshold: Configuration of RTS threshold (if device needs it)
 *	The callback can sleep.
 *
 * @sta_add: Notifies low level driver about addition of an associated station,
 *	AP, IBSS/WDS/mesh peer etc. This callback can sleep.
 *
 * @sta_remove: Notifies low level driver about removal of an associated
 *	station, AP, IBSS/WDS/mesh peer etc. Note that after the callback
 *	returns it isn't safe to use the pointer, not even RCU protected;
 *	no RCU grace period is guaranteed between returning here and freeing
 *	the station. See @sta_pre_rcu_remove if needed.
 *	This callback can sleep.
 *
 * @sta_add_debugfs: Drivers can use this callback to add debugfs files
 *	when a station is added to mac80211's station list. This callback
 *	and @sta_remove_debugfs should be within a CONFIG_MAC80211_DEBUGFS
 *	conditional. This callback can sleep.
 *
 * @sta_remove_debugfs: Remove the debugfs files which were added using
 *	@sta_add_debugfs. This callback can sleep.
 *
 * @sta_notify: Notifies low level driver about power state transition of an
 *	associated station, AP,  IBSS/WDS/mesh peer etc. For a VIF operating
 *	in AP mode, this callback will not be called when the flag
 *	%IEEE80211_HW_AP_LINK_PS is set. Must be atomic.
 *
 * @sta_state: Notifies low level driver about state transition of a
 *	station (which can be the AP, a client, IBSS/WDS/mesh peer etc.)
 *	This callback is mutually exclusive with @sta_add/@sta_remove.
 *	It must not fail for down transitions but may fail for transitions
 *	up the list of states. Also note that after the callback returns it
 *	isn't safe to use the pointer, not even RCU protected - no RCU grace
 *	period is guaranteed between returning here and freeing the station.
 *	See @sta_pre_rcu_remove if needed.
 *	The callback can sleep.
 *
 * @sta_pre_rcu_remove: Notify driver about station removal before RCU
 *	synchronisation. This is useful if a driver needs to have station
 *	pointers protected using RCU, it can then use this call to clear
 *	the pointers instead of waiting for an RCU grace period to elapse
 *	in @sta_state.
 *	The callback can sleep.
 *
 * @sta_rc_update: Notifies the driver of changes to the bitrates that can be
 *	used to transmit to the station. The changes are advertised with bits
 *	from &enum ieee80211_rate_control_changed and the values are reflected
 *	in the station data. This callback should only be used when the driver
 *	uses hardware rate control (%IEEE80211_HW_HAS_RATE_CONTROL) since
 *	otherwise the rate control algorithm is notified directly.
 *	Must be atomic.
 * @sta_rate_tbl_update: Notifies the driver that the rate table changed. This
 *	is only used if the configured rate control algorithm actually uses
 *	the new rate table API, and is therefore optional. Must be atomic.
 *
 * @sta_statistics: Get statistics for this station. For example with beacon
 *	filtering, the statistics kept by mac80211 might not be accurate, so
 *	let the driver pre-fill the statistics. The driver can fill most of
 *	the values (indicating which by setting the filled bitmap), but not
 *	all of them make sense - see the source for which ones are possible.
 *	Statistics that the driver doesn't fill will be filled by mac80211.
 *	The callback can sleep.
 *
 * @conf_tx: Configure TX queue parameters (EDCF (aifs, cw_min, cw_max),
 *	bursting) for a hardware TX queue.
 *	Returns a negative error code on failure.
 *	The callback can sleep.
 *
 * @get_tsf: Get the current TSF timer value from firmware/hardware. Currently,
 *	this is only used for IBSS mode BSSID merging and debugging. Is not a
 *	required function.
 *	The callback can sleep.
 *
 * @set_tsf: Set the TSF timer to the specified value in the firmware/hardware.
 *	Currently, this is only used for IBSS mode debugging. Is not a
 *	required function.
 *	The callback can sleep.
 *
 * @reset_tsf: Reset the TSF timer and allow firmware/hardware to synchronize
 *	with other STAs in the IBSS. This is only used in IBSS mode. This
 *	function is optional if the firmware/hardware takes full care of
 *	TSF synchronization.
 *	The callback can sleep.
 *
 * @tx_last_beacon: Determine whether the last IBSS beacon was sent by us.
 *	This is needed only for IBSS mode and the result of this function is
 *	used to determine whether to reply to Probe Requests.
 *	Returns non-zero if this device sent the last beacon.
 *	The callback can sleep.
 *
 * @ampdu_action: Perform a certain A-MPDU action
 * 	The RA/TID combination determines the destination and TID we want
 * 	the ampdu action to be performed for. The action is defined through
 * 	ieee80211_ampdu_mlme_action. Starting sequence number (@ssn)
 * 	is the first frame we expect to perform the action on. Notice
 * 	that TX/RX_STOP can pass NULL for this parameter.
 *	The @buf_size parameter is only valid when the action is set to
 *	%IEEE80211_AMPDU_TX_OPERATIONAL and indicates the peer's reorder
 *	buffer size (number of subframes) for this session -- the driver
 *	may neither send aggregates containing more subframes than this
 *	nor send aggregates in a way that lost frames would exceed the
 *	buffer size. If just limiting the aggregate size, this would be
 *	possible with a buf_size of 8:
 *	 - TX: 1.....7
 *	 - RX:  2....7 (lost frame #1)
 *	 - TX:        8..1...
 *	which is invalid since #1 was now re-transmitted well past the
 *	buffer size of 8. Correct ways to retransmit #1 would be:
 *	 - TX:       1 or 18 or 81
 *	Even "189" would be wrong since 1 could be lost again.
 *
 *	Returns a negative error code on failure.
 *	The callback can sleep.
 *
 * @get_survey: Return per-channel survey information
 *
 * @rfkill_poll: Poll rfkill hardware state. If you need this, you also
 *	need to set wiphy->rfkill_poll to %true before registration,
 *	and need to call wiphy_rfkill_set_hw_state() in the callback.
 *	The callback can sleep.
 *
 * @set_coverage_class: Set slot time for given coverage class as specified
 *	in IEEE 802.11-2007 section 17.3.8.6 and modify ACK timeout
 *	accordingly; coverage class equals to -1 to enable ACK timeout
 *	estimation algorithm (dynack). To disable dynack set valid value for
 *	coverage class. This callback is not required and may sleep.
 *
 * @testmode_cmd: Implement a cfg80211 test mode command. The passed @vif may
 *	be %NULL. The callback can sleep.
 * @testmode_dump: Implement a cfg80211 test mode dump. The callback can sleep.
 *
 * @flush: Flush all pending frames from the hardware queue, making sure
 *	that the hardware queues are empty. The @queues parameter is a bitmap
 *	of queues to flush, which is useful if different virtual interfaces
 *	use different hardware queues; it may also indicate all queues.
 *	If the parameter @drop is set to %true, pending frames may be dropped.
 *	Note that vif can be NULL.
 *	The callback can sleep.
 *
 * @channel_switch: Drivers that need (or want) to offload the channel
 *	switch operation for CSAs received from the AP may implement this
 *	callback. They must then call ieee80211_chswitch_done() to indicate
 *	completion of the channel switch.
 *
 * @set_antenna: Set antenna configuration (tx_ant, rx_ant) on the device.
 *	Parameters are bitmaps of allowed antennas to use for TX/RX. Drivers may
 *	reject TX/RX mask combinations they cannot support by returning -EINVAL
 *	(also see nl80211.h @NL80211_ATTR_WIPHY_ANTENNA_TX).
 *
 * @get_antenna: Get current antenna configuration from device (tx_ant, rx_ant).
 *
 * @remain_on_channel: Starts an off-channel period on the given channel, must
 *	call back to ieee80211_ready_on_channel() when on that channel. Note
 *	that normal channel traffic is not stopped as this is intended for hw
 *	offload. Frames to transmit on the off-channel channel are transmitted
 *	normally except for the %IEEE80211_TX_CTL_TX_OFFCHAN flag. When the
 *	duration (which will always be non-zero) expires, the driver must call
 *	ieee80211_remain_on_channel_expired().
 *	Note that this callback may be called while the device is in IDLE and
 *	must be accepted in this case.
 *	This callback may sleep.
 * @cancel_remain_on_channel: Requests that an ongoing off-channel period is
 *	aborted before it expires. This callback may sleep.
 *
 * @set_ringparam: Set tx and rx ring sizes.
 *
 * @get_ringparam: Get tx and rx ring current and maximum sizes.
 *
 * @tx_frames_pending: Check if there is any pending frame in the hardware
 *	queues before entering power save.
 *
 * @set_bitrate_mask: Set a mask of rates to be used for rate control selection
 *	when transmitting a frame. Currently only legacy rates are handled.
 *	The callback can sleep.
 * @event_callback: Notify driver about any event in mac80211. See
 *	&enum ieee80211_event_type for the different types.
 *	The callback can sleep.
 *
 * @release_buffered_frames: Release buffered frames according to the given
 *	parameters. In the case where the driver buffers some frames for
 *	sleeping stations mac80211 will use this callback to tell the driver
 *	to release some frames, either for PS-poll or uAPSD.
 *	Note that if the @more_data parameter is %false the driver must check
 *	if there are more frames on the given TIDs, and if there are more than
 *	the frames being released then it must still set the more-data bit in
 *	the frame. If the @more_data parameter is %true, then of course the
 *	more-data bit must always be set.
 *	The @tids parameter tells the driver which TIDs to release frames
 *	from, for PS-poll it will always have only a single bit set.
 *	In the case this is used for a PS-poll initiated release, the
 *	@num_frames parameter will always be 1 so code can be shared. In
 *	this case the driver must also set %IEEE80211_TX_STATUS_EOSP flag
 *	on the TX status (and must report TX status) so that the PS-poll
 *	period is properly ended. This is used to avoid sending multiple
 *	responses for a retried PS-poll frame.
 *	In the case this is used for uAPSD, the @num_frames parameter may be
 *	bigger than one, but the driver may send fewer frames (it must send
 *	at least one, however). In this case it is also responsible for
 *	setting the EOSP flag in the QoS header of the frames. Also, when the
 *	service period ends, the driver must set %IEEE80211_TX_STATUS_EOSP
 *	on the last frame in the SP. Alternatively, it may call the function
 *	ieee80211_sta_eosp() to inform mac80211 of the end of the SP.
 *	This callback must be atomic.
 * @allow_buffered_frames: Prepare device to allow the given number of frames
 *	to go out to the given station. The frames will be sent by mac80211
 *	via the usual TX path after this call. The TX information for frames
 *	released will also have the %IEEE80211_TX_CTL_NO_PS_BUFFER flag set
 *	and the last one will also have %IEEE80211_TX_STATUS_EOSP set. In case
 *	frames from multiple TIDs are released and the driver might reorder
 *	them between the TIDs, it must set the %IEEE80211_TX_STATUS_EOSP flag
 *	on the last frame and clear it on all others and also handle the EOSP
 *	bit in the QoS header correctly. Alternatively, it can also call the
 *	ieee80211_sta_eosp() function.
 *	The @tids parameter is a bitmap and tells the driver which TIDs the
 *	frames will be on; it will at most have two bits set.
 *	This callback must be atomic.
 *
 * @get_et_sset_count:  Ethtool API to get string-set count.
 *
 * @get_et_stats:  Ethtool API to get a set of u64 stats.
 *
 * @get_et_strings:  Ethtool API to get a set of strings to describe stats
 *	and perhaps other supported types of ethtool data-sets.
 *
 * @mgd_prepare_tx: Prepare for transmitting a management frame for association
 *	before associated. In multi-channel scenarios, a virtual interface is
 *	bound to a channel before it is associated, but as it isn't associated
 *	yet it need not necessarily be given airtime, in particular since any
 *	transmission to a P2P GO needs to be synchronized against the GO's
 *	powersave state. mac80211 will call this function before transmitting a
 *	management frame prior to having successfully associated to allow the
 *	driver to give it channel time for the transmission, to get a response
 *	and to be able to synchronize with the GO.
 *	The callback will be called before each transmission and upon return
 *	mac80211 will transmit the frame right away.
 *	The callback is optional and can (should!) sleep.
 *
 * @mgd_protect_tdls_discover: Protect a TDLS discovery session. After sending
 *	a TDLS discovery-request, we expect a reply to arrive on the AP's
 *	channel. We must stay on the channel (no PSM, scan, etc.), since a TDLS
 *	setup-response is a direct packet not buffered by the AP.
 *	mac80211 will call this function just before the transmission of a TDLS
 *	discovery-request. The recommended period of protection is at least
 *	2 * (DTIM period).
 *	The callback is optional and can sleep.
 *
 * @add_chanctx: Notifies device driver about new channel context creation.
 * @remove_chanctx: Notifies device driver about channel context destruction.
 * @change_chanctx: Notifies device driver about channel context changes that
 *	may happen when combining different virtual interfaces on the same
 *	channel context with different settings
 * @assign_vif_chanctx: Notifies device driver about channel context being bound
 *	to vif. Possible use is for hw queue remapping.
 * @unassign_vif_chanctx: Notifies device driver about channel context being
 *	unbound from vif.
 * @switch_vif_chanctx: switch a number of vifs from one chanctx to
 *	another, as specified in the list of
 *	@ieee80211_vif_chanctx_switch passed to the driver, according
 *	to the mode defined in &ieee80211_chanctx_switch_mode.
 *
 * @start_ap: Start operation on the AP interface, this is called after all the
 *	information in bss_conf is set and beacon can be retrieved. A channel
 *	context is bound before this is called. Note that if the driver uses
 *	software scan or ROC, this (and @stop_ap) isn't called when the AP is
 *	just "paused" for scanning/ROC, which is indicated by the beacon being
 *	disabled/enabled via @bss_info_changed.
 * @stop_ap: Stop operation on the AP interface.
 *
 * @reconfig_complete: Called after a call to ieee80211_restart_hw() and
 *	during resume, when the reconfiguration has completed.
 *	This can help the driver implement the reconfiguration step (and
 *	indicate mac80211 is ready to receive frames).
 *	This callback may sleep.
 *
 * @ipv6_addr_change: IPv6 address assignment on the given interface changed.
 *	Currently, this is only called for managed or P2P client interfaces.
 *	This callback is optional; it must not sleep.
 *
 * @channel_switch_beacon: Starts a channel switch to a new channel.
 *	Beacons are modified to include CSA or ECSA IEs before calling this
 *	function. The corresponding count fields in these IEs must be
 *	decremented, and when they reach 1 the driver must call
 *	ieee80211_csa_finish(). Drivers which use ieee80211_beacon_get()
 *	get the csa counter decremented by mac80211, but must check if it is
 *	1 using ieee80211_csa_is_complete() after the beacon has been
 *	transmitted and then call ieee80211_csa_finish().
 *	If the CSA count starts as zero or 1, this function will not be called,
 *	since there won't be any time to beacon before the switch anyway.
 * @pre_channel_switch: This is an optional callback that is called
 *	before a channel switch procedure is started (ie. when a STA
 *	gets a CSA or an userspace initiated channel-switch), allowing
 *	the driver to prepare for the channel switch.
 * @post_channel_switch: This is an optional callback that is called
 *	after a channel switch procedure is completed, allowing the
 *	driver to go back to a normal configuration.
 *
 * @join_ibss: Join an IBSS (on an IBSS interface); this is called after all
 *	information in bss_conf is set up and the beacon can be retrieved. A
 *	channel context is bound before this is called.
 * @leave_ibss: Leave the IBSS again.
 *
 * @get_expected_throughput: extract the expected throughput towards the
 *	specified station. The returned value is expressed in Kbps. It returns 0
 *	if the RC algorithm does not have proper data to provide.
 *
 * @get_txpower: get current maximum tx power (in dBm) based on configuration
 *	and hardware limits.
 *
 * @tdls_channel_switch: Start channel-switching with a TDLS peer. The driver
 *	is responsible for continually initiating channel-switching operations
 *	and returning to the base channel for communication with the AP. The
 *	driver receives a channel-switch request template and the location of
 *	the switch-timing IE within the template as part of the invocation.
 *	The template is valid only within the call, and the driver can
 *	optionally copy the skb for further re-use.
 * @tdls_cancel_channel_switch: Stop channel-switching with a TDLS peer. Both
 *	peers must be on the base channel when the call completes.
 * @tdls_recv_channel_switch: a TDLS channel-switch related frame (request or
 *	response) has been received from a remote peer. The driver gets
 *	parameters parsed from the incoming frame and may use them to continue
 *	an ongoing channel-switch operation. In addition, a channel-switch
 *	response template is provided, together with the location of the
 *	switch-timing IE within the template. The skb can only be used within
 *	the function call.
 *
 * @wake_tx_queue: Called when new packets have been added to the queue.
 */
struct ieee80211_ops {
	void (*tx)(struct ieee80211_hw *hw,
		   struct ieee80211_tx_control *control,
		   struct sk_buff *skb);
	int (*start)(struct ieee80211_hw *hw);
	void (*stop)(struct ieee80211_hw *hw);
#ifdef CONFIG_PM
	int (*suspend)(struct ieee80211_hw *hw, struct cfg80211_wowlan *wowlan);
	int (*resume)(struct ieee80211_hw *hw);
	void (*set_wakeup)(struct ieee80211_hw *hw, bool enabled);
#endif
	int (*add_interface)(struct ieee80211_hw *hw,
			     struct ieee80211_vif *vif);
	int (*change_interface)(struct ieee80211_hw *hw,
				struct ieee80211_vif *vif,
				enum nl80211_iftype new_type, bool p2p);
	void (*remove_interface)(struct ieee80211_hw *hw,
				 struct ieee80211_vif *vif);
	int (*config)(struct ieee80211_hw *hw, u32 changed);
	void (*bss_info_changed)(struct ieee80211_hw *hw,
				 struct ieee80211_vif *vif,
				 struct ieee80211_bss_conf *info,
				 u32 changed);

	int (*start_ap)(struct ieee80211_hw *hw, struct ieee80211_vif *vif);
	void (*stop_ap)(struct ieee80211_hw *hw, struct ieee80211_vif *vif);

	u64 (*prepare_multicast)(struct ieee80211_hw *hw,
				 struct netdev_hw_addr_list *mc_list);
	void (*configure_filter)(struct ieee80211_hw *hw,
				 unsigned int changed_flags,
				 unsigned int *total_flags,
				 u64 multicast);
	int (*set_tim)(struct ieee80211_hw *hw, struct ieee80211_sta *sta,
		       bool set);
	int (*set_key)(struct ieee80211_hw *hw, enum set_key_cmd cmd,
		       struct ieee80211_vif *vif, struct ieee80211_sta *sta,
		       struct ieee80211_key_conf *key);
	void (*update_tkip_key)(struct ieee80211_hw *hw,
				struct ieee80211_vif *vif,
				struct ieee80211_key_conf *conf,
				struct ieee80211_sta *sta,
				u32 iv32, u16 *phase1key);
	void (*set_rekey_data)(struct ieee80211_hw *hw,
			       struct ieee80211_vif *vif,
			       struct cfg80211_gtk_rekey_data *data);
	void (*set_default_unicast_key)(struct ieee80211_hw *hw,
					struct ieee80211_vif *vif, int idx);
	int (*hw_scan)(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
		       struct ieee80211_scan_request *req);
	void (*cancel_hw_scan)(struct ieee80211_hw *hw,
			       struct ieee80211_vif *vif);
	int (*sched_scan_start)(struct ieee80211_hw *hw,
				struct ieee80211_vif *vif,
				struct cfg80211_sched_scan_request *req,
				struct ieee80211_scan_ies *ies);
	int (*sched_scan_stop)(struct ieee80211_hw *hw,
			       struct ieee80211_vif *vif);
	void (*sw_scan_start)(struct ieee80211_hw *hw,
			      struct ieee80211_vif *vif,
			      const u8 *mac_addr);
	void (*sw_scan_complete)(struct ieee80211_hw *hw,
				 struct ieee80211_vif *vif);
	int (*get_stats)(struct ieee80211_hw *hw,
			 struct ieee80211_low_level_stats *stats);
	void (*get_tkip_seq)(struct ieee80211_hw *hw, u8 hw_key_idx,
			     u32 *iv32, u16 *iv16);
	int (*set_frag_threshold)(struct ieee80211_hw *hw, u32 value);
	int (*set_rts_threshold)(struct ieee80211_hw *hw, u32 value);
	int (*sta_add)(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
		       struct ieee80211_sta *sta);
	int (*sta_remove)(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
			  struct ieee80211_sta *sta);
#ifdef CONFIG_MAC80211_DEBUGFS
	void (*sta_add_debugfs)(struct ieee80211_hw *hw,
				struct ieee80211_vif *vif,
				struct ieee80211_sta *sta,
				struct dentry *dir);
	void (*sta_remove_debugfs)(struct ieee80211_hw *hw,
				   struct ieee80211_vif *vif,
				   struct ieee80211_sta *sta,
				   struct dentry *dir);
#endif
	void (*sta_notify)(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
			enum sta_notify_cmd, struct ieee80211_sta *sta);
	int (*sta_state)(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
			 struct ieee80211_sta *sta,
			 enum ieee80211_sta_state old_state,
			 enum ieee80211_sta_state new_state);
	void (*sta_pre_rcu_remove)(struct ieee80211_hw *hw,
				   struct ieee80211_vif *vif,
				   struct ieee80211_sta *sta);
	void (*sta_rc_update)(struct ieee80211_hw *hw,
			      struct ieee80211_vif *vif,
			      struct ieee80211_sta *sta,
			      u32 changed);
	void (*sta_rate_tbl_update)(struct ieee80211_hw *hw,
				    struct ieee80211_vif *vif,
				    struct ieee80211_sta *sta);
	void (*sta_statistics)(struct ieee80211_hw *hw,
			       struct ieee80211_vif *vif,
			       struct ieee80211_sta *sta,
			       struct station_info *sinfo);
	int (*conf_tx)(struct ieee80211_hw *hw,
		       struct ieee80211_vif *vif, u16 ac,
		       const struct ieee80211_tx_queue_params *params);
	u64 (*get_tsf)(struct ieee80211_hw *hw, struct ieee80211_vif *vif);
	void (*set_tsf)(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
			u64 tsf);
	void (*reset_tsf)(struct ieee80211_hw *hw, struct ieee80211_vif *vif);
	int (*tx_last_beacon)(struct ieee80211_hw *hw);
	int (*ampdu_action)(struct ieee80211_hw *hw,
			    struct ieee80211_vif *vif,
			    enum ieee80211_ampdu_mlme_action action,
			    struct ieee80211_sta *sta, u16 tid, u16 *ssn,
			    u8 buf_size);
	int (*get_survey)(struct ieee80211_hw *hw, int idx,
		struct survey_info *survey);
	void (*rfkill_poll)(struct ieee80211_hw *hw);
	void (*set_coverage_class)(struct ieee80211_hw *hw, s16 coverage_class);
#ifdef CONFIG_NL80211_TESTMODE
	int (*testmode_cmd)(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
			    void *data, int len);
	int (*testmode_dump)(struct ieee80211_hw *hw, struct sk_buff *skb,
			     struct netlink_callback *cb,
			     void *data, int len);
#endif
	void (*flush)(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
		      u32 queues, bool drop);
	void (*channel_switch)(struct ieee80211_hw *hw,
			       struct ieee80211_vif *vif,
			       struct ieee80211_channel_switch *ch_switch);
	int (*set_antenna)(struct ieee80211_hw *hw, u32 tx_ant, u32 rx_ant);
	int (*get_antenna)(struct ieee80211_hw *hw, u32 *tx_ant, u32 *rx_ant);

	int (*remain_on_channel)(struct ieee80211_hw *hw,
				 struct ieee80211_vif *vif,
				 struct ieee80211_channel *chan,
				 int duration,
				 enum ieee80211_roc_type type);
	int (*cancel_remain_on_channel)(struct ieee80211_hw *hw);
	int (*set_ringparam)(struct ieee80211_hw *hw, u32 tx, u32 rx);
	void (*get_ringparam)(struct ieee80211_hw *hw,
			      u32 *tx, u32 *tx_max, u32 *rx, u32 *rx_max);
	bool (*tx_frames_pending)(struct ieee80211_hw *hw);
	int (*set_bitrate_mask)(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
				const struct cfg80211_bitrate_mask *mask);
	void (*event_callback)(struct ieee80211_hw *hw,
			       struct ieee80211_vif *vif,
			       const struct ieee80211_event *event);

	void (*allow_buffered_frames)(struct ieee80211_hw *hw,
				      struct ieee80211_sta *sta,
				      u16 tids, int num_frames,
				      enum ieee80211_frame_release_type reason,
				      bool more_data);
	void (*release_buffered_frames)(struct ieee80211_hw *hw,
					struct ieee80211_sta *sta,
					u16 tids, int num_frames,
					enum ieee80211_frame_release_type reason,
					bool more_data);

	int	(*get_et_sset_count)(struct ieee80211_hw *hw,
				     struct ieee80211_vif *vif, int sset);
	void	(*get_et_stats)(struct ieee80211_hw *hw,
				struct ieee80211_vif *vif,
				struct ethtool_stats *stats, u64 *data);
	void	(*get_et_strings)(struct ieee80211_hw *hw,
				  struct ieee80211_vif *vif,
				  u32 sset, u8 *data);

	void	(*mgd_prepare_tx)(struct ieee80211_hw *hw,
				  struct ieee80211_vif *vif);

	void	(*mgd_protect_tdls_discover)(struct ieee80211_hw *hw,
					     struct ieee80211_vif *vif);

	int (*add_chanctx)(struct ieee80211_hw *hw,
			   struct ieee80211_chanctx_conf *ctx);
	void (*remove_chanctx)(struct ieee80211_hw *hw,
			       struct ieee80211_chanctx_conf *ctx);
	void (*change_chanctx)(struct ieee80211_hw *hw,
			       struct ieee80211_chanctx_conf *ctx,
			       u32 changed);
	int (*assign_vif_chanctx)(struct ieee80211_hw *hw,
				  struct ieee80211_vif *vif,
				  struct ieee80211_chanctx_conf *ctx);
	void (*unassign_vif_chanctx)(struct ieee80211_hw *hw,
				     struct ieee80211_vif *vif,
				     struct ieee80211_chanctx_conf *ctx);
	int (*switch_vif_chanctx)(struct ieee80211_hw *hw,
				  struct ieee80211_vif_chanctx_switch *vifs,
				  int n_vifs,
				  enum ieee80211_chanctx_switch_mode mode);

	void (*reconfig_complete)(struct ieee80211_hw *hw,
				  enum ieee80211_reconfig_type reconfig_type);

#if IS_ENABLED(CONFIG_IPV6)
	void (*ipv6_addr_change)(struct ieee80211_hw *hw,
				 struct ieee80211_vif *vif,
				 struct inet6_dev *idev);
#endif
	void (*channel_switch_beacon)(struct ieee80211_hw *hw,
				      struct ieee80211_vif *vif,
				      struct cfg80211_chan_def *chandef);
	int (*pre_channel_switch)(struct ieee80211_hw *hw,
				  struct ieee80211_vif *vif,
				  struct ieee80211_channel_switch *ch_switch);

	int (*post_channel_switch)(struct ieee80211_hw *hw,
				   struct ieee80211_vif *vif);

	int (*join_ibss)(struct ieee80211_hw *hw, struct ieee80211_vif *vif);
	void (*leave_ibss)(struct ieee80211_hw *hw, struct ieee80211_vif *vif);
	u32 (*get_expected_throughput)(struct ieee80211_sta *sta);
	int (*get_txpower)(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
			   int *dbm);

	int (*tdls_channel_switch)(struct ieee80211_hw *hw,
				   struct ieee80211_vif *vif,
				   struct ieee80211_sta *sta, u8 oper_class,
				   struct cfg80211_chan_def *chandef,
				   struct sk_buff *tmpl_skb, u32 ch_sw_tm_ie);
	void (*tdls_cancel_channel_switch)(struct ieee80211_hw *hw,
					   struct ieee80211_vif *vif,
					   struct ieee80211_sta *sta);
	void (*tdls_recv_channel_switch)(struct ieee80211_hw *hw,
					 struct ieee80211_vif *vif,
					 struct ieee80211_tdls_ch_sw_params *params);

	void (*wake_tx_queue)(struct ieee80211_hw *hw,
			      struct ieee80211_txq *txq);
};

/**
 * ieee80211_alloc_hw_nm - Allocate a new hardware device
 *
 * This must be called once for each hardware device. The returned pointer
 * must be used to refer to this device when calling other functions.
 * mac80211 allocates a private data area for the driver pointed to by
 * @priv in &struct ieee80211_hw, the size of this area is given as
 * @priv_data_len.
 *
 * @priv_data_len: length of private data
 * @ops: callbacks for this device
 * @requested_name: Requested name for this device.
 *	NULL is valid value, and means use the default naming (phy%d)
 *
 * Return: A pointer to the new hardware device, or %NULL on error.
 */
struct ieee80211_hw *ieee80211_alloc_hw_nm(size_t priv_data_len,
					   const struct ieee80211_ops *ops,
					   const char *requested_name);

/**
 * ieee80211_alloc_hw - Allocate a new hardware device
 *
 * This must be called once for each hardware device. The returned pointer
 * must be used to refer to this device when calling other functions.
 * mac80211 allocates a private data area for the driver pointed to by
 * @priv in &struct ieee80211_hw, the size of this area is given as
 * @priv_data_len.
 *
 * @priv_data_len: length of private data
 * @ops: callbacks for this device
 *
 * Return: A pointer to the new hardware device, or %NULL on error.
 */
static inline
struct ieee80211_hw *ieee80211_alloc_hw(size_t priv_data_len,
					const struct ieee80211_ops *ops)
{
	return ieee80211_alloc_hw_nm(priv_data_len, ops, NULL);
}

/**
 * ieee80211_register_hw - Register hardware device
 *
 * You must call this function before any other functions in
 * mac80211. Note that before a hardware can be registered, you
 * need to fill the contained wiphy's information.
 *
 * @hw: the device to register as returned by ieee80211_alloc_hw()
 *
 * Return: 0 on success. An error code otherwise.
 */
int ieee80211_register_hw(struct ieee80211_hw *hw);

/**
 * struct ieee80211_tpt_blink - throughput blink description
 * @throughput: throughput in Kbit/sec
 * @blink_time: blink time in milliseconds
 *	(full cycle, ie. one off + one on period)
 */
struct ieee80211_tpt_blink {
	int throughput;
	int blink_time;
};

/**
 * enum ieee80211_tpt_led_trigger_flags - throughput trigger flags
 * @IEEE80211_TPT_LEDTRIG_FL_RADIO: enable blinking with radio
 * @IEEE80211_TPT_LEDTRIG_FL_WORK: enable blinking when working
 * @IEEE80211_TPT_LEDTRIG_FL_CONNECTED: enable blinking when at least one
 *	interface is connected in some way, including being an AP
 */
enum ieee80211_tpt_led_trigger_flags {
	IEEE80211_TPT_LEDTRIG_FL_RADIO		= BIT(0),
	IEEE80211_TPT_LEDTRIG_FL_WORK		= BIT(1),
	IEEE80211_TPT_LEDTRIG_FL_CONNECTED	= BIT(2),
};

#ifdef CONFIG_MAC80211_LEDS
char *__ieee80211_get_tx_led_name(struct ieee80211_hw *hw);
char *__ieee80211_get_rx_led_name(struct ieee80211_hw *hw);
char *__ieee80211_get_assoc_led_name(struct ieee80211_hw *hw);
char *__ieee80211_get_radio_led_name(struct ieee80211_hw *hw);
char *__ieee80211_create_tpt_led_trigger(struct ieee80211_hw *hw,
					 unsigned int flags,
					 const struct ieee80211_tpt_blink *blink_table,
					 unsigned int blink_table_len);
#endif
/**
 * ieee80211_get_tx_led_name - get name of TX LED
 *
 * mac80211 creates a transmit LED trigger for each wireless hardware
 * that can be used to drive LEDs if your driver registers a LED device.
 * This function returns the name (or %NULL if not configured for LEDs)
 * of the trigger so you can automatically link the LED device.
 *
 * @hw: the hardware to get the LED trigger name for
 *
 * Return: The name of the LED trigger. %NULL if not configured for LEDs.
 */
static inline char *ieee80211_get_tx_led_name(struct ieee80211_hw *hw)
{
#ifdef CONFIG_MAC80211_LEDS
	return __ieee80211_get_tx_led_name(hw);
#else
	return NULL;
#endif
}

/**
 * ieee80211_get_rx_led_name - get name of RX LED
 *
 * mac80211 creates a receive LED trigger for each wireless hardware
 * that can be used to drive LEDs if your driver registers a LED device.
 * This function returns the name (or %NULL if not configured for LEDs)
 * of the trigger so you can automatically link the LED device.
 *
 * @hw: the hardware to get the LED trigger name for
 *
 * Return: The name of the LED trigger. %NULL if not configured for LEDs.
 */
static inline char *ieee80211_get_rx_led_name(struct ieee80211_hw *hw)
{
#ifdef CONFIG_MAC80211_LEDS
	return __ieee80211_get_rx_led_name(hw);
#else
	return NULL;
#endif
}

/**
 * ieee80211_get_assoc_led_name - get name of association LED
 *
 * mac80211 creates a association LED trigger for each wireless hardware
 * that can be used to drive LEDs if your driver registers a LED device.
 * This function returns the name (or %NULL if not configured for LEDs)
 * of the trigger so you can automatically link the LED device.
 *
 * @hw: the hardware to get the LED trigger name for
 *
 * Return: The name of the LED trigger. %NULL if not configured for LEDs.
 */
static inline char *ieee80211_get_assoc_led_name(struct ieee80211_hw *hw)
{
#ifdef CONFIG_MAC80211_LEDS
	return __ieee80211_get_assoc_led_name(hw);
#else
	return NULL;
#endif
}

/**
 * ieee80211_get_radio_led_name - get name of radio LED
 *
 * mac80211 creates a radio change LED trigger for each wireless hardware
 * that can be used to drive LEDs if your driver registers a LED device.
 * This function returns the name (or %NULL if not configured for LEDs)
 * of the trigger so you can automatically link the LED device.
 *
 * @hw: the hardware to get the LED trigger name for
 *
 * Return: The name of the LED trigger. %NULL if not configured for LEDs.
 */
static inline char *ieee80211_get_radio_led_name(struct ieee80211_hw *hw)
{
#ifdef CONFIG_MAC80211_LEDS
	return __ieee80211_get_radio_led_name(hw);
#else
	return NULL;
#endif
}

/**
 * ieee80211_create_tpt_led_trigger - create throughput LED trigger
 * @hw: the hardware to create the trigger for
 * @flags: trigger flags, see &enum ieee80211_tpt_led_trigger_flags
 * @blink_table: the blink table -- needs to be ordered by throughput
 * @blink_table_len: size of the blink table
 *
 * Return: %NULL (in case of error, or if no LED triggers are
 * configured) or the name of the new trigger.
 *
 * Note: This function must be called before ieee80211_register_hw().
 */
static inline char *
ieee80211_create_tpt_led_trigger(struct ieee80211_hw *hw, unsigned int flags,
				 const struct ieee80211_tpt_blink *blink_table,
				 unsigned int blink_table_len)
{
#ifdef CONFIG_MAC80211_LEDS
	return __ieee80211_create_tpt_led_trigger(hw, flags, blink_table,
						  blink_table_len);
#else
	return NULL;
#endif
}

/**
 * ieee80211_unregister_hw - Unregister a hardware device
 *
 * This function instructs mac80211 to free allocated resources
 * and unregister netdevices from the networking subsystem.
 *
 * @hw: the hardware to unregister
 */
void ieee80211_unregister_hw(struct ieee80211_hw *hw);

/**
 * ieee80211_free_hw - free hardware descriptor
 *
 * This function frees everything that was allocated, including the
 * private data for the driver. You must call ieee80211_unregister_hw()
 * before calling this function.
 *
 * @hw: the hardware to free
 */
void ieee80211_free_hw(struct ieee80211_hw *hw);

/**
 * ieee80211_restart_hw - restart hardware completely
 *
 * Call this function when the hardware was restarted for some reason
 * (hardware error, ...) and the driver is unable to restore its state
 * by itself. mac80211 assumes that at this point the driver/hardware
 * is completely uninitialised and stopped, it starts the process by
 * calling the ->start() operation. The driver will need to reset all
 * internal state that it has prior to calling this function.
 *
 * @hw: the hardware to restart
 */
void ieee80211_restart_hw(struct ieee80211_hw *hw);

/**
 * ieee80211_napi_add - initialize mac80211 NAPI context
 * @hw: the hardware to initialize the NAPI context on
 * @napi: the NAPI context to initialize
 * @napi_dev: dummy NAPI netdevice, here to not waste the space if the
 *	driver doesn't use NAPI
 * @poll: poll function
 * @weight: default weight
 *
 * See also netif_napi_add().
 */
void ieee80211_napi_add(struct ieee80211_hw *hw, struct napi_struct *napi,
			struct net_device *napi_dev,
			int (*poll)(struct napi_struct *, int),
			int weight);

/**
 * ieee80211_rx - receive frame
 *
 * Use this function to hand received frames to mac80211. The receive
 * buffer in @skb must start with an IEEE 802.11 header. In case of a
 * paged @skb is used, the driver is recommended to put the ieee80211
 * header of the frame on the linear part of the @skb to avoid memory
 * allocation and/or memcpy by the stack.
 *
 * This function may not be called in IRQ context. Calls to this function
 * for a single hardware must be synchronized against each other. Calls to
 * this function, ieee80211_rx_ni() and ieee80211_rx_irqsafe() may not be
 * mixed for a single hardware. Must not run concurrently with
 * ieee80211_tx_status() or ieee80211_tx_status_ni().
 *
 * In process context use instead ieee80211_rx_ni().
 *
 * @hw: the hardware this frame came in on
 * @skb: the buffer to receive, owned by mac80211 after this call
 */
void ieee80211_rx(struct ieee80211_hw *hw, struct sk_buff *skb);

/**
 * ieee80211_rx_irqsafe - receive frame
 *
 * Like ieee80211_rx() but can be called in IRQ context
 * (internally defers to a tasklet.)
 *
 * Calls to this function, ieee80211_rx() or ieee80211_rx_ni() may not
 * be mixed for a single hardware.Must not run concurrently with
 * ieee80211_tx_status() or ieee80211_tx_status_ni().
 *
 * @hw: the hardware this frame came in on
 * @skb: the buffer to receive, owned by mac80211 after this call
 */
void ieee80211_rx_irqsafe(struct ieee80211_hw *hw, struct sk_buff *skb);

/**
 * ieee80211_rx_ni - receive frame (in process context)
 *
 * Like ieee80211_rx() but can be called in process context
 * (internally disables bottom halves).
 *
 * Calls to this function, ieee80211_rx() and ieee80211_rx_irqsafe() may
 * not be mixed for a single hardware. Must not run concurrently with
 * ieee80211_tx_status() or ieee80211_tx_status_ni().
 *
 * @hw: the hardware this frame came in on
 * @skb: the buffer to receive, owned by mac80211 after this call
 */
static inline void ieee80211_rx_ni(struct ieee80211_hw *hw,
				   struct sk_buff *skb)
{
	local_bh_disable();
	ieee80211_rx(hw, skb);
	local_bh_enable();
}

/**
 * ieee80211_sta_ps_transition - PS transition for connected sta
 *
 * When operating in AP mode with the %IEEE80211_HW_AP_LINK_PS
 * flag set, use this function to inform mac80211 about a connected station
 * entering/leaving PS mode.
 *
 * This function may not be called in IRQ context or with softirqs enabled.
 *
 * Calls to this function for a single hardware must be synchronized against
 * each other.
 *
 * @sta: currently connected sta
 * @start: start or stop PS
 *
 * Return: 0 on success. -EINVAL when the requested PS mode is already set.
 */
int ieee80211_sta_ps_transition(struct ieee80211_sta *sta, bool start);

/**
 * ieee80211_sta_ps_transition_ni - PS transition for connected sta
 *                                  (in process context)
 *
 * Like ieee80211_sta_ps_transition() but can be called in process context
 * (internally disables bottom halves). Concurrent call restriction still
 * applies.
 *
 * @sta: currently connected sta
 * @start: start or stop PS
 *
 * Return: Like ieee80211_sta_ps_transition().
 */
static inline int ieee80211_sta_ps_transition_ni(struct ieee80211_sta *sta,
						  bool start)
{
	int ret;

	local_bh_disable();
	ret = ieee80211_sta_ps_transition(sta, start);
	local_bh_enable();

	return ret;
}

/*
 * The TX headroom reserved by mac80211 for its own tx_status functions.
 * This is enough for the radiotap header.
 */
#define IEEE80211_TX_STATUS_HEADROOM	14

/**
 * ieee80211_sta_set_buffered - inform mac80211 about driver-buffered frames
 * @sta: &struct ieee80211_sta pointer for the sleeping station
 * @tid: the TID that has buffered frames
 * @buffered: indicates whether or not frames are buffered for this TID
 *
 * If a driver buffers frames for a powersave station instead of passing
 * them back to mac80211 for retransmission, the station may still need
 * to be told that there are buffered frames via the TIM bit.
 *
 * This function informs mac80211 whether or not there are frames that are
 * buffered in the driver for a given TID; mac80211 can then use this data
 * to set the TIM bit (NOTE: This may call back into the driver's set_tim
 * call! Beware of the locking!)
 *
 * If all frames are released to the station (due to PS-poll or uAPSD)
 * then the driver needs to inform mac80211 that there no longer are
 * frames buffered. However, when the station wakes up mac80211 assumes
 * that all buffered frames will be transmitted and clears this data,
 * drivers need to make sure they inform mac80211 about all buffered
 * frames on the sleep transition (sta_notify() with %STA_NOTIFY_SLEEP).
 *
 * Note that technically mac80211 only needs to know this per AC, not per
 * TID, but since driver buffering will inevitably happen per TID (since
 * it is related to aggregation) it is easier to make mac80211 map the
 * TID to the AC as required instead of keeping track in all drivers that
 * use this API.
 */
void ieee80211_sta_set_buffered(struct ieee80211_sta *sta,
				u8 tid, bool buffered);

/**
 * ieee80211_get_tx_rates - get the selected transmit rates for a packet
 *
 * Call this function in a driver with per-packet rate selection support
 * to combine the rate info in the packet tx info with the most recent
 * rate selection table for the station entry.
 *
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 * @sta: the receiver station to which this packet is sent.
 * @skb: the frame to be transmitted.
 * @dest: buffer for extracted rate/retry information
 * @max_rates: maximum number of rates to fetch
 */
void ieee80211_get_tx_rates(struct ieee80211_vif *vif,
			    struct ieee80211_sta *sta,
			    struct sk_buff *skb,
			    struct ieee80211_tx_rate *dest,
			    int max_rates);

/**
 * ieee80211_tx_status - transmit status callback
 *
 * Call this function for all transmitted frames after they have been
 * transmitted. It is permissible to not call this function for
 * multicast frames but this can affect statistics.
 *
 * This function may not be called in IRQ context. Calls to this function
 * for a single hardware must be synchronized against each other. Calls
 * to this function, ieee80211_tx_status_ni() and ieee80211_tx_status_irqsafe()
 * may not be mixed for a single hardware. Must not run concurrently with
 * ieee80211_rx() or ieee80211_rx_ni().
 *
 * @hw: the hardware the frame was transmitted by
 * @skb: the frame that was transmitted, owned by mac80211 after this call
 */
void ieee80211_tx_status(struct ieee80211_hw *hw,
			 struct sk_buff *skb);

/**
 * ieee80211_tx_status_noskb - transmit status callback without skb
 *
 * This function can be used as a replacement for ieee80211_tx_status
 * in drivers that cannot reliably map tx status information back to
 * specific skbs.
 *
 * Calls to this function for a single hardware must be synchronized
 * against each other. Calls to this function, ieee80211_tx_status_ni()
 * and ieee80211_tx_status_irqsafe() may not be mixed for a single hardware.
 *
 * @hw: the hardware the frame was transmitted by
 * @sta: the receiver station to which this packet is sent
 *	(NULL for multicast packets)
 * @info: tx status information
 */
void ieee80211_tx_status_noskb(struct ieee80211_hw *hw,
			       struct ieee80211_sta *sta,
			       struct ieee80211_tx_info *info);

/**
 * ieee80211_tx_status_ni - transmit status callback (in process context)
 *
 * Like ieee80211_tx_status() but can be called in process context.
 *
 * Calls to this function, ieee80211_tx_status() and
 * ieee80211_tx_status_irqsafe() may not be mixed
 * for a single hardware.
 *
 * @hw: the hardware the frame was transmitted by
 * @skb: the frame that was transmitted, owned by mac80211 after this call
 */
static inline void ieee80211_tx_status_ni(struct ieee80211_hw *hw,
					  struct sk_buff *skb)
{
	local_bh_disable();
	ieee80211_tx_status(hw, skb);
	local_bh_enable();
}

/**
 * ieee80211_tx_status_irqsafe - IRQ-safe transmit status callback
 *
 * Like ieee80211_tx_status() but can be called in IRQ context
 * (internally defers to a tasklet.)
 *
 * Calls to this function, ieee80211_tx_status() and
 * ieee80211_tx_status_ni() may not be mixed for a single hardware.
 *
 * @hw: the hardware the frame was transmitted by
 * @skb: the frame that was transmitted, owned by mac80211 after this call
 */
void ieee80211_tx_status_irqsafe(struct ieee80211_hw *hw,
				 struct sk_buff *skb);

/**
 * ieee80211_report_low_ack - report non-responding station
 *
 * When operating in AP-mode, call this function to report a non-responding
 * connected STA.
 *
 * @sta: the non-responding connected sta
 * @num_packets: number of packets sent to @sta without a response
 */
void ieee80211_report_low_ack(struct ieee80211_sta *sta, u32 num_packets);

#define IEEE80211_MAX_CSA_COUNTERS_NUM 2

/**
 * struct ieee80211_mutable_offsets - mutable beacon offsets
 * @tim_offset: position of TIM element
 * @tim_length: size of TIM element
 * @csa_counter_offs: array of IEEE80211_MAX_CSA_COUNTERS_NUM offsets
 *	to CSA counters.  This array can contain zero values which
 *	should be ignored.
 */
struct ieee80211_mutable_offsets {
	u16 tim_offset;
	u16 tim_length;

	u16 csa_counter_offs[IEEE80211_MAX_CSA_COUNTERS_NUM];
};

/**
 * ieee80211_beacon_get_template - beacon template generation function
 * @hw: pointer obtained from ieee80211_alloc_hw().
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 * @offs: &struct ieee80211_mutable_offsets pointer to struct that will
 *	receive the offsets that may be updated by the driver.
 *
 * If the driver implements beaconing modes, it must use this function to
 * obtain the beacon template.
 *
 * This function should be used if the beacon frames are generated by the
 * device, and then the driver must use the returned beacon as the template
 * The driver or the device are responsible to update the DTIM and, when
 * applicable, the CSA count.
 *
 * The driver is responsible for freeing the returned skb.
 *
 * Return: The beacon template. %NULL on error.
 */
struct sk_buff *
ieee80211_beacon_get_template(struct ieee80211_hw *hw,
			      struct ieee80211_vif *vif,
			      struct ieee80211_mutable_offsets *offs);

/**
 * ieee80211_beacon_get_tim - beacon generation function
 * @hw: pointer obtained from ieee80211_alloc_hw().
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 * @tim_offset: pointer to variable that will receive the TIM IE offset.
 *	Set to 0 if invalid (in non-AP modes).
 * @tim_length: pointer to variable that will receive the TIM IE length,
 *	(including the ID and length bytes!).
 *	Set to 0 if invalid (in non-AP modes).
 *
 * If the driver implements beaconing modes, it must use this function to
 * obtain the beacon frame.
 *
 * If the beacon frames are generated by the host system (i.e., not in
 * hardware/firmware), the driver uses this function to get each beacon
 * frame from mac80211 -- it is responsible for calling this function exactly
 * once before the beacon is needed (e.g. based on hardware interrupt).
 *
 * The driver is responsible for freeing the returned skb.
 *
 * Return: The beacon template. %NULL on error.
 */
struct sk_buff *ieee80211_beacon_get_tim(struct ieee80211_hw *hw,
					 struct ieee80211_vif *vif,
					 u16 *tim_offset, u16 *tim_length);

/**
 * ieee80211_beacon_get - beacon generation function
 * @hw: pointer obtained from ieee80211_alloc_hw().
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 *
 * See ieee80211_beacon_get_tim().
 *
 * Return: See ieee80211_beacon_get_tim().
 */
static inline struct sk_buff *ieee80211_beacon_get(struct ieee80211_hw *hw,
						   struct ieee80211_vif *vif)
{
	return ieee80211_beacon_get_tim(hw, vif, NULL, NULL);
}

/**
 * ieee80211_csa_update_counter - request mac80211 to decrement the csa counter
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 *
 * The csa counter should be updated after each beacon transmission.
 * This function is called implicitly when
 * ieee80211_beacon_get/ieee80211_beacon_get_tim are called, however if the
 * beacon frames are generated by the device, the driver should call this
 * function after each beacon transmission to sync mac80211's csa counters.
 *
 * Return: new csa counter value
 */
u8 ieee80211_csa_update_counter(struct ieee80211_vif *vif);

/**
 * ieee80211_csa_finish - notify mac80211 about channel switch
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 *
 * After a channel switch announcement was scheduled and the counter in this
 * announcement hits 1, this function must be called by the driver to
 * notify mac80211 that the channel can be changed.
 */
void ieee80211_csa_finish(struct ieee80211_vif *vif);

/**
 * ieee80211_csa_is_complete - find out if counters reached 1
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 *
 * This function returns whether the channel switch counters reached zero.
 */
bool ieee80211_csa_is_complete(struct ieee80211_vif *vif);


/**
 * ieee80211_proberesp_get - retrieve a Probe Response template
 * @hw: pointer obtained from ieee80211_alloc_hw().
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 *
 * Creates a Probe Response template which can, for example, be uploaded to
 * hardware. The destination address should be set by the caller.
 *
 * Can only be called in AP mode.
 *
 * Return: The Probe Response template. %NULL on error.
 */
struct sk_buff *ieee80211_proberesp_get(struct ieee80211_hw *hw,
					struct ieee80211_vif *vif);

/**
 * ieee80211_pspoll_get - retrieve a PS Poll template
 * @hw: pointer obtained from ieee80211_alloc_hw().
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 *
 * Creates a PS Poll a template which can, for example, uploaded to
 * hardware. The template must be updated after association so that correct
 * AID, BSSID and MAC address is used.
 *
 * Note: Caller (or hardware) is responsible for setting the
 * &IEEE80211_FCTL_PM bit.
 *
 * Return: The PS Poll template. %NULL on error.
 */
struct sk_buff *ieee80211_pspoll_get(struct ieee80211_hw *hw,
				     struct ieee80211_vif *vif);

/**
 * ieee80211_nullfunc_get - retrieve a nullfunc template
 * @hw: pointer obtained from ieee80211_alloc_hw().
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 *
 * Creates a Nullfunc template which can, for example, uploaded to
 * hardware. The template must be updated after association so that correct
 * BSSID and address is used.
 *
 * Note: Caller (or hardware) is responsible for setting the
 * &IEEE80211_FCTL_PM bit as well as Duration and Sequence Control fields.
 *
 * Return: The nullfunc template. %NULL on error.
 */
struct sk_buff *ieee80211_nullfunc_get(struct ieee80211_hw *hw,
				       struct ieee80211_vif *vif);

/**
 * ieee80211_probereq_get - retrieve a Probe Request template
 * @hw: pointer obtained from ieee80211_alloc_hw().
 * @src_addr: source MAC address
 * @ssid: SSID buffer
 * @ssid_len: length of SSID
 * @tailroom: tailroom to reserve at end of SKB for IEs
 *
 * Creates a Probe Request template which can, for example, be uploaded to
 * hardware.
 *
 * Return: The Probe Request template. %NULL on error.
 */
struct sk_buff *ieee80211_probereq_get(struct ieee80211_hw *hw,
				       const u8 *src_addr,
				       const u8 *ssid, size_t ssid_len,
				       size_t tailroom);

/**
 * ieee80211_rts_get - RTS frame generation function
 * @hw: pointer obtained from ieee80211_alloc_hw().
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 * @frame: pointer to the frame that is going to be protected by the RTS.
 * @frame_len: the frame length (in octets).
 * @frame_txctl: &struct ieee80211_tx_info of the frame.
 * @rts: The buffer where to store the RTS frame.
 *
 * If the RTS frames are generated by the host system (i.e., not in
 * hardware/firmware), the low-level driver uses this function to receive
 * the next RTS frame from the 802.11 code. The low-level is responsible
 * for calling this function before and RTS frame is needed.
 */
void ieee80211_rts_get(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
		       const void *frame, size_t frame_len,
		       const struct ieee80211_tx_info *frame_txctl,
		       struct ieee80211_rts *rts);

/**
 * ieee80211_rts_duration - Get the duration field for an RTS frame
 * @hw: pointer obtained from ieee80211_alloc_hw().
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 * @frame_len: the length of the frame that is going to be protected by the RTS.
 * @frame_txctl: &struct ieee80211_tx_info of the frame.
 *
 * If the RTS is generated in firmware, but the host system must provide
 * the duration field, the low-level driver uses this function to receive
 * the duration field value in little-endian byteorder.
 *
 * Return: The duration.
 */
__le16 ieee80211_rts_duration(struct ieee80211_hw *hw,
			      struct ieee80211_vif *vif, size_t frame_len,
			      const struct ieee80211_tx_info *frame_txctl);

/**
 * ieee80211_ctstoself_get - CTS-to-self frame generation function
 * @hw: pointer obtained from ieee80211_alloc_hw().
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 * @frame: pointer to the frame that is going to be protected by the CTS-to-self.
 * @frame_len: the frame length (in octets).
 * @frame_txctl: &struct ieee80211_tx_info of the frame.
 * @cts: The buffer where to store the CTS-to-self frame.
 *
 * If the CTS-to-self frames are generated by the host system (i.e., not in
 * hardware/firmware), the low-level driver uses this function to receive
 * the next CTS-to-self frame from the 802.11 code. The low-level is responsible
 * for calling this function before and CTS-to-self frame is needed.
 */
void ieee80211_ctstoself_get(struct ieee80211_hw *hw,
			     struct ieee80211_vif *vif,
			     const void *frame, size_t frame_len,
			     const struct ieee80211_tx_info *frame_txctl,
			     struct ieee80211_cts *cts);

/**
 * ieee80211_ctstoself_duration - Get the duration field for a CTS-to-self frame
 * @hw: pointer obtained from ieee80211_alloc_hw().
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 * @frame_len: the length of the frame that is going to be protected by the CTS-to-self.
 * @frame_txctl: &struct ieee80211_tx_info of the frame.
 *
 * If the CTS-to-self is generated in firmware, but the host system must provide
 * the duration field, the low-level driver uses this function to receive
 * the duration field value in little-endian byteorder.
 *
 * Return: The duration.
 */
__le16 ieee80211_ctstoself_duration(struct ieee80211_hw *hw,
				    struct ieee80211_vif *vif,
				    size_t frame_len,
				    const struct ieee80211_tx_info *frame_txctl);

/**
 * ieee80211_generic_frame_duration - Calculate the duration field for a frame
 * @hw: pointer obtained from ieee80211_alloc_hw().
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 * @band: the band to calculate the frame duration on
 * @frame_len: the length of the frame.
 * @rate: the rate at which the frame is going to be transmitted.
 *
 * Calculate the duration field of some generic frame, given its
 * length and transmission rate (in 100kbps).
 *
 * Return: The duration.
 */
__le16 ieee80211_generic_frame_duration(struct ieee80211_hw *hw,
					struct ieee80211_vif *vif,
					enum ieee80211_band band,
					size_t frame_len,
					struct ieee80211_rate *rate);

/**
 * ieee80211_get_buffered_bc - accessing buffered broadcast and multicast frames
 * @hw: pointer as obtained from ieee80211_alloc_hw().
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 *
 * Function for accessing buffered broadcast and multicast frames. If
 * hardware/firmware does not implement buffering of broadcast/multicast
 * frames when power saving is used, 802.11 code buffers them in the host
 * memory. The low-level driver uses this function to fetch next buffered
 * frame. In most cases, this is used when generating beacon frame.
 *
 * Return: A pointer to the next buffered skb or NULL if no more buffered
 * frames are available.
 *
 * Note: buffered frames are returned only after DTIM beacon frame was
 * generated with ieee80211_beacon_get() and the low-level driver must thus
 * call ieee80211_beacon_get() first. ieee80211_get_buffered_bc() returns
 * NULL if the previous generated beacon was not DTIM, so the low-level driver
 * does not need to check for DTIM beacons separately and should be able to
 * use common code for all beacons.
 */
struct sk_buff *
ieee80211_get_buffered_bc(struct ieee80211_hw *hw, struct ieee80211_vif *vif);

/**
 * ieee80211_get_tkip_p1k_iv - get a TKIP phase 1 key for IV32
 *
 * This function returns the TKIP phase 1 key for the given IV32.
 *
 * @keyconf: the parameter passed with the set key
 * @iv32: IV32 to get the P1K for
 * @p1k: a buffer to which the key will be written, as 5 u16 values
 */
void ieee80211_get_tkip_p1k_iv(struct ieee80211_key_conf *keyconf,
			       u32 iv32, u16 *p1k);

/**
 * ieee80211_get_tkip_p1k - get a TKIP phase 1 key
 *
 * This function returns the TKIP phase 1 key for the IV32 taken
 * from the given packet.
 *
 * @keyconf: the parameter passed with the set key
 * @skb: the packet to take the IV32 value from that will be encrypted
 *	with this P1K
 * @p1k: a buffer to which the key will be written, as 5 u16 values
 */
static inline void ieee80211_get_tkip_p1k(struct ieee80211_key_conf *keyconf,
					  struct sk_buff *skb, u16 *p1k)
{
	struct ieee80211_hdr *hdr = (struct ieee80211_hdr *)skb->data;
	const u8 *data = (u8 *)hdr + ieee80211_hdrlen(hdr->frame_control);
	u32 iv32 = get_unaligned_le32(&data[4]);

	ieee80211_get_tkip_p1k_iv(keyconf, iv32, p1k);
}

/**
 * ieee80211_get_tkip_rx_p1k - get a TKIP phase 1 key for RX
 *
 * This function returns the TKIP phase 1 key for the given IV32
 * and transmitter address.
 *
 * @keyconf: the parameter passed with the set key
 * @ta: TA that will be used with the key
 * @iv32: IV32 to get the P1K for
 * @p1k: a buffer to which the key will be written, as 5 u16 values
 */
void ieee80211_get_tkip_rx_p1k(struct ieee80211_key_conf *keyconf,
			       const u8 *ta, u32 iv32, u16 *p1k);

/**
 * ieee80211_get_tkip_p2k - get a TKIP phase 2 key
 *
 * This function computes the TKIP RC4 key for the IV values
 * in the packet.
 *
 * @keyconf: the parameter passed with the set key
 * @skb: the packet to take the IV32/IV16 values from that will be
 *	encrypted with this key
 * @p2k: a buffer to which the key will be written, 16 bytes
 */
void ieee80211_get_tkip_p2k(struct ieee80211_key_conf *keyconf,
			    struct sk_buff *skb, u8 *p2k);

/**
 * ieee80211_aes_cmac_calculate_k1_k2 - calculate the AES-CMAC sub keys
 *
 * This function computes the two AES-CMAC sub-keys, based on the
 * previously installed master key.
 *
 * @keyconf: the parameter passed with the set key
 * @k1: a buffer to be filled with the 1st sub-key
 * @k2: a buffer to be filled with the 2nd sub-key
 */
void ieee80211_aes_cmac_calculate_k1_k2(struct ieee80211_key_conf *keyconf,
					u8 *k1, u8 *k2);

/**
 * struct ieee80211_key_seq - key sequence counter
 *
 * @tkip: TKIP data, containing IV32 and IV16 in host byte order
 * @ccmp: PN data, most significant byte first (big endian,
 *	reverse order than in packet)
 * @aes_cmac: PN data, most significant byte first (big endian,
 *	reverse order than in packet)
 * @aes_gmac: PN data, most significant byte first (big endian,
 *	reverse order than in packet)
 * @gcmp: PN data, most significant byte first (big endian,
 *	reverse order than in packet)
 */
struct ieee80211_key_seq {
	union {
		struct {
			u32 iv32;
			u16 iv16;
		} tkip;
		struct {
			u8 pn[6];
		} ccmp;
		struct {
			u8 pn[6];
		} aes_cmac;
		struct {
			u8 pn[6];
		} aes_gmac;
		struct {
			u8 pn[6];
		} gcmp;
	};
};

/**
 * ieee80211_get_key_tx_seq - get key TX sequence counter
 *
 * @keyconf: the parameter passed with the set key
 * @seq: buffer to receive the sequence data
 *
 * This function allows a driver to retrieve the current TX IV/PN
 * for the given key. It must not be called if IV generation is
 * offloaded to the device.
 *
 * Note that this function may only be called when no TX processing
 * can be done concurrently, for example when queues are stopped
 * and the stop has been synchronized.
 */
void ieee80211_get_key_tx_seq(struct ieee80211_key_conf *keyconf,
			      struct ieee80211_key_seq *seq);

/**
 * ieee80211_get_key_rx_seq - get key RX sequence counter
 *
 * @keyconf: the parameter passed with the set key
 * @tid: The TID, or -1 for the management frame value (CCMP/GCMP only);
 *	the value on TID 0 is also used for non-QoS frames. For
 *	CMAC, only TID 0 is valid.
 * @seq: buffer to receive the sequence data
 *
 * This function allows a driver to retrieve the current RX IV/PNs
 * for the given key. It must not be called if IV checking is done
 * by the device and not by mac80211.
 *
 * Note that this function may only be called when no RX processing
 * can be done concurrently.
 */
void ieee80211_get_key_rx_seq(struct ieee80211_key_conf *keyconf,
			      int tid, struct ieee80211_key_seq *seq);

/**
 * ieee80211_set_key_tx_seq - set key TX sequence counter
 *
 * @keyconf: the parameter passed with the set key
 * @seq: new sequence data
 *
 * This function allows a driver to set the current TX IV/PNs for the
 * given key. This is useful when resuming from WoWLAN sleep and the
 * device may have transmitted frames using the PTK, e.g. replies to
 * ARP requests.
 *
 * Note that this function may only be called when no TX processing
 * can be done concurrently.
 */
void ieee80211_set_key_tx_seq(struct ieee80211_key_conf *keyconf,
			      struct ieee80211_key_seq *seq);

/**
 * ieee80211_set_key_rx_seq - set key RX sequence counter
 *
 * @keyconf: the parameter passed with the set key
 * @tid: The TID, or -1 for the management frame value (CCMP/GCMP only);
 *	the value on TID 0 is also used for non-QoS frames. For
 *	CMAC, only TID 0 is valid.
 * @seq: new sequence data
 *
 * This function allows a driver to set the current RX IV/PNs for the
 * given key. This is useful when resuming from WoWLAN sleep and GTK
 * rekey may have been done while suspended. It should not be called
 * if IV checking is done by the device and not by mac80211.
 *
 * Note that this function may only be called when no RX processing
 * can be done concurrently.
 */
void ieee80211_set_key_rx_seq(struct ieee80211_key_conf *keyconf,
			      int tid, struct ieee80211_key_seq *seq);

/**
 * ieee80211_remove_key - remove the given key
 * @keyconf: the parameter passed with the set key
 *
 * Remove the given key. If the key was uploaded to the hardware at the
 * time this function is called, it is not deleted in the hardware but
 * instead assumed to have been removed already.
 *
 * Note that due to locking considerations this function can (currently)
 * only be called during key iteration (ieee80211_iter_keys().)
 */
void ieee80211_remove_key(struct ieee80211_key_conf *keyconf);

/**
 * ieee80211_gtk_rekey_add - add a GTK key from rekeying during WoWLAN
 * @vif: the virtual interface to add the key on
 * @keyconf: new key data
 *
 * When GTK rekeying was done while the system was suspended, (a) new
 * key(s) will be available. These will be needed by mac80211 for proper
 * RX processing, so this function allows setting them.
 *
 * The function returns the newly allocated key structure, which will
 * have similar contents to the passed key configuration but point to
 * mac80211-owned memory. In case of errors, the function returns an
 * ERR_PTR(), use IS_ERR() etc.
 *
 * Note that this function assumes the key isn't added to hardware
 * acceleration, so no TX will be done with the key. Since it's a GTK
 * on managed (station) networks, this is true anyway. If the driver
 * calls this function from the resume callback and subsequently uses
 * the return code 1 to reconfigure the device, this key will be part
 * of the reconfiguration.
 *
 * Note that the driver should also call ieee80211_set_key_rx_seq()
 * for the new key for each TID to set up sequence counters properly.
 *
 * IMPORTANT: If this replaces a key that is present in the hardware,
 * then it will attempt to remove it during this call. In many cases
 * this isn't what you want, so call ieee80211_remove_key() first for
 * the key that's being replaced.
 */
struct ieee80211_key_conf *
ieee80211_gtk_rekey_add(struct ieee80211_vif *vif,
			struct ieee80211_key_conf *keyconf);

/**
 * ieee80211_gtk_rekey_notify - notify userspace supplicant of rekeying
 * @vif: virtual interface the rekeying was done on
 * @bssid: The BSSID of the AP, for checking association
 * @replay_ctr: the new replay counter after GTK rekeying
 * @gfp: allocation flags
 */
void ieee80211_gtk_rekey_notify(struct ieee80211_vif *vif, const u8 *bssid,
				const u8 *replay_ctr, gfp_t gfp);

/**
 * ieee80211_wake_queue - wake specific queue
 * @hw: pointer as obtained from ieee80211_alloc_hw().
 * @queue: queue number (counted from zero).
 *
 * Drivers should use this function instead of netif_wake_queue.
 */
void ieee80211_wake_queue(struct ieee80211_hw *hw, int queue);

/**
 * ieee80211_stop_queue - stop specific queue
 * @hw: pointer as obtained from ieee80211_alloc_hw().
 * @queue: queue number (counted from zero).
 *
 * Drivers should use this function instead of netif_stop_queue.
 */
void ieee80211_stop_queue(struct ieee80211_hw *hw, int queue);

/**
 * ieee80211_queue_stopped - test status of the queue
 * @hw: pointer as obtained from ieee80211_alloc_hw().
 * @queue: queue number (counted from zero).
 *
 * Drivers should use this function instead of netif_stop_queue.
 *
 * Return: %true if the queue is stopped. %false otherwise.
 */

int ieee80211_queue_stopped(struct ieee80211_hw *hw, int queue);

/**
 * ieee80211_stop_queues - stop all queues
 * @hw: pointer as obtained from ieee80211_alloc_hw().
 *
 * Drivers should use this function instead of netif_stop_queue.
 */
void ieee80211_stop_queues(struct ieee80211_hw *hw);

/**
 * ieee80211_wake_queues - wake all queues
 * @hw: pointer as obtained from ieee80211_alloc_hw().
 *
 * Drivers should use this function instead of netif_wake_queue.
 */
void ieee80211_wake_queues(struct ieee80211_hw *hw);

/**
 * ieee80211_scan_completed - completed hardware scan
 *
 * When hardware scan offload is used (i.e. the hw_scan() callback is
 * assigned) this function needs to be called by the driver to notify
 * mac80211 that the scan finished. This function can be called from
 * any context, including hardirq context.
 *
 * @hw: the hardware that finished the scan
 * @aborted: set to true if scan was aborted
 */
void ieee80211_scan_completed(struct ieee80211_hw *hw, bool aborted);

/**
 * ieee80211_sched_scan_results - got results from scheduled scan
 *
 * When a scheduled scan is running, this function needs to be called by the
 * driver whenever there are new scan results available.
 *
 * @hw: the hardware that is performing scheduled scans
 */
void ieee80211_sched_scan_results(struct ieee80211_hw *hw);

/**
 * ieee80211_sched_scan_stopped - inform that the scheduled scan has stopped
 *
 * When a scheduled scan is running, this function can be called by
 * the driver if it needs to stop the scan to perform another task.
 * Usual scenarios are drivers that cannot continue the scheduled scan
 * while associating, for instance.
 *
 * @hw: the hardware that is performing scheduled scans
 */
void ieee80211_sched_scan_stopped(struct ieee80211_hw *hw);

/**
 * enum ieee80211_interface_iteration_flags - interface iteration flags
 * @IEEE80211_IFACE_ITER_NORMAL: Iterate over all interfaces that have
 *	been added to the driver; However, note that during hardware
 *	reconfiguration (after restart_hw) it will iterate over a new
 *	interface and over all the existing interfaces even if they
 *	haven't been re-added to the driver yet.
 * @IEEE80211_IFACE_ITER_RESUME_ALL: During resume, iterate over all
 *	interfaces, even if they haven't been re-added to the driver yet.
 * @IEEE80211_IFACE_ITER_ACTIVE: Iterate only active interfaces (netdev is up).
 */
enum ieee80211_interface_iteration_flags {
	IEEE80211_IFACE_ITER_NORMAL	= 0,
	IEEE80211_IFACE_ITER_RESUME_ALL	= BIT(0),
	IEEE80211_IFACE_ITER_ACTIVE	= BIT(1),
};

/**
 * ieee80211_iterate_interfaces - iterate interfaces
 *
 * This function iterates over the interfaces associated with a given
 * hardware and calls the callback for them. This includes active as well as
 * inactive interfaces. This function allows the iterator function to sleep.
 * Will iterate over a new interface during add_interface().
 *
 * @hw: the hardware struct of which the interfaces should be iterated over
 * @iter_flags: iteration flags, see &enum ieee80211_interface_iteration_flags
 * @iterator: the iterator function to call
 * @data: first argument of the iterator function
 */
void ieee80211_iterate_interfaces(struct ieee80211_hw *hw, u32 iter_flags,
				  void (*iterator)(void *data, u8 *mac,
						   struct ieee80211_vif *vif),
				  void *data);

/**
 * ieee80211_iterate_active_interfaces - iterate active interfaces
 *
 * This function iterates over the interfaces associated with a given
 * hardware that are currently active and calls the callback for them.
 * This function allows the iterator function to sleep, when the iterator
 * function is atomic @ieee80211_iterate_active_interfaces_atomic can
 * be used.
 * Does not iterate over a new interface during add_interface().
 *
 * @hw: the hardware struct of which the interfaces should be iterated over
 * @iter_flags: iteration flags, see &enum ieee80211_interface_iteration_flags
 * @iterator: the iterator function to call
 * @data: first argument of the iterator function
 */
static inline void
ieee80211_iterate_active_interfaces(struct ieee80211_hw *hw, u32 iter_flags,
				    void (*iterator)(void *data, u8 *mac,
						     struct ieee80211_vif *vif),
				    void *data)
{
	ieee80211_iterate_interfaces(hw,
				     iter_flags | IEEE80211_IFACE_ITER_ACTIVE,
				     iterator, data);
}

/**
 * ieee80211_iterate_active_interfaces_atomic - iterate active interfaces
 *
 * This function iterates over the interfaces associated with a given
 * hardware that are currently active and calls the callback for them.
 * This function requires the iterator callback function to be atomic,
 * if that is not desired, use @ieee80211_iterate_active_interfaces instead.
 * Does not iterate over a new interface during add_interface().
 *
 * @hw: the hardware struct of which the interfaces should be iterated over
 * @iter_flags: iteration flags, see &enum ieee80211_interface_iteration_flags
 * @iterator: the iterator function to call, cannot sleep
 * @data: first argument of the iterator function
 */
void ieee80211_iterate_active_interfaces_atomic(struct ieee80211_hw *hw,
						u32 iter_flags,
						void (*iterator)(void *data,
						    u8 *mac,
						    struct ieee80211_vif *vif),
						void *data);

/**
 * ieee80211_iterate_active_interfaces_rtnl - iterate active interfaces
 *
 * This function iterates over the interfaces associated with a given
 * hardware that are currently active and calls the callback for them.
 * This version can only be used while holding the RTNL.
 *
 * @hw: the hardware struct of which the interfaces should be iterated over
 * @iter_flags: iteration flags, see &enum ieee80211_interface_iteration_flags
 * @iterator: the iterator function to call, cannot sleep
 * @data: first argument of the iterator function
 */
void ieee80211_iterate_active_interfaces_rtnl(struct ieee80211_hw *hw,
					      u32 iter_flags,
					      void (*iterator)(void *data,
						u8 *mac,
						struct ieee80211_vif *vif),
					      void *data);

/**
 * ieee80211_iterate_stations_atomic - iterate stations
 *
 * This function iterates over all stations associated with a given
 * hardware that are currently uploaded to the driver and calls the callback
 * function for them.
 * This function requires the iterator callback function to be atomic,
 *
 * @hw: the hardware struct of which the interfaces should be iterated over
 * @iterator: the iterator function to call, cannot sleep
 * @data: first argument of the iterator function
 */
void ieee80211_iterate_stations_atomic(struct ieee80211_hw *hw,
				       void (*iterator)(void *data,
						struct ieee80211_sta *sta),
				       void *data);
/**
 * ieee80211_queue_work - add work onto the mac80211 workqueue
 *
 * Drivers and mac80211 use this to add work onto the mac80211 workqueue.
 * This helper ensures drivers are not queueing work when they should not be.
 *
 * @hw: the hardware struct for the interface we are adding work for
 * @work: the work we want to add onto the mac80211 workqueue
 */
void ieee80211_queue_work(struct ieee80211_hw *hw, struct work_struct *work);

/**
 * ieee80211_queue_delayed_work - add work onto the mac80211 workqueue
 *
 * Drivers and mac80211 use this to queue delayed work onto the mac80211
 * workqueue.
 *
 * @hw: the hardware struct for the interface we are adding work for
 * @dwork: delayable work to queue onto the mac80211 workqueue
 * @delay: number of jiffies to wait before queueing
 */
void ieee80211_queue_delayed_work(struct ieee80211_hw *hw,
				  struct delayed_work *dwork,
				  unsigned long delay);

/**
 * ieee80211_start_tx_ba_session - Start a tx Block Ack session.
 * @sta: the station for which to start a BA session
 * @tid: the TID to BA on.
 * @timeout: session timeout value (in TUs)
 *
 * Return: success if addBA request was sent, failure otherwise
 *
 * Although mac80211/low level driver/user space application can estimate
 * the need to start aggregation on a certain RA/TID, the session level
 * will be managed by the mac80211.
 */
int ieee80211_start_tx_ba_session(struct ieee80211_sta *sta, u16 tid,
				  u16 timeout);

/**
 * ieee80211_start_tx_ba_cb_irqsafe - low level driver ready to aggregate.
 * @vif: &struct ieee80211_vif pointer from the add_interface callback
 * @ra: receiver address of the BA session recipient.
 * @tid: the TID to BA on.
 *
 * This function must be called by low level driver once it has
 * finished with preparations for the BA session. It can be called
 * from any context.
 */
void ieee80211_start_tx_ba_cb_irqsafe(struct ieee80211_vif *vif, const u8 *ra,
				      u16 tid);

/**
 * ieee80211_stop_tx_ba_session - Stop a Block Ack session.
 * @sta: the station whose BA session to stop
 * @tid: the TID to stop BA.
 *
 * Return: negative error if the TID is invalid, or no aggregation active
 *
 * Although mac80211/low level driver/user space application can estimate
 * the need to stop aggregation on a certain RA/TID, the session level
 * will be managed by the mac80211.
 */
int ieee80211_stop_tx_ba_session(struct ieee80211_sta *sta, u16 tid);

/**
 * ieee80211_stop_tx_ba_cb_irqsafe - low level driver ready to stop aggregate.
 * @vif: &struct ieee80211_vif pointer from the add_interface callback
 * @ra: receiver address of the BA session recipient.
 * @tid: the desired TID to BA on.
 *
 * This function must be called by low level driver once it has
 * finished with preparations for the BA session tear down. It
 * can be called from any context.
 */
void ieee80211_stop_tx_ba_cb_irqsafe(struct ieee80211_vif *vif, const u8 *ra,
				     u16 tid);

/**
 * ieee80211_find_sta - find a station
 *
 * @vif: virtual interface to look for station on
 * @addr: station's address
 *
 * Return: The station, if found. %NULL otherwise.
 *
 * Note: This function must be called under RCU lock and the
 * resulting pointer is only valid under RCU lock as well.
 */
struct ieee80211_sta *ieee80211_find_sta(struct ieee80211_vif *vif,
					 const u8 *addr);

/**
 * ieee80211_find_sta_by_ifaddr - find a station on hardware
 *
 * @hw: pointer as obtained from ieee80211_alloc_hw()
 * @addr: remote station's address
 * @localaddr: local address (vif->sdata->vif.addr). Use NULL for 'any'.
 *
 * Return: The station, if found. %NULL otherwise.
 *
 * Note: This function must be called under RCU lock and the
 * resulting pointer is only valid under RCU lock as well.
 *
 * NOTE: You may pass NULL for localaddr, but then you will just get
 *      the first STA that matches the remote address 'addr'.
 *      We can have multiple STA associated with multiple
 *      logical stations (e.g. consider a station connecting to another
 *      BSSID on the same AP hardware without disconnecting first).
 *      In this case, the result of this method with localaddr NULL
 *      is not reliable.
 *
 * DO NOT USE THIS FUNCTION with localaddr NULL if at all possible.
 */
struct ieee80211_sta *ieee80211_find_sta_by_ifaddr(struct ieee80211_hw *hw,
					       const u8 *addr,
					       const u8 *localaddr);

/**
 * ieee80211_sta_block_awake - block station from waking up
 * @hw: the hardware
 * @pubsta: the station
 * @block: whether to block or unblock
 *
 * Some devices require that all frames that are on the queues
 * for a specific station that went to sleep are flushed before
 * a poll response or frames after the station woke up can be
 * delivered to that it. Note that such frames must be rejected
 * by the driver as filtered, with the appropriate status flag.
 *
 * This function allows implementing this mode in a race-free
 * manner.
 *
 * To do this, a driver must keep track of the number of frames
 * still enqueued for a specific station. If this number is not
 * zero when the station goes to sleep, the driver must call
 * this function to force mac80211 to consider the station to
 * be asleep regardless of the station's actual state. Once the
 * number of outstanding frames reaches zero, the driver must
 * call this function again to unblock the station. That will
 * cause mac80211 to be able to send ps-poll responses, and if
 * the station queried in the meantime then frames will also
 * be sent out as a result of this. Additionally, the driver
 * will be notified that the station woke up some time after
 * it is unblocked, regardless of whether the station actually
 * woke up while blocked or not.
 */
void ieee80211_sta_block_awake(struct ieee80211_hw *hw,
			       struct ieee80211_sta *pubsta, bool block);

/**
 * ieee80211_sta_eosp - notify mac80211 about end of SP
 * @pubsta: the station
 *
 * When a device transmits frames in a way that it can't tell
 * mac80211 in the TX status about the EOSP, it must clear the
 * %IEEE80211_TX_STATUS_EOSP bit and call this function instead.
 * This applies for PS-Poll as well as uAPSD.
 *
 * Note that just like with _tx_status() and _rx() drivers must
 * not mix calls to irqsafe/non-irqsafe versions, this function
 * must not be mixed with those either. Use the all irqsafe, or
 * all non-irqsafe, don't mix!
 *
 * NB: the _irqsafe version of this function doesn't exist, no
 *     driver needs it right now. Don't call this function if
 *     you'd need the _irqsafe version, look at the git history
 *     and restore the _irqsafe version!
 */
void ieee80211_sta_eosp(struct ieee80211_sta *pubsta);

/**
 * ieee80211_iter_keys - iterate keys programmed into the device
 * @hw: pointer obtained from ieee80211_alloc_hw()
 * @vif: virtual interface to iterate, may be %NULL for all
 * @iter: iterator function that will be called for each key
 * @iter_data: custom data to pass to the iterator function
 *
 * This function can be used to iterate all the keys known to
 * mac80211, even those that weren't previously programmed into
 * the device. This is intended for use in WoWLAN if the device
 * needs reprogramming of the keys during suspend. Note that due
 * to locking reasons, it is also only safe to call this at few
 * spots since it must hold the RTNL and be able to sleep.
 *
 * The order in which the keys are iterated matches the order
 * in which they were originally installed and handed to the
 * set_key callback.
 */
void ieee80211_iter_keys(struct ieee80211_hw *hw,
			 struct ieee80211_vif *vif,
			 void (*iter)(struct ieee80211_hw *hw,
				      struct ieee80211_vif *vif,
				      struct ieee80211_sta *sta,
				      struct ieee80211_key_conf *key,
				      void *data),
			 void *iter_data);

/**
 * ieee80211_iter_chan_contexts_atomic - iterate channel contexts
 * @hw: pointre obtained from ieee80211_alloc_hw().
 * @iter: iterator function
 * @iter_data: data passed to iterator function
 *
 * Iterate all active channel contexts. This function is atomic and
 * doesn't acquire any locks internally that might be held in other
 * places while calling into the driver.
 *
 * The iterator will not find a context that's being added (during
 * the driver callback to add it) but will find it while it's being
 * removed.
 *
 * Note that during hardware restart, all contexts that existed
 * before the restart are considered already present so will be
 * found while iterating, whether they've been re-added already
 * or not.
 */
void ieee80211_iter_chan_contexts_atomic(
	struct ieee80211_hw *hw,
	void (*iter)(struct ieee80211_hw *hw,
		     struct ieee80211_chanctx_conf *chanctx_conf,
		     void *data),
	void *iter_data);

/**
 * ieee80211_ap_probereq_get - retrieve a Probe Request template
 * @hw: pointer obtained from ieee80211_alloc_hw().
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 *
 * Creates a Probe Request template which can, for example, be uploaded to
 * hardware. The template is filled with bssid, ssid and supported rate
 * information. This function must only be called from within the
 * .bss_info_changed callback function and only in managed mode. The function
 * is only useful when the interface is associated, otherwise it will return
 * %NULL.
 *
 * Return: The Probe Request template. %NULL on error.
 */
struct sk_buff *ieee80211_ap_probereq_get(struct ieee80211_hw *hw,
					  struct ieee80211_vif *vif);

/**
 * ieee80211_beacon_loss - inform hardware does not receive beacons
 *
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 *
 * When beacon filtering is enabled with %IEEE80211_VIF_BEACON_FILTER and
 * %IEEE80211_CONF_PS is set, the driver needs to inform whenever the
 * hardware is not receiving beacons with this function.
 */
void ieee80211_beacon_loss(struct ieee80211_vif *vif);

/**
 * ieee80211_connection_loss - inform hardware has lost connection to the AP
 *
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 *
 * When beacon filtering is enabled with %IEEE80211_VIF_BEACON_FILTER, and
 * %IEEE80211_CONF_PS and %IEEE80211_HW_CONNECTION_MONITOR are set, the driver
 * needs to inform if the connection to the AP has been lost.
 * The function may also be called if the connection needs to be terminated
 * for some other reason, even if %IEEE80211_HW_CONNECTION_MONITOR isn't set.
 *
 * This function will cause immediate change to disassociated state,
 * without connection recovery attempts.
 */
void ieee80211_connection_loss(struct ieee80211_vif *vif);

/**
 * ieee80211_resume_disconnect - disconnect from AP after resume
 *
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 *
 * Instructs mac80211 to disconnect from the AP after resume.
 * Drivers can use this after WoWLAN if they know that the
 * connection cannot be kept up, for example because keys were
 * used while the device was asleep but the replay counters or
 * similar cannot be retrieved from the device during resume.
 *
 * Note that due to implementation issues, if the driver uses
 * the reconfiguration functionality during resume the interface
 * will still be added as associated first during resume and then
 * disconnect normally later.
 *
 * This function can only be called from the resume callback and
 * the driver must not be holding any of its own locks while it
 * calls this function, or at least not any locks it needs in the
 * key configuration paths (if it supports HW crypto).
 */
void ieee80211_resume_disconnect(struct ieee80211_vif *vif);

/**
 * ieee80211_cqm_rssi_notify - inform a configured connection quality monitoring
 *	rssi threshold triggered
 *
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 * @rssi_event: the RSSI trigger event type
 * @gfp: context flags
 *
 * When the %IEEE80211_VIF_SUPPORTS_CQM_RSSI is set, and a connection quality
 * monitoring is configured with an rssi threshold, the driver will inform
 * whenever the rssi level reaches the threshold.
 */
void ieee80211_cqm_rssi_notify(struct ieee80211_vif *vif,
			       enum nl80211_cqm_rssi_threshold_event rssi_event,
			       gfp_t gfp);

/**
 * ieee80211_cqm_beacon_loss_notify - inform CQM of beacon loss
 *
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 * @gfp: context flags
 */
void ieee80211_cqm_beacon_loss_notify(struct ieee80211_vif *vif, gfp_t gfp);

/**
 * ieee80211_radar_detected - inform that a radar was detected
 *
 * @hw: pointer as obtained from ieee80211_alloc_hw()
 */
void ieee80211_radar_detected(struct ieee80211_hw *hw);

/**
 * ieee80211_chswitch_done - Complete channel switch process
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 * @success: make the channel switch successful or not
 *
 * Complete the channel switch post-process: set the new operational channel
 * and wake up the suspended queues.
 */
void ieee80211_chswitch_done(struct ieee80211_vif *vif, bool success);

/**
 * ieee80211_request_smps - request SM PS transition
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 * @smps_mode: new SM PS mode
 *
 * This allows the driver to request an SM PS transition in managed
 * mode. This is useful when the driver has more information than
 * the stack about possible interference, for example by bluetooth.
 */
void ieee80211_request_smps(struct ieee80211_vif *vif,
			    enum ieee80211_smps_mode smps_mode);

/**
 * ieee80211_ready_on_channel - notification of remain-on-channel start
 * @hw: pointer as obtained from ieee80211_alloc_hw()
 */
void ieee80211_ready_on_channel(struct ieee80211_hw *hw);

/**
 * ieee80211_remain_on_channel_expired - remain_on_channel duration expired
 * @hw: pointer as obtained from ieee80211_alloc_hw()
 */
void ieee80211_remain_on_channel_expired(struct ieee80211_hw *hw);

/**
 * ieee80211_stop_rx_ba_session - callback to stop existing BA sessions
 *
 * in order not to harm the system performance and user experience, the device
 * may request not to allow any rx ba session and tear down existing rx ba
 * sessions based on system constraints such as periodic BT activity that needs
 * to limit wlan activity (eg.sco or a2dp)."
 * in such cases, the intention is to limit the duration of the rx ppdu and
 * therefore prevent the peer device to use a-mpdu aggregation.
 *
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 * @ba_rx_bitmap: Bit map of open rx ba per tid
 * @addr: & to bssid mac address
 */
void ieee80211_stop_rx_ba_session(struct ieee80211_vif *vif, u16 ba_rx_bitmap,
				  const u8 *addr);

/**
 * ieee80211_send_bar - send a BlockAckReq frame
 *
 * can be used to flush pending frames from the peer's aggregation reorder
 * buffer.
 *
 * @vif: &struct ieee80211_vif pointer from the add_interface callback.
 * @ra: the peer's destination address
 * @tid: the TID of the aggregation session
 * @ssn: the new starting sequence number for the receiver
 */
void ieee80211_send_bar(struct ieee80211_vif *vif, u8 *ra, u16 tid, u16 ssn);

/**
 * ieee80211_start_rx_ba_session_offl - start a Rx BA session
 *
 * Some device drivers may offload part of the Rx aggregation flow including
 * AddBa/DelBa negotiation but may otherwise be incapable of full Rx
 * reordering.
 *
 * Create structures responsible for reordering so device drivers may call here
 * when they complete AddBa negotiation.
 *
 * @vif: &struct ieee80211_vif pointer from the add_interface callback
 * @addr: station mac address
 * @tid: the rx tid
 */
void ieee80211_start_rx_ba_session_offl(struct ieee80211_vif *vif,
					const u8 *addr, u16 tid);

/**
 * ieee80211_stop_rx_ba_session_offl - stop a Rx BA session
 *
 * Some device drivers may offload part of the Rx aggregation flow including
 * AddBa/DelBa negotiation but may otherwise be incapable of full Rx
 * reordering.
 *
 * Destroy structures responsible for reordering so device drivers may call here
 * when they complete DelBa negotiation.
 *
 * @vif: &struct ieee80211_vif pointer from the add_interface callback
 * @addr: station mac address
 * @tid: the rx tid
 */
void ieee80211_stop_rx_ba_session_offl(struct ieee80211_vif *vif,
				       const u8 *addr, u16 tid);

/* Rate control API */

/**
 * struct ieee80211_tx_rate_control - rate control information for/from RC algo
 *
 * @hw: The hardware the algorithm is invoked for.
 * @sband: The band this frame is being transmitted on.
 * @bss_conf: the current BSS configuration
 * @skb: the skb that will be transmitted, the control information in it needs
 *	to be filled in
 * @reported_rate: The rate control algorithm can fill this in to indicate
 *	which rate should be reported to userspace as the current rate and
 *	used for rate calculations in the mesh network.
 * @rts: whether RTS will be used for this frame because it is longer than the
 *	RTS threshold
 * @short_preamble: whether mac80211 will request short-preamble transmission
 *	if the selected rate supports it
 * @max_rate_idx: user-requested maximum (legacy) rate
 *	(deprecated; this will be removed once drivers get updated to use
 *	rate_idx_mask)
 * @rate_idx_mask: user-requested (legacy) rate mask
 * @rate_idx_mcs_mask: user-requested MCS rate mask (NULL if not in use)
 * @bss: whether this frame is sent out in AP or IBSS mode
 */
struct ieee80211_tx_rate_control {
	struct ieee80211_hw *hw;
	struct ieee80211_supported_band *sband;
	struct ieee80211_bss_conf *bss_conf;
	struct sk_buff *skb;
	struct ieee80211_tx_rate reported_rate;
	bool rts, short_preamble;
	u8 max_rate_idx;
	u32 rate_idx_mask;
	u8 *rate_idx_mcs_mask;
	bool bss;
};

struct rate_control_ops {
	const char *name;
	void *(*alloc)(struct ieee80211_hw *hw, struct dentry *debugfsdir);
	void (*free)(void *priv);

	void *(*alloc_sta)(void *priv, struct ieee80211_sta *sta, gfp_t gfp);
	void (*rate_init)(void *priv, struct ieee80211_supported_band *sband,
			  struct cfg80211_chan_def *chandef,
			  struct ieee80211_sta *sta, void *priv_sta);
	void (*rate_update)(void *priv, struct ieee80211_supported_band *sband,
			    struct cfg80211_chan_def *chandef,
			    struct ieee80211_sta *sta, void *priv_sta,
			    u32 changed);
	void (*free_sta)(void *priv, struct ieee80211_sta *sta,
			 void *priv_sta);

	void (*tx_status_noskb)(void *priv,
				struct ieee80211_supported_band *sband,
				struct ieee80211_sta *sta, void *priv_sta,
				struct ieee80211_tx_info *info);
	void (*tx_status)(void *priv, struct ieee80211_supported_band *sband,
			  struct ieee80211_sta *sta, void *priv_sta,
			  struct sk_buff *skb);
	void (*get_rate)(void *priv, struct ieee80211_sta *sta, void *priv_sta,
			 struct ieee80211_tx_rate_control *txrc);

	void (*add_sta_debugfs)(void *priv, void *priv_sta,
				struct dentry *dir);
	void (*remove_sta_debugfs)(void *priv, void *priv_sta);

	u32 (*get_expected_throughput)(void *priv_sta);
};

static inline int rate_supported(struct ieee80211_sta *sta,
				 enum ieee80211_band band,
				 int index)
{
	return (sta == NULL || sta->supp_rates[band] & BIT(index));
}

/**
 * rate_control_send_low - helper for drivers for management/no-ack frames
 *
 * Rate control algorithms that agree to use the lowest rate to
 * send management frames and NO_ACK data with the respective hw
 * retries should use this in the beginning of their mac80211 get_rate
 * callback. If true is returned the rate control can simply return.
 * If false is returned we guarantee that sta and sta and priv_sta is
 * not null.
 *
 * Rate control algorithms wishing to do more intelligent selection of
 * rate for multicast/broadcast frames may choose to not use this.
 *
 * @sta: &struct ieee80211_sta pointer to the target destination. Note
 * 	that this may be null.
 * @priv_sta: private rate control structure. This may be null.
 * @txrc: rate control information we sholud populate for mac80211.
 */
bool rate_control_send_low(struct ieee80211_sta *sta,
			   void *priv_sta,
			   struct ieee80211_tx_rate_control *txrc);


static inline s8
rate_lowest_index(struct ieee80211_supported_band *sband,
		  struct ieee80211_sta *sta)
{
	int i;

	for (i = 0; i < sband->n_bitrates; i++)
		if (rate_supported(sta, sband->band, i))
			return i;

	/* warn when we cannot find a rate. */
	WARN_ON_ONCE(1);

	/* and return 0 (the lowest index) */
	return 0;
}

static inline
bool rate_usable_index_exists(struct ieee80211_supported_band *sband,
			      struct ieee80211_sta *sta)
{
	unsigned int i;

	for (i = 0; i < sband->n_bitrates; i++)
		if (rate_supported(sta, sband->band, i))
			return true;
	return false;
}

/**
 * rate_control_set_rates - pass the sta rate selection to mac80211/driver
 *
 * When not doing a rate control probe to test rates, rate control should pass
 * its rate selection to mac80211. If the driver supports receiving a station
 * rate table, it will use it to ensure that frames are always sent based on
 * the most recent rate control module decision.
 *
 * @hw: pointer as obtained from ieee80211_alloc_hw()
 * @pubsta: &struct ieee80211_sta pointer to the target destination.
 * @rates: new tx rate set to be used for this station.
 */
int rate_control_set_rates(struct ieee80211_hw *hw,
			   struct ieee80211_sta *pubsta,
			   struct ieee80211_sta_rates *rates);

int ieee80211_rate_control_register(const struct rate_control_ops *ops);
void ieee80211_rate_control_unregister(const struct rate_control_ops *ops);

static inline bool
conf_is_ht20(struct ieee80211_conf *conf)
{
	return conf->chandef.width == NL80211_CHAN_WIDTH_20;
}

static inline bool
conf_is_ht40_minus(struct ieee80211_conf *conf)
{
	return conf->chandef.width == NL80211_CHAN_WIDTH_40 &&
	       conf->chandef.center_freq1 < conf->chandef.chan->center_freq;
}

static inline bool
conf_is_ht40_plus(struct ieee80211_conf *conf)
{
	return conf->chandef.width == NL80211_CHAN_WIDTH_40 &&
	       conf->chandef.center_freq1 > conf->chandef.chan->center_freq;
}

static inline bool
conf_is_ht40(struct ieee80211_conf *conf)
{
	return conf->chandef.width == NL80211_CHAN_WIDTH_40;
}

static inline bool
conf_is_ht(struct ieee80211_conf *conf)
{
	return (conf->chandef.width != NL80211_CHAN_WIDTH_5) &&
		(conf->chandef.width != NL80211_CHAN_WIDTH_10) &&
		(conf->chandef.width != NL80211_CHAN_WIDTH_20_NOHT);
}

static inline enum nl80211_iftype
ieee80211_iftype_p2p(enum nl80211_iftype type, bool p2p)
{
	if (p2p) {
		switch (type) {
		case NL80211_IFTYPE_STATION:
			return NL80211_IFTYPE_P2P_CLIENT;
		case NL80211_IFTYPE_AP:
			return NL80211_IFTYPE_P2P_GO;
		default:
			break;
		}
	}
	return type;
}

static inline enum nl80211_iftype
ieee80211_vif_type_p2p(struct ieee80211_vif *vif)
{
	return ieee80211_iftype_p2p(vif->type, vif->p2p);
}

void ieee80211_enable_rssi_reports(struct ieee80211_vif *vif,
				   int rssi_min_thold,
				   int rssi_max_thold);

void ieee80211_disable_rssi_reports(struct ieee80211_vif *vif);

/**
 * ieee80211_ave_rssi - report the average RSSI for the specified interface
 *
 * @vif: the specified virtual interface
 *
 * Note: This function assumes that the given vif is valid.
 *
 * Return: The average RSSI value for the requested interface, or 0 if not
 * applicable.
 */
int ieee80211_ave_rssi(struct ieee80211_vif *vif);

/**
 * ieee80211_report_wowlan_wakeup - report WoWLAN wakeup
 * @vif: virtual interface
 * @wakeup: wakeup reason(s)
 * @gfp: allocation flags
 *
 * See cfg80211_report_wowlan_wakeup().
 */
void ieee80211_report_wowlan_wakeup(struct ieee80211_vif *vif,
				    struct cfg80211_wowlan_wakeup *wakeup,
				    gfp_t gfp);

/**
 * ieee80211_tx_prepare_skb - prepare an 802.11 skb for transmission
 * @hw: pointer as obtained from ieee80211_alloc_hw()
 * @vif: virtual interface
 * @skb: frame to be sent from within the driver
 * @band: the band to transmit on
 * @sta: optional pointer to get the station to send the frame to
 *
 * Note: must be called under RCU lock
 */
bool ieee80211_tx_prepare_skb(struct ieee80211_hw *hw,
			      struct ieee80211_vif *vif, struct sk_buff *skb,
			      int band, struct ieee80211_sta **sta);

/**
 * struct ieee80211_noa_data - holds temporary data for tracking P2P NoA state
 *
 * @next_tsf: TSF timestamp of the next absent state change
 * @has_next_tsf: next absent state change event pending
 *
 * @absent: descriptor bitmask, set if GO is currently absent
 *
 * private:
 *
 * @count: count fields from the NoA descriptors
 * @desc: adjusted data from the NoA
 */
struct ieee80211_noa_data {
	u32 next_tsf;
	bool has_next_tsf;

	u8 absent;

	u8 count[IEEE80211_P2P_NOA_DESC_MAX];
	struct {
		u32 start;
		u32 duration;
		u32 interval;
	} desc[IEEE80211_P2P_NOA_DESC_MAX];
};

/**
 * ieee80211_parse_p2p_noa - initialize NoA tracking data from P2P IE
 *
 * @attr: P2P NoA IE
 * @data: NoA tracking data
 * @tsf: current TSF timestamp
 *
 * Return: number of successfully parsed descriptors
 */
int ieee80211_parse_p2p_noa(const struct ieee80211_p2p_noa_attr *attr,
			    struct ieee80211_noa_data *data, u32 tsf);

/**
 * ieee80211_update_p2p_noa - get next pending P2P GO absent state change
 *
 * @data: NoA tracking data
 * @tsf: current TSF timestamp
 */
void ieee80211_update_p2p_noa(struct ieee80211_noa_data *data, u32 tsf);

/**
 * ieee80211_tdls_oper - request userspace to perform a TDLS operation
 * @vif: virtual interface
 * @peer: the peer's destination address
 * @oper: the requested TDLS operation
 * @reason_code: reason code for the operation, valid for TDLS teardown
 * @gfp: allocation flags
 *
 * See cfg80211_tdls_oper_request().
 */
void ieee80211_tdls_oper_request(struct ieee80211_vif *vif, const u8 *peer,
				 enum nl80211_tdls_operation oper,
				 u16 reason_code, gfp_t gfp);

/**
 * ieee80211_reserve_tid - request to reserve a specific TID
 *
 * There is sometimes a need (such as in TDLS) for blocking the driver from
 * using a specific TID so that the FW can use it for certain operations such
 * as sending PTI requests. To make sure that the driver doesn't use that TID,
 * this function must be called as it flushes out packets on this TID and marks
 * it as blocked, so that any transmit for the station on this TID will be
 * redirected to the alternative TID in the same AC.
 *
 * Note that this function blocks and may call back into the driver, so it
 * should be called without driver locks held. Also note this function should
 * only be called from the driver's @sta_state callback.
 *
 * @sta: the station to reserve the TID for
 * @tid: the TID to reserve
 *
 * Returns: 0 on success, else on failure
 */
int ieee80211_reserve_tid(struct ieee80211_sta *sta, u8 tid);

/**
 * ieee80211_unreserve_tid - request to unreserve a specific TID
 *
 * Once there is no longer any need for reserving a certain TID, this function
 * should be called, and no longer will packets have their TID modified for
 * preventing use of this TID in the driver.
 *
 * Note that this function blocks and acquires a lock, so it should be called
 * without driver locks held. Also note this function should only be called
 * from the driver's @sta_state callback.
 *
 * @sta: the station
 * @tid: the TID to unreserve
 */
void ieee80211_unreserve_tid(struct ieee80211_sta *sta, u8 tid);

/**
 * ieee80211_tx_dequeue - dequeue a packet from a software tx queue
 *
 * @hw: pointer as obtained from ieee80211_alloc_hw()
 * @txq: pointer obtained from station or virtual interface
 *
 * Returns the skb if successful, %NULL if no frame was available.
 */
struct sk_buff *ieee80211_tx_dequeue(struct ieee80211_hw *hw,
				     struct ieee80211_txq *txq);
#endif /* MAC80211_H */
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    #ifndef __NET_CFG80211_H
#define __NET_CFG80211_H
/*
 * 802.11 device and configuration interface
 *
 * Copyright 2006-2010	Johannes Berg <johannes@sipsolutions.net>
 * Copyright 2013-2014 Intel Mobile Communications GmbH
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#include <linux/netdevice.h>
#include <linux/debugfs.h>
#include <linux/list.h>
#include <linux/bug.h>
#include <linux/netlink.h>
#include <linux/skbuff.h>
#include <linux/nl80211.h>
#include <linux/if_ether.h>
#include <linux/ieee80211.h>
#include <linux/net.h>
#include <net/regulatory.h>

/**
 * DOC: Introduction
 *
 * cfg80211 is the configuration API for 802.11 devices in Linux. It bridges
 * userspace and drivers, and offers some utility functionality associated
 * with 802.11. cfg80211 must, directly or indirectly via mac80211, be used
 * by all modern wireless drivers in Linux, so that they offer a consistent
 * API through nl80211. For backward compatibility, cfg80211 also offers
 * wireless extensions to userspace, but hides them from drivers completely.
 *
 * Additionally, cfg80211 contains code to help enforce regulatory spectrum
 * use restrictions.
 */


/**
 * DOC: Device registration
 *
 * In order for a driver to use cfg80211, it must register the hardware device
 * with cfg80211. This happens through a number of hardware capability structs
 * described below.
 *
 * The fundamental structure for each device is the 'wiphy', of which each
 * instance describes a physical wireless device connected to the system. Each
 * such wiphy can have zero, one, or many virtual interfaces associated with
 * it, which need to be identified as such by pointing the network interface's
 * @ieee80211_ptr pointer to a &struct wireless_dev which further describes
 * the wireless part of the interface, normally this struct is embedded in the
 * network interface's private data area. Drivers can optionally allow creating
 * or destroying virtual interfaces on the fly, but without at least one or the
 * ability to create some the wireless device isn't useful.
 *
 * Each wiphy structure contains device capability information, and also has
 * a pointer to the various operations the driver offers. The definitions and
 * structures here describe these capabilities in detail.
 */

struct wiphy;

/*
 * wireless hardware capability structures
 */

/**
 * enum ieee80211_band - supported frequency bands
 *
 * The bands are assigned this way because the supported
 * bitrates differ in these bands.
 *
 * @IEEE80211_BAND_2GHZ: 2.4GHz ISM band
 * @IEEE80211_BAND_5GHZ: around 5GHz band (4.9-5.7)
 * @IEEE80211_BAND_60GHZ: around 60 GHz band (58.32 - 64.80 GHz)
 * @IEEE80211_NUM_BANDS: number of defined bands
 */
enum ieee80211_band {
	IEEE80211_BAND_2GHZ = NL80211_BAND_2GHZ,
	IEEE80211_BAND_5GHZ = NL80211_BAND_5GHZ,
	IEEE80211_BAND_60GHZ = NL80211_BAND_60GHZ,

	/* keep last */
	IEEE80211_NUM_BANDS
};

/**
 * enum ieee80211_channel_flags - channel flags
 *
 * Channel flags set by the regulatory control code.
 *
 * @IEEE80211_CHAN_DISABLED: This channel is disabled.
 * @IEEE80211_CHAN_NO_IR: do not initiate radiation, this includes
 * 	sending probe requests or beaconing.
 * @IEEE80211_CHAN_RADAR: Radar detection is required on this channel.
 * @IEEE80211_CHAN_NO_HT40PLUS: extension channel above this channel
 * 	is not permitted.
 * @IEEE80211_CHAN_NO_HT40MINUS: extension channel below this channel
 * 	is not permitted.
 * @IEEE80211_CHAN_NO_OFDM: OFDM is not allowed on this channel.
 * @IEEE80211_CHAN_NO_80MHZ: If the driver supports 80 MHz on the band,
 *	this flag indicates that an 80 MHz channel cannot use this
 *	channel as the control or any of the secondary channels.
 *	This may be due to the driver or due to regulatory bandwidth
 *	restrictions.
 * @IEEE80211_CHAN_NO_160MHZ: If the driver supports 160 MHz on the band,
 *	this flag indicates that an 160 MHz channel cannot use this
 *	channel as the control or any of the secondary channels.
 *	This may be due to the driver or due to regulatory bandwidth
 *	restrictions.
 * @IEEE80211_CHAN_INDOOR_ONLY: see %NL80211_FREQUENCY_ATTR_INDOOR_ONLY
 * @IEEE80211_CHAN_GO_CONCURRENT: see %NL80211_FREQUENCY_ATTR_GO_CONCURRENT
 * @IEEE80211_CHAN_NO_20MHZ: 20 MHz bandwidth is not permitted
 *	on this channel.
 * @IEEE80211_CHAN_NO_10MHZ: 10 MHz bandwidth is not permitted
 *	on this channel.
 *
 */
enum ieee80211_channel_flags {
	IEEE80211_CHAN_DISABLED		= 1<<0,
	IEEE80211_CHAN_NO_IR		= 1<<1,
	/* hole at 1<<2 */
	IEEE80211_CHAN_RADAR		= 1<<3,
	IEEE80211_CHAN_NO_HT40PLUS	= 1<<4,
	IEEE80211_CHAN_NO_HT40MINUS	= 1<<5,
	IEEE80211_CHAN_NO_OFDM		= 1<<6,
	IEEE80211_CHAN_NO_80MHZ		= 1<<7,
	IEEE80211_CHAN_NO_160MHZ	= 1<<8,
	IEEE80211_CHAN_INDOOR_ONLY	= 1<<9,
	IEEE80211_CHAN_GO_CONCURRENT	= 1<<10,
	IEEE80211_CHAN_NO_20MHZ		= 1<<11,
	IEEE80211_CHAN_NO_10MHZ		= 1<<12,
};

#define IEEE80211_CHAN_NO_HT40 \
	(IEEE80211_CHAN_NO_HT40PLUS | IEEE80211_CHAN_NO_HT40MINUS)

#define IEEE80211_DFS_MIN_CAC_TIME_MS		60000
#define IEEE80211_DFS_MIN_NOP_TIME_MS		(30 * 60 * 1000)

/**
 * struct ieee80211_channel - channel definition
 *
 * This structure describes a single channel for use
 * with cfg80211.
 *
 * @center_freq: center frequency in MHz
 * @hw_value: hardware-specific value for the channel
 * @flags: channel flags from &enum ieee80211_channel_flags.
 * @orig_flags: channel flags at registration time, used by regulatory
 *	code to support devices with additional restrictions
 * @band: band this channel belongs to.
 * @max_antenna_gain: maximum antenna gain in dBi
 * @max_power: maximum transmission power (in dBm)
 * @max_reg_power: maximum regulatory transmission power (in dBm)
 * @beacon_found: helper to regulatory code to indicate when a beacon
 *	has been found on this channel. Use regulatory_hint_found_beacon()
 *	to enable this, this is useful only on 5 GHz band.
 * @orig_mag: internal use
 * @orig_mpwr: internal use
 * @dfs_state: current state of this channel. Only relevant if radar is required
 *	on this channel.
 * @dfs_state_entered: timestamp (jiffies) when the dfs state was entered.
 * @dfs_cac_ms: DFS CAC time in milliseconds, this is valid for DFS channels.
 */
struct ieee80211_channel {
	enum ieee80211_band band;
	u16 center_freq;
	u16 hw_value;
	u32 flags;
	int max_antenna_gain;
	int max_power;
	int max_reg_power;
	bool beacon_found;
	u32 orig_flags;
	int orig_mag, orig_mpwr;
	enum nl80211_dfs_state dfs_state;
	unsigned long dfs_state_entered;
	unsigned int dfs_cac_ms;
};

/**
 * enum ieee80211_rate_flags - rate flags
 *
 * Hardware/specification flags for rates. These are structured
 * in a way that allows using the same bitrate structure for
 * different bands/PHY modes.
 *
 * @IEEE80211_RATE_SHORT_PREAMBLE: Hardware can send with short
 *	preamble on this bitrate; only relevant in 2.4GHz band and
 *	with CCK rates.
 * @IEEE80211_RATE_MANDATORY_A: This bitrate is a mandatory rate
 *	when used with 802.11a (on the 5 GHz band); filled by the
 *	core code when registering the wiphy.
 * @IEEE80211_RATE_MANDATORY_B: This bitrate is a mandatory rate
 *	when used with 802.11b (on the 2.4 GHz band); filled by the
 *	core code when registering the wiphy.
 * @IEEE80211_RATE_MANDATORY_G: This bitrate is a mandatory rate
 *	when used with 802.11g (on the 2.4 GHz band); filled by the
 *	core code when registering the wiphy.
 * @IEEE80211_RATE_ERP_G: This is an ERP rate in 802.11g mode.
 * @IEEE80211_RATE_SUPPORTS_5MHZ: Rate can be used in 5 MHz mode
 * @IEEE80211_RATE_SUPPORTS_10MHZ: Rate can be used in 10 MHz mode
 */
enum ieee80211_rate_flags {
	IEEE80211_RATE_SHORT_PREAMBLE	= 1<<0,
	IEEE80211_RATE_MANDATORY_A	= 1<<1,
	IEEE80211_RATE_MANDATORY_B	= 1<<2,
	IEEE80211_RATE_MANDATORY_G	= 1<<3,
	IEEE80211_RATE_ERP_G		= 1<<4,
	IEEE80211_RATE_SUPPORTS_5MHZ	= 1<<5,
	IEEE80211_RATE_SUPPORTS_10MHZ	= 1<<6,
};

/**
 * enum ieee80211_bss_type - BSS type filter
 *
 * @IEEE80211_BSS_TYPE_ESS: Infrastructure BSS
 * @IEEE80211_BSS_TYPE_PBSS: Personal BSS
 * @IEEE80211_BSS_TYPE_IBSS: Independent BSS
 * @IEEE80211_BSS_TYPE_MBSS: Mesh BSS
 * @IEEE80211_BSS_TYPE_ANY: Wildcard value for matching any BSS type
 */
enum ieee80211_bss_type {
	IEEE80211_BSS_TYPE_ESS,
	IEEE80211_BSS_TYPE_PBSS,
	IEEE80211_BSS_TYPE_IBSS,
	IEEE80211_BSS_TYPE_MBSS,
	IEEE80211_BSS_TYPE_ANY
};

/**
 * enum ieee80211_privacy - BSS privacy filter
 *
 * @IEEE80211_PRIVACY_ON: privacy bit set
 * @IEEE80211_PRIVACY_OFF: privacy bit clear
 * @IEEE80211_PRIVACY_ANY: Wildcard value for matching any privacy setting
 */
enum ieee80211_privacy {
	IEEE80211_PRIVACY_ON,
	IEEE80211_PRIVACY_OFF,
	IEEE80211_PRIVACY_ANY
};

#define IEEE80211_PRIVACY(x)	\
	((x) ? IEEE80211_PRIVACY_ON : IEEE80211_PRIVACY_OFF)

/**
 * struct ieee80211_rate - bitrate definition
 *
 * This structure describes a bitrate that an 802.11 PHY can
 * operate with. The two values @hw_value and @hw_value_short
 * are only for driver use when pointers to this structure are
 * passed around.
 *
 * @flags: rate-specific flags
 * @bitrate: bitrate in units of 100 Kbps
 * @hw_value: driver/hardware value for this rate
 * @hw_value_short: driver/hardware value for this rate when
 *	short preamble is used
 */
struct ieee80211_rate {
	u32 flags;
	u16 bitrate;
	u16 hw_value, hw_value_short;
};

/**
 * struct ieee80211_sta_ht_cap - STA's HT capabilities
 *
 * This structure describes most essential parameters needed
 * to describe 802.11n HT capabilities for an STA.
 *
 * @ht_supported: is HT supported by the STA
 * @cap: HT capabilities map as described in 802.11n spec
 * @ampdu_factor: Maximum A-MPDU length factor
 * @ampdu_density: Minimum A-MPDU spacing
 * @mcs: Supported MCS rates
 */
struct ieee80211_sta_ht_cap {
	u16 cap; /* use IEEE80211_HT_CAP_ */
	bool ht_supported;
	u8 ampdu_factor;
	u8 ampdu_density;
	struct ieee80211_mcs_info mcs;
};

/**
 * struct ieee80211_sta_vht_cap - STA's VHT capabilities
 *
 * This structure describes most essential parameters needed
 * to describe 802.11ac VHT capabilities for an STA.
 *
 * @vht_supported: is VHT supported by the STA
 * @cap: VHT capabilities map as described in 802.11ac spec
 * @vht_mcs: Supported VHT MCS rates
 */
struct ieee80211_sta_vht_cap {
	bool vht_supported;
	u32 cap; /* use IEEE80211_VHT_CAP_ */
	struct ieee80211_vht_mcs_info vht_mcs;
};

/**
 * struct ieee80211_supported_band - frequency band definition
 *
 * This structure describes a frequency band a wiphy
 * is able to operate in.
 *
 * @channels: Array of channels the hardware can operate in
 *	in this band.
 * @band: the band this structure represents
 * @n_channels: Number of channels in @channels
 * @bitrates: Array of bitrates the hardware can operate with
 *	in this band. Must be sorted to give a valid "supported
 *	rates" IE, i.e. CCK rates first, then OFDM.
 * @n_bitrates: Number of bitrates in @bitrates
 * @ht_cap: HT capabilities in this band
 * @vht_cap: VHT capabilities in this band
 */
struct ieee80211_supported_band {
	struct ieee80211_channel *channels;
	struct ieee80211_rate *bitrates;
	enum ieee80211_band band;
	int n_channels;
	int n_bitrates;
	struct ieee80211_sta_ht_cap ht_cap;
	struct ieee80211_sta_vht_cap vht_cap;
};

/*
 * Wireless hardware/device configuration structures and methods
 */

/**
 * DOC: Actions and configuration
 *
 * Each wireless device and each virtual interface offer a set of configuration
 * operations and other actions that are invoked by userspace. Each of these
 * actions is described in the operations structure, and the parameters these
 * operations use are described separately.
 *
 * Additionally, some operations are asynchronous and expect to get status
 * information via some functions that drivers need to call.
 *
 * Scanning and BSS list handling with its associated functionality is described
 * in a separate chapter.
 */

/**
 * struct vif_params - describes virtual interface parameters
 * @use_4addr: use 4-address frames
 * @macaddr: address to use for this virtual interface.
 *	If this parameter is set to zero address the driver may
 *	determine the address as needed.
 *	This feature is only fully supported by drivers that enable the
 *	%NL80211_FEATURE_MAC_ON_CREATE flag.  Others may support creating
 **	only p2p devices with specified MAC.
 */
struct vif_params {
       int use_4addr;
       u8 macaddr[ETH_ALEN];
};

/**
 * struct key_params - key information
 *
 * Information about a key
 *
 * @key: key material
 * @key_len: length of key material
 * @cipher: cipher suite selector
 * @seq: sequence counter (IV/PN) for TKIP and CCMP keys, only used
 *	with the get_key() callback, must be in little endian,
 *	length given by @seq_len.
 * @seq_len: length of @seq.
 */
struct key_params {
	const u8 *key;
	const u8 *seq;
	int key_len;
	int seq_len;
	u32 cipher;
};

/**
 * struct cfg80211_chan_def - channel definition
 * @chan: the (control) channel
 * @width: channel width
 * @center_freq1: center frequency of first segment
 * @center_freq2: center frequency of second segment
 *	(only with 80+80 MHz)
 */
struct cfg80211_chan_def {
	struct ieee80211_channel *chan;
	enum nl80211_chan_width width;
	u32 center_freq1;
	u32 center_freq2;
};

/**
 * cfg80211_get_chandef_type - return old channel type from chandef
 * @chandef: the channel definition
 *
 * Return: The old channel type (NOHT, HT20, HT40+/-) from a given
 * chandef, which must have a bandwidth allowing this conversion.
 */
static inline enum nl80211_channel_type
cfg80211_get_chandef_type(const struct cfg80211_chan_def *chandef)
{
	switch (chandef->width) {
	case NL80211_CHAN_WIDTH_20_NOHT:
		return NL80211_CHAN_NO_HT;
	case NL80211_CHAN_WIDTH_20:
		return NL80211_CHAN_HT20;
	case NL80211_CHAN_WIDTH_40:
		if (chandef->center_freq1 > chandef->chan->center_freq)
			return NL80211_CHAN_HT40PLUS;
		return NL80211_CHAN_HT40MINUS;
	default:
		WARN_ON(1);
		return NL80211_CHAN_NO_HT;
	}
}

/**
 * cfg80211_chandef_create - create channel definition using channel type
 * @chandef: the channel definition struct to fill
 * @channel: the control channel
 * @chantype: the channel type
 *
 * Given a channel type, create a channel definition.
 */
void cfg80211_chandef_create(struct cfg80211_chan_def *chandef,
			     struct ieee80211_channel *channel,
			     enum nl80211_channel_type chantype);

/**
 * cfg80211_chandef_identical - check if two channel definitions are identical
 * @chandef1: first channel definition
 * @chandef2: second channel definition
 *
 * Return: %true if the channels defined by the channel definitions are
 * identical, %false otherwise.
 */
static inline bool
cfg80211_chandef_identical(const struct cfg80211_chan_def *chandef1,
			   const struct cfg80211_chan_def *chandef2)
{
	return (chandef1->chan == chandef2->chan &&
		chandef1->width == chandef2->width &&
		chandef1->center_freq1 == chandef2->center_freq1 &&
		chandef1->center_freq2 == chandef2->center_freq2);
}

/**
 * cfg80211_chandef_compatible - check if two channel definitions are compatible
 * @chandef1: first channel definition
 * @chandef2: second channel definition
 *
 * Return: %NULL if the given channel definitions are incompatible,
 * chandef1 or chandef2 otherwise.
 */
const struct cfg80211_chan_def *
cfg80211_chandef_compatible(const struct cfg80211_chan_def *chandef1,
			    const struct cfg80211_chan_def *chandef2);

/**
 * cfg80211_chandef_valid - check if a channel definition is valid
 * @chandef: the channel definition to check
 * Return: %true if the channel definition is valid. %false otherwise.
 */
bool cfg80211_chandef_valid(const struct cfg80211_chan_def *chandef);

/**
 * cfg80211_chandef_usable - check if secondary channels can be used
 * @wiphy: the wiphy to validate against
 * @chandef: the channel definition to check
 * @prohibited_flags: the regulatory channel flags that must not be set
 * Return: %true if secondary channels are usable. %false otherwise.
 */
bool cfg80211_chandef_usable(struct wiphy *wiphy,
			     const struct cfg80211_chan_def *chandef,
			     u32 prohibited_flags);

/**
 * cfg80211_chandef_dfs_required - checks if radar detection is required
 * @wiphy: the wiphy to validate against
 * @chandef: the channel definition to check
 * @iftype: the interface type as specified in &enum nl80211_iftype
 * Returns:
 *	1 if radar detection is required, 0 if it is not, < 0 on error
 */
int cfg80211_chandef_dfs_required(struct wiphy *wiphy,
				  const struct cfg80211_chan_def *chandef,
				  enum nl80211_iftype iftype);

/**
 * ieee80211_chandef_rate_flags - returns rate flags for a channel
 *
 * In some channel types, not all rates may be used - for example CCK
 * rates may not be used in 5/10 MHz channels.
 *
 * @chandef: channel definition for the channel
 *
 * Returns: rate flags which apply for this channel
 */
static inline enum ieee80211_rate_flags
ieee80211_chandef_rate_flags(struct cfg80211_chan_def *chandef)
{
	switch (chandef->width) {
	case NL80211_CHAN_WIDTH_5:
		return IEEE80211_RATE_SUPPORTS_5MHZ;
	case NL80211_CHAN_WIDTH_10:
		return IEEE80211_RATE_SUPPORTS_10MHZ;
	default:
		break;
	}
	return 0;
}

/**
 * ieee80211_chandef_max_power - maximum transmission power for the chandef
 *
 * In some regulations, the transmit power may depend on the configured channel
 * bandwidth which may be defined as dBm/MHz. This function returns the actual
 * max_power for non-standard (20 MHz) channels.
 *
 * @chandef: channel definition for the channel
 *
 * Returns: maximum allowed transmission power in dBm for the chandef
 */
static inline int
ieee80211_chandef_max_power(struct cfg80211_chan_def *chandef)
{
	switch (chandef->width) {
	case NL80211_CHAN_WIDTH_5:
		return min(chandef->chan->max_reg_power - 6,
			   chandef->chan->max_power);
	case NL80211_CHAN_WIDTH_10:
		return min(chandef->chan->max_reg_power - 3,
			   chandef->chan->max_power);
	default:
		break;
	}
	return chandef->chan->max_power;
}

/**
 * enum survey_info_flags - survey information flags
 *
 * @SURVEY_INFO_NOISE_DBM: noise (in dBm) was filled in
 * @SURVEY_INFO_IN_USE: channel is currently being used
 * @SURVEY_INFO_TIME: active time (in ms) was filled in
 * @SURVEY_INFO_TIME_BUSY: busy time was filled in
 * @SURVEY_INFO_TIME_EXT_BUSY: extension channel busy time was filled in
 * @SURVEY_INFO_TIME_RX: receive time was filled in
 * @SURVEY_INFO_TIME_TX: transmit time was filled in
 * @SURVEY_INFO_TIME_SCAN: scan time was filled in
 *
 * Used by the driver to indicate which info in &struct survey_info
 * it has filled in during the get_survey().
 */
enum survey_info_flags {
	SURVEY_INFO_NOISE_DBM		= BIT(0),
	SURVEY_INFO_IN_USE		= BIT(1),
	SURVEY_INFO_TIME		= BIT(2),
	SURVEY_INFO_TIME_BUSY		= BIT(3),
	SURVEY_INFO_TIME_EXT_BUSY	= BIT(4),
	SURVEY_INFO_TIME_RX		= BIT(5),
	SURVEY_INFO_TIME_TX		= BIT(6),
	SURVEY_INFO_TIME_SCAN		= BIT(7),
};

/**
 * struct survey_info - channel survey response
 *
 * @channel: the channel this survey record reports, may be %NULL for a single
 *	record to report global statistics
 * @filled: bitflag of flags from &enum survey_info_flags
 * @noise: channel noise in dBm. This and all following fields are
 *	optional
 * @time: amount of time in ms the radio was turn on (on the channel)
 * @time_busy: amount of time the primary channel was sensed busy
 * @time_ext_busy: amount of time the extension channel was sensed busy
 * @time_rx: amount of time the radio spent receiving data
 * @time_tx: amount of time the radio spent transmitting data
 * @time_scan: amount of time the radio spent for scanning
 *
 * Used by dump_survey() to report back per-channel survey information.
 *
 * This structure can later be expanded with things like
 * channel duty cycle etc.
 */
struct survey_info {
	struct ieee80211_channel *channel;
	u64 time;
	u64 time_busy;
	u64 time_ext_busy;
	u64 time_rx;
	u64 time_tx;
	u64 time_scan;
	u32 filled;
	s8 noise;
};

/**
 * struct cfg80211_crypto_settings - Crypto settings
 * @wpa_versions: indicates which, if any, WPA versions are enabled
 *	(from enum nl80211_wpa_versions)
 * @cipher_group: group key cipher suite (or 0 if unset)
 * @n_ciphers_pairwise: number of AP supported unicast ciphers
 * @ciphers_pairwise: unicast key cipher suites
 * @n_akm_suites: number of AKM suites
 * @akm_suites: AKM suites
 * @control_port: Whether user space controls IEEE 802.1X port, i.e.,
 *	sets/clears %NL80211_STA_FLAG_AUTHORIZED. If true, the driver is
 *	required to assume that the port is unauthorized until authorized by
 *	user space. Otherwise, port is marked authorized by default.
 * @control_port_ethertype: the control port protocol that should be
 *	allowed through even on unauthorized ports
 * @control_port_no_encrypt: TRUE to prevent encryption of control port
 *	protocol frames.
 */
struct cfg80211_crypto_settings {
	u32 wpa_versions;
	u32 cipher_group;
	int n_ciphers_pairwise;
	u32 ciphers_pairwise[NL80211_MAX_NR_CIPHER_SUITES];
	int n_akm_suites;
	u32 akm_suites[NL80211_MAX_NR_AKM_SUITES];
	bool control_port;
	__be16 control_port_ethertype;
	bool control_port_no_encrypt;
};

/**
 * struct cfg80211_beacon_data - beacon data
 * @head: head portion of beacon (before TIM IE)
 *	or %NULL if not changed
 * @tail: tail portion of beacon (after TIM IE)
 *	or %NULL if not changed
 * @head_len: length of @head
 * @tail_len: length of @tail
 * @beacon_ies: extra information element(s) to add into Beacon frames or %NULL
 * @beacon_ies_len: length of beacon_ies in octets
 * @proberesp_ies: extra information element(s) to add into Probe Response
 *	frames or %NULL
 * @proberesp_ies_len: length of proberesp_ies in octets
 * @assocresp_ies: extra information element(s) to add into (Re)Association
 *	Response frames or %NULL
 * @assocresp_ies_len: length of assocresp_ies in octets
 * @probe_resp_len: length of probe response template (@probe_resp)
 * @probe_resp: probe response template (AP mode only)
 */
struct cfg80211_beacon_data {
	const u8 *head, *tail;
	const u8 *beacon_ies;
	const u8 *proberesp_ies;
	const u8 *assocresp_ies;
	const u8 *probe_resp;

	size_t head_len, tail_len;
	size_t beacon_ies_len;
	size_t proberesp_ies_len;
	size_t assocresp_ies_len;
	size_t probe_resp_len;
};

struct mac_address {
	u8 addr[ETH_ALEN];
};

/**
 * struct cfg80211_acl_data - Access control list data
 *
 * @acl_policy: ACL policy to be applied on the station's
 *	entry specified by mac_addr
 * @n_acl_entries: Number of MAC address entries passed
 * @mac_addrs: List of MAC addresses of stations to be used for ACL
 */
struct cfg80211_acl_data {
	enum nl80211_acl_policy acl_policy;
	int n_acl_entries;

	/* Keep it last */
	struct mac_address mac_addrs[];
};

/**
 * struct cfg80211_ap_settings - AP configuration
 *
 * Used to configure an AP interface.
 *
 * @chandef: defines the channel to use
 * @beacon: beacon data
 * @beacon_interval: beacon interval
 * @dtim_period: DTIM period
 * @ssid: SSID to be used in the BSS (note: may be %NULL if not provided from
 *	user space)
 * @ssid_len: length of @ssid
 * @hidden_ssid: whether to hide the SSID in Beacon/Probe Response frames
 * @crypto: crypto settings
 * @privacy: the BSS uses privacy
 * @auth_type: Authentication type (algorithm)
 * @smps_mode: SMPS mode
 * @inactivity_timeout: time in seconds to determine station's inactivity.
 * @p2p_ctwindow: P2P CT Window
 * @p2p_opp_ps: P2P opportunistic PS
 * @acl: ACL configuration used by the drivers which has support for
 *	MAC address based access control
 */
struct cfg80211_ap_settings {
	struct cfg80211_chan_def chandef;

	struct cfg80211_beacon_data beacon;

	int beacon_interval, dtim_period;
	const u8 *ssid;
	size_t ssid_len;
	enum nl80211_hidden_ssid hidden_ssid;
	struct cfg80211_crypto_settings crypto;
	bool privacy;
	enum nl80211_auth_type auth_type;
	enum nl80211_smps_mode smps_mode;
	int inactivity_timeout;
	u8 p2p_ctwindow;
	bool p2p_opp_ps;
	const struct cfg80211_acl_data *acl;
};

/**
 * struct cfg80211_csa_settings - channel switch settings
 *
 * Used for channel switch
 *
 * @chandef: defines the channel to use after the switch
 * @beacon_csa: beacon data while performing the switch
 * @counter_offsets_beacon: offsets of the counters within the beacon (tail)
 * @counter_offsets_presp: offsets of the counters within the probe response
 * @n_counter_offsets_beacon: number of csa counters the beacon (tail)
 * @n_counter_offsets_presp: number of csa counters in the probe response
 * @beacon_after: beacon data to be used on the new channel
 * @radar_required: whether radar detection is required on the new channel
 * @block_tx: whether transmissions should be blocked while changing
 * @count: number of beacons until switch
 */
struct cfg80211_csa_settings {
	struct cfg80211_chan_def chandef;
	struct cfg80211_beacon_data beacon_csa;
	const u16 *counter_offsets_beacon;
	const u16 *counter_offsets_presp;
	unsigned int n_counter_offsets_beacon;
	unsigned int n_counter_offsets_presp;
	struct cfg80211_beacon_data beacon_after;
	bool radar_required;
	bool block_tx;
	u8 count;
};

/**
 * enum station_parameters_apply_mask - station parameter values to apply
 * @STATION_PARAM_APPLY_UAPSD: apply new uAPSD parameters (uapsd_queues, max_sp)
 * @STATION_PARAM_APPLY_CAPABILITY: apply new capability
 * @STATION_PARAM_APPLY_PLINK_STATE: apply new plink state
 *
 * Not all station parameters have in-band "no change" signalling,
 * for those that don't these flags will are used.
 */
enum station_parameters_apply_mask {
	STATION_PARAM_APPLY_UAPSD = BIT(0),
	STATION_PARAM_APPLY_CAPABILITY = BIT(1),
	STATION_PARAM_APPLY_PLINK_STATE = BIT(2),
};

/**
 * struct station_parameters - station parameters
 *
 * Used to change and create a new station.
 *
 * @vlan: vlan interface station should belong to
 * @supported_rates: supported rates in IEEE 802.11 format
 *	(or NULL for no change)
 * @supported_rates_len: number of supported rates
 * @sta_flags_mask: station flags that changed
 *	(bitmask of BIT(NL80211_STA_FLAG_...))
 * @sta_flags_set: station flags values
 *	(bitmask of BIT(NL80211_STA_FLAG_...))
 * @listen_interval: listen interval or -1 for no change
 * @aid: AID or zero for no change
 * @plink_action: plink action to take
 * @plink_state: set the peer link state for a station
 * @ht_capa: HT capabilities of station
 * @vht_capa: VHT capabilities of station
 * @uapsd_queues: bitmap of queues configured for uapsd. same format
 *	as the AC bitmap in the QoS info field
 * @max_sp: max Service Period. same format as the MAX_SP in the
 *	QoS info field (but already shifted down)
 * @sta_modify_mask: bitmap indicating which parameters changed
 *	(for those that don't have a natural "no change" value),
 *	see &enum station_parameters_apply_mask
 * @local_pm: local link-specific mesh power save mode (no change when set
 *	to unknown)
 * @capability: station capability
 * @ext_capab: extended capabilities of the station
 * @ext_capab_len: number of extended capabilities
 * @supported_channels: supported channels in IEEE 802.11 format
 * @supported_channels_len: number of supported channels
 * @supported_oper_classes: supported oper classes in IEEE 802.11 format
 * @supported_oper_classes_len: number of supported operating classes
 * @opmode_notif: operating mode field from Operating Mode Notification
 * @opmode_notif_used: information if operating mode field is used
 */
struct station_parameters {
	const u8 *supported_rates;
	struct net_device *vlan;
	u32 sta_flags_mask, sta_flags_set;
	u32 sta_modify_mask;
	int listen_interval;
	u16 aid;
	u8 supported_rates_len;
	u8 plink_action;
	u8 plink_state;
	const struct ieee80211_ht_cap *ht_capa;
	const struct ieee80211_vht_cap *vht_capa;
	u8 uapsd_queues;
	u8 max_sp;
	enum nl80211_mesh_power_mode local_pm;
	u16 capability;
	const u8 *ext_capab;
	u8 ext_capab_len;
	const u8 *supported_channels;
	u8 supported_channels_len;
	const u8 *supported_oper_classes;
	u8 supported_oper_classes_len;
	u8 opmode_notif;
	bool opmode_notif_used;
};

/**
 * struct station_del_parameters - station deletion parameters
 *
 * Used to delete a station entry (or all stations).
 *
 * @mac: MAC address of the station to remove or NULL to remove all stations
 * @subtype: Management frame subtype to use for indicating removal
 *	(10 = Disassociation, 12 = Deauthentication)
 * @reason_code: Reason code for the Disassociation/Deauthentication frame
 */
struct station_del_parameters {
	const u8 *mac;
	u8 subtype;
	u16 reason_code;
};

/**
 * enum cfg80211_station_type - the type of station being modified
 * @CFG80211_STA_AP_CLIENT: client of an AP interface
 * @CFG80211_STA_AP_MLME_CLIENT: client of an AP interface that has
 *	the AP MLME in the device
 * @CFG80211_STA_AP_STA: AP station on managed interface
 * @CFG80211_STA_IBSS: IBSS station
 * @CFG80211_STA_TDLS_PEER_SETUP: TDLS peer on managed interface (dummy entry
 *	while TDLS setup is in progress, it moves out of this state when
 *	being marked authorized; use this only if TDLS with external setup is
 *	supported/used)
 * @CFG80211_STA_TDLS_PEER_ACTIVE: TDLS peer on managed interface (active
 *	entry that is operating, has been marked authorized by userspace)
 * @CFG80211_STA_MESH_PEER_KERNEL: peer on mesh interface (kernel managed)
 * @CFG80211_STA_MESH_PEER_USER: peer on mesh interface (user managed)
 */
enum cfg80211_station_type {
	CFG80211_STA_AP_CLIENT,
	CFG80211_STA_AP_MLME_CLIENT,
	CFG80211_STA_AP_STA,
	CFG80211_STA_IBSS,
	CFG80211_STA_TDLS_PEER_SETUP,
	CFG80211_STA_TDLS_PEER_ACTIVE,
	CFG80211_STA_MESH_PEER_KERNEL,
	CFG80211_STA_MESH_PEER_USER,
};

/**
 * cfg80211_check_station_change - validate parameter changes
 * @wiphy: the wiphy this operates on
 * @params: the new parameters for a station
 * @statype: the type of station being modified
 *
 * Utility function for the @change_station driver method. Call this function
 * with the appropriate station type looking up the station (and checking that
 * it exists). It will verify whether the station change is acceptable, and if
 * not will return an error code. Note that it may modify the parameters for
 * backward compatibility reasons, so don't use them before calling this.
 */
int cfg80211_check_station_change(struct wiphy *wiphy,
				  struct station_parameters *params,
				  enum cfg80211_station_type statype);

/**
 * enum station_info_rate_flags - bitrate info flags
 *
 * Used by the driver to indicate the specific rate transmission
 * type for 802.11n transmissions.
 *
 * @RATE_INFO_FLAGS_MCS: mcs field filled with HT MCS
 * @RATE_INFO_FLAGS_VHT_MCS: mcs field filled with VHT MCS
 * @RATE_INFO_FLAGS_SHORT_GI: 400ns guard interval
 * @RATE_INFO_FLAGS_60G: 60GHz MCS
 */
enum rate_info_flags {
	RATE_INFO_FLAGS_MCS			= BIT(0),
	RATE_INFO_FLAGS_VHT_MCS			= BIT(1),
	RATE_INFO_FLAGS_SHORT_GI		= BIT(2),
	RATE_INFO_FLAGS_60G			= BIT(3),
};

/**
 * enum rate_info_bw - rate bandwidth information
 *
 * Used by the driver to indicate the rate bandwidth.
 *
 * @RATE_INFO_BW_5: 5 MHz bandwidth
 * @RATE_INFO_BW_10: 10 MHz bandwidth
 * @RATE_INFO_BW_20: 20 MHz bandwidth
 * @RATE_INFO_BW_40: 40 MHz bandwidth
 * @RATE_INFO_BW_80: 80 MHz bandwidth
 * @RATE_INFO_BW_160: 160 MHz bandwidth
 */
enum rate_info_bw {
	RATE_INFO_BW_5,
	RATE_INFO_BW_10,
	RATE_INFO_BW_20,
	RATE_INFO_BW_40,
	RATE_INFO_BW_80,
	RATE_INFO_BW_160,
};

/**
 * struct rate_info - bitrate information
 *
 * Information about a receiving or transmitting bitrate
 *
 * @flags: bitflag of flags from &enum rate_info_flags
 * @mcs: mcs index if struct describes a 802.11n bitrate
 * @legacy: bitrate in 100kbit/s for 802.11abg
 * @nss: number of streams (VHT only)
 * @bw: bandwidth (from &enum rate_info_bw)
 */
struct rate_info {
	u8 flags;
	u8 mcs;
	u16 legacy;
	u8 nss;
	u8 bw;
};

/**
 * enum station_info_rate_flags - bitrate info flags
 *
 * Used by the driver to indicate the specific rate transmission
 * type for 802.11n transmissions.
 *
 * @BSS_PARAM_FLAGS_CTS_PROT: whether CTS protection is enabled
 * @BSS_PARAM_FLAGS_SHORT_PREAMBLE: whether short preamble is enabled
 * @BSS_PARAM_FLAGS_SHORT_SLOT_TIME: whether short slot time is enabled
 */
enum bss_param_flags {
	BSS_PARAM_FLAGS_CTS_PROT	= 1<<0,
	BSS_PARAM_FLAGS_SHORT_PREAMBLE	= 1<<1,
	BSS_PARAM_FLAGS_SHORT_SLOT_TIME	= 1<<2,
};

/**
 * struct sta_bss_parameters - BSS parameters for the attached station
 *
 * Information about the currently associated BSS
 *
 * @flags: bitflag of flags from &enum bss_param_flags
 * @dtim_period: DTIM period for the BSS
 * @beacon_interval: beacon interval
 */
struct sta_bss_parameters {
	u8 flags;
	u8 dtim_period;
	u16 beacon_interval;
};

/**
 * struct cfg80211_tid_stats - per-TID statistics
 * @filled: bitmap of flags using the bits of &enum nl80211_tid_stats to
 *	indicate the relevant values in this struct are filled
 * @rx_msdu: number of received MSDUs
 * @tx_msdu: number of (attempted) transmitted MSDUs
 * @tx_msdu_retries: number of retries (not counting the first) for
 *	transmitted MSDUs
 * @tx_msdu_failed: number of failed transmitted MSDUs
 */
struct cfg80211_tid_stats {
	u32 filled;
	u64 rx_msdu;
	u64 tx_msdu;
	u64 tx_msdu_retries;
	u64 tx_msdu_failed;
};

#define IEEE80211_MAX_CHAINS	4

/**
 * struct station_info - station information
 *
 * Station information filled by driver for get_station() and dump_station.
 *
 * @filled: bitflag of flags using the bits of &enum nl80211_sta_info to
 *	indicate the relevant values in this struct for them
 * @connected_time: time(in secs) since a station is last connected
 * @inactive_time: time since last station activity (tx/rx) in milliseconds
 * @rx_bytes: bytes (size of MPDUs) received from this station
 * @tx_bytes: bytes (size of MPDUs) transmitted to this station
 * @llid: mesh local link id
 * @plid: mesh peer link id
 * @plink_state: mesh peer link state
 * @signal: The signal strength, type depends on the wiphy's signal_type.
 *	For CFG80211_SIGNAL_TYPE_MBM, value is expressed in _dBm_.
 * @signal_avg: Average signal strength, type depends on the wiphy's signal_type.
 *	For CFG80211_SIGNAL_TYPE_MBM, value is expressed in _dBm_.
 * @chains: bitmask for filled values in @chain_signal, @chain_signal_avg
 * @chain_signal: per-chain signal strength of last received packet in dBm
 * @chain_signal_avg: per-chain signal strength average in dBm
 * @txrate: current unicast bitrate from this station
 * @rxrate: current unicast bitrate to this station
 * @rx_packets: packets (MSDUs & MMPDUs) received from this station
 * @tx_packets: packets (MSDUs & MMPDUs) transmitted to this station
 * @tx_retries: cumulative retry counts (MPDUs)
 * @tx_failed: number of failed transmissions (MPDUs) (retries exceeded, no ACK)
 * @rx_dropped_misc:  Dropped for un-specified reason.
 * @bss_param: current BSS parameters
 * @generation: generation number for nl80211 dumps.
 *	This number should increase every time the list of stations
 *	changes, i.e. when a station is added or removed, so that
 *	userspace can tell whether it got a consistent snapshot.
 * @assoc_req_ies: IEs from (Re)Association Request.
 *	This is used only when in AP mode with drivers that do not use
 *	user space MLME/SME implementation. The information is provided for
 *	the cfg80211_new_sta() calls to notify user space of the IEs.
 * @assoc_req_ies_len: Length of assoc_req_ies buffer in octets.
 * @sta_flags: station flags mask & values
 * @beacon_loss_count: Number of times beacon loss event has triggered.
 * @t_offset: Time offset of the station relative to this host.
 * @local_pm: local mesh STA power save mode
 * @peer_pm: peer mesh STA power save mode
 * @nonpeer_pm: non-peer mesh STA power save mode
 * @expected_throughput: expected throughput in kbps (including 802.11 headers)
 *	towards this station.
 * @rx_beacon: number of beacons received from this peer
 * @rx_beacon_signal_avg: signal strength average (in dBm) for beacons received
 *	from this peer
 * @pertid: per-TID statistics, see &struct cfg80211_tid_stats, using the last
 *	(IEEE80211_NUM_TIDS) index for MSDUs not encapsulated in QoS-MPDUs.
 */
struct station_info {
	u32 filled;
	u32 connected_time;
	u32 inactive_time;
	u64 rx_bytes;
	u64 tx_bytes;
	u16 llid;
	u16 plid;
	u8 plink_state;
	s8 signal;
	s8 signal_avg;

	u8 chains;
	s8 chain_signal[IEEE80211_MAX_CHAINS];
	s8 chain_signal_avg[IEEE80211_MAX_CHAINS];

	struct rate_info txrate;
	struct rate_info rxrate;
	u32 rx_packets;
	u32 tx_packets;
	u32 tx_retries;
	u32 tx_failed;
	u32 rx_dropped_misc;
	struct sta_bss_parameters bss_param;
	struct nl80211_sta_flag_update sta_flags;

	int generation;

	const u8 *assoc_req_ies;
	size_t assoc_req_ies_len;

	u32 beacon_loss_count;
	s64 t_offset;
	enum nl80211_mesh_power_mode local_pm;
	enum nl80211_mesh_power_mode peer_pm;
	enum nl80211_mesh_power_mode nonpeer_pm;

	u32 expected_throughput;

	u64 rx_beacon;
	u8 rx_beacon_signal_avg;
	struct cfg80211_tid_stats pertid[IEEE80211_NUM_TIDS + 1];
};

/**
 * cfg80211_get_station - retrieve information about a given station
 * @dev: the device where the station is supposed to be connected to
 * @mac_addr: the mac address of the station of interest
 * @sinfo: pointer to the structure to fill with the information
 *
 * Returns 0 on success and sinfo is filled with the available information
 * otherwise returns a negative error code and the content of sinfo has to be
 * considered undefined.
 */
int cfg80211_get_station(struct net_device *dev, const u8 *mac_addr,
			 struct station_info *sinfo);

/**
 * enum monitor_flags - monitor flags
 *
 * Monitor interface configuration flags. Note that these must be the bits
 * according to the nl80211 flags.
 *
 * @MONITOR_FLAG_FCSFAIL: pass frames with bad FCS
 * @MONITOR_FLAG_PLCPFAIL: pass frames with bad PLCP
 * @MONITOR_FLAG_CONTROL: pass control frames
 * @MONITOR_FLAG_OTHER_BSS: disable BSSID filtering
 * @MONITOR_FLAG_COOK_FRAMES: report frames after processing
 * @MONITOR_FLAG_ACTIVE: active monitor, ACKs frames on its MAC address
 */
enum monitor_flags {
	MONITOR_FLAG_FCSFAIL		= 1<<NL80211_MNTR_FLAG_FCSFAIL,
	MONITOR_FLAG_PLCPFAIL		= 1<<NL80211_MNTR_FLAG_PLCPFAIL,
	MONITOR_FLAG_CONTROL		= 1<<NL80211_MNTR_FLAG_CONTROL,
	MONITOR_FLAG_OTHER_BSS		= 1<<NL80211_MNTR_FLAG_OTHER_BSS,
	MONITOR_FLAG_COOK_FRAMES	= 1<<NL80211_MNTR_FLAG_COOK_FRAMES,
	MONITOR_FLAG_ACTIVE		= 1<<NL80211_MNTR_FLAG_ACTIVE,
};

/**
 * enum mpath_info_flags -  mesh path information flags
 *
 * Used by the driver to indicate which info in &struct mpath_info it has filled
 * in during get_station() or dump_station().
 *
 * @MPATH_INFO_FRAME_QLEN: @frame_qlen filled
 * @MPATH_INFO_SN: @sn filled
 * @MPATH_INFO_METRIC: @metric filled
 * @MPATH_INFO_EXPTIME: @exptime filled
 * @MPATH_INFO_DISCOVERY_TIMEOUT: @discovery_timeout filled
 * @MPATH_INFO_DISCOVERY_RETRIES: @discovery_retries filled
 * @MPATH_INFO_FLAGS: @flags filled
 */
enum mpath_info_flags {
	MPATH_INFO_FRAME_QLEN		= BIT(0),
	MPATH_INFO_SN			= BIT(1),
	MPATH_INFO_METRIC		= BIT(2),
	MPATH_INFO_EXPTIME		= BIT(3),
	MPATH_INFO_DISCOVERY_TIMEOUT	= BIT(4),
	MPATH_INFO_DISCOVERY_RETRIES	= BIT(5),
	MPATH_INFO_FLAGS		= BIT(6),
};

/**
 * struct mpath_info - mesh path information
 *
 * Mesh path information filled by driver for get_mpath() and dump_mpath().
 *
 * @filled: bitfield of flags from &enum mpath_info_flags
 * @frame_qlen: number of queued frames for this destination
 * @sn: target sequence number
 * @metric: metric (cost) of this mesh path
 * @exptime: expiration time for the mesh path from now, in msecs
 * @flags: mesh path flags
 * @discovery_timeout: total mesh path discovery timeout, in msecs
 * @discovery_retries: mesh path discovery retries
 * @generation: generation number for nl80211 dumps.
 *	This number should increase every time the list of mesh paths
 *	changes, i.e. when a station is added or removed, so that
 *	userspace can tell whether it got a consistent snapshot.
 */
struct mpath_info {
	u32 filled;
	u32 frame_qlen;
	u32 sn;
	u32 metric;
	u32 exptime;
	u32 discovery_timeout;
	u8 discovery_retries;
	u8 flags;

	int generation;
};

/**
 * struct bss_parameters - BSS parameters
 *
 * Used to change BSS parameters (mainly for AP mode).
 *
 * @use_cts_prot: Whether to use CTS protection
 *	(0 = no, 1 = yes, -1 = do not change)
 * @use_short_preamble: Whether the use of short preambles is allowed
 *	(0 = no, 1 = yes, -1 = do not change)
 * @use_short_slot_time: Whether the use of short slot time is allowed
 *	(0 = no, 1 = yes, -1 = do not change)
 * @basic_rates: basic rates in IEEE 802.11 format
 *	(or NULL for no change)
 * @basic_rates_len: number of basic rates
 * @ap_isolate: do not forward packets between connected stations
 * @ht_opmode: HT Operation mode
 * 	(u16 = opmode, -1 = do not change)
 * @p2p_ctwindow: P2P CT Window (-1 = no change)
 * @p2p_opp_ps: P2P opportunistic PS (-1 = no change)
 */
struct bss_parameters {
	int use_cts_prot;
	int use_short_preamble;
	int use_short_slot_time;
	const u8 *basic_rates;
	u8 basic_rates_len;
	int ap_isolate;
	int ht_opmode;
	s8 p2p_ctwindow, p2p_opp_ps;
};

/**
 * struct mesh_config - 802.11s mesh configuration
 *
 * These parameters can be changed while the mesh is active.
 *
 * @dot11MeshRetryTimeout: the initial retry timeout in millisecond units used
 *	by the Mesh Peering Open message
 * @dot11MeshConfirmTimeout: the initial retry timeout in millisecond units
 *	used by the Mesh Peering Open message
 * @dot11MeshHoldingTimeout: the confirm timeout in millisecond units used by
 *	the mesh peering management to close a mesh peering
 * @dot11MeshMaxPeerLinks: the maximum number of peer links allowed on this
 *	mesh interface
 * @dot11MeshMaxRetries: the maximum number of peer link open retries that can
 *	be sent to establish a new peer link instance in a mesh
 * @dot11MeshTTL: the value of TTL field set at a source mesh STA
 * @element_ttl: the value of TTL field set at a mesh STA for path selection
 *	elements
 * @auto_open_plinks: whether we should automatically open peer links when we
 *	detect compatible mesh peers
 * @dot11MeshNbrOffsetMaxNeighbor: the maximum number of neighbors to
 *	synchronize to for 11s default synchronization method
 * @dot11MeshHWMPmaxPREQretries: the number of action frames containing a PREQ
 *	that an originator mesh STA can send to a particular path target
 * @path_refresh_time: how frequently to refresh mesh paths in milliseconds
 * @min_discovery_timeout: the minimum length of time to wait until giving up on
 *	a path discovery in milliseconds
 * @dot11MeshHWMPactivePathTimeout: the time (in TUs) for which mesh STAs
 *	receiving a PREQ shall consider the forwarding information from the
 *	root to be valid. (TU = time unit)
 * @dot11MeshHWMPpreqMinInterval: the minimum interval of time (in TUs) during
 *	which a mesh STA can send only one action frame containing a PREQ
 *	element
 * @dot11MeshHWMPperrMinInterval: the minimum interval of time (in TUs) during
 *	which a mesh STA can send only one Action frame containing a PERR
 *	element
 * @dot11MeshHWMPnetDiameterTraversalTime: the interval of time (in TUs) that
 *	it takes for an HWMP information element to propagate across the mesh
 * @dot11MeshHWMPRootMode: the configuration of a mesh STA as root mesh STA
 * @dot11MeshHWMPRannInterval: the interval of time (in TUs) between root
 *	announcements are transmitted
 * @dot11MeshGateAnnouncementProtocol: whether to advertise that this mesh
 *	station has access to a broader network beyond the MBSS. (This is
 *	missnamed in draft 12.0: dot11MeshGateAnnouncementProtocol set to true
 *	only means that the station will announce others it's a mesh gate, but
 *	not necessarily using the gate announcement protocol. Still keeping the
 *	same nomenclature to be in sync with the spec)
 * @dot11MeshForwarding: whether the Mesh STA is forwarding or non-forwarding
 *	entity (default is TRUE - forwarding entity)
 * @rssi_threshold: the threshold for average signal strength of candidate
 *	station to establish a peer link
 * @ht_opmode: mesh HT protection mode
 *
 * @dot11MeshHWMPactivePathToRootTimeout: The time (in TUs) for which mesh STAs
 *	receiving a proactive PREQ shall consider the forwarding information to
 *	the root mesh STA to be valid.
 *
 * @dot11MeshHWMProotInterval: The interval of time (in TUs) between proactive
 *	PREQs are transmitted.
 * @dot11MeshHWMPconfirmationInterval: The minimum interval of time (in TUs)
 *	during which a mesh STA can send only one Action frame containing
 *	a PREQ element for root path confirmation.
 * @power_mode: The default mesh power save mode which will be the initial
 *	setting for new peer links.
 * @dot11MeshAwakeWindowDuration: The duration in TUs the STA will remain awake
 *	after transmitting its beacon.
 * @plink_timeout: If no tx activity is seen from a STA we've established
 *	peering with for longer than this time (in seconds), then remove it
 *	from the STA's list of peers.  Default is 30 minutes.
 */
struct mesh_config {
	u16 dot11MeshRetryTimeout;
	u16 dot11MeshConfirmTimeout;
	u16 dot11MeshHoldingTimeout;
	u16 dot11MeshMaxPeerLinks;
	u8 dot11MeshMaxRetries;
	u8 dot11MeshTTL;
	u8 element_ttl;
	bool auto_open_plinks;
	u32 dot11MeshNbrOffsetMaxNeighbor;
	u8 dot11MeshHWMPmaxPREQretries;
	u32 path_refresh_time;
	u16 min_discovery_timeout;
	u32 dot11MeshHWMPactivePathTimeout;
	u16 dot11MeshHWMPpreqMinInterval;
	u16 dot11MeshHWMPperrMinInterval;
	u16 dot11MeshHWMPnetDiameterTraversalTime;
	u8 dot11MeshHWMPRootMode;
	u16 dot11MeshHWMPRannInterval;
	bool dot11MeshGateAnnouncementProtocol;
	bool dot11MeshForwarding;
	s32 rssi_threshold;
	u16 ht_opmode;
	u32 dot11MeshHWMPactivePathToRootTimeout;
	u16 dot11MeshHWMProotInterval;
	u16 dot11MeshHWMPconfirmationInterval;
	enum nl80211_mesh_power_mode power_mode;
	u16 dot11MeshAwakeWindowDuration;
	u32 plink_timeout;
};

/**
 * struct mesh_setup - 802.11s mesh setup configuration
 * @chandef: defines the channel to use
 * @mesh_id: the mesh ID
 * @mesh_id_len: length of the mesh ID, at least 1 and at most 32 bytes
 * @sync_method: which synchronization method to use
 * @path_sel_proto: which path selection protocol to use
 * @path_metric: which metric to use
 * @auth_id: which authentication method this mesh is using
 * @ie: vendor information elements (optional)
 * @ie_len: length of vendor information elements
 * @is_authenticated: this mesh requires authentication
 * @is_secure: this mesh uses security
 * @user_mpm: userspace handles all MPM functions
 * @dtim_period: DTIM period to use
 * @beacon_interval: beacon interval to use
 * @mcast_rate: multicat rate for Mesh Node [6Mbps is the default for 802.11a]
 * @basic_rates: basic rates to use when creating the mesh
 *
 * These parameters are fixed when the mesh is created.
 */
struct mesh_setup {
	struct cfg80211_chan_def chandef;
	const u8 *mesh_id;
	u8 mesh_id_len;
	u8 sync_method;
	u8 path_sel_proto;
	u8 path_metric;
	u8 auth_id;
	const u8 *ie;
	u8 ie_len;
	bool is_authenticated;
	bool is_secure;
	bool user_mpm;
	u8 dtim_period;
	u16 beacon_interval;
	int mcast_rate[IEEE80211_NUM_BANDS];
	u32 basic_rates;
};

/**
 * struct ocb_setup - 802.11p OCB mode setup configuration
 * @chandef: defines the channel to use
 *
 * These parameters are fixed when connecting to the network
 */
struct ocb_setup {
	struct cfg80211_chan_def chandef;
};

/**
 * struct ieee80211_txq_params - TX queue parameters
 * @ac: AC identifier
 * @txop: Maximum burst time in units of 32 usecs, 0 meaning disabled
 * @cwmin: Minimum contention window [a value of the form 2^n-1 in the range
 *	1..32767]
 * @cwmax: Maximum contention window [a value of the form 2^n-1 in the range
 *	1..32767]
 * @aifs: Arbitration interframe space [0..255]
 */
struct ieee80211_txq_params {
	enum nl80211_ac ac;
	u16 txop;
	u16 cwmin;
	u16 cwmax;
	u8 aifs;
};

/**
 * DOC: Scanning and BSS list handling
 *
 * The scanning process itself is fairly simple, but cfg80211 offers quite
 * a bit of helper functionality. To start a scan, the scan operation will
 * be invoked with a scan definition. This scan definition contains the
 * channels to scan, and the SSIDs to send probe requests for (including the
 * wildcard, if desired). A passive scan is indicated by having no SSIDs to
 * probe. Additionally, a scan request may contain extra information elements
 * that should be added to the probe request. The IEs are guaranteed to be
 * well-formed, and will not exceed the maximum length the driver advertised
 * in the wiphy structure.
 *
 * When scanning finds a BSS, cfg80211 needs to be notified of that, because
 * it is responsible for maintaining the BSS list; the driver should not
 * maintain a list itself. For this notification, various functions exist.
 *
 * Since drivers do not maintain a BSS list, there are also a number of
 * functions to search for a BSS and obtain information about it from the
 * BSS structure cfg80211 maintains. The BSS list is also made available
 * to userspace.
 */

/**
 * struct cfg80211_ssid - SSID description
 * @ssid: the SSID
 * @ssid_len: length of the ssid
 */
struct cfg80211_ssid {
	u8 ssid[IEEE80211_MAX_SSID_LEN];
	u8 ssid_len;
};

/**
 * struct cfg80211_scan_request - scan request description
 *
 * @ssids: SSIDs to scan for (active scan only)
 * @n_ssids: number of SSIDs
 * @channels: channels to scan on.
 * @n_channels: total number of channels to scan
 * @scan_width: channel width for scanning
 * @ie: optional information element(s) to add into Probe Request or %NULL
 * @ie_len: length of ie in octets
 * @flags: bit field of flags controlling operation
 * @rates: bitmap of rates to advertise for each band
 * @wiphy: the wiphy this was for
 * @scan_start: time (in jiffies) when the scan started
 * @wdev: the wireless device to scan for
 * @aborted: (internal) scan request was notified as aborted
 * @notified: (internal) scan request was notified as done or aborted
 * @no_cck: used to send probe requests at non CCK rate in 2GHz band
 * @mac_addr: MAC address used with randomisation
 * @mac_addr_mask: MAC address mask used with randomisation, bits that
 *	are 0 in the mask should be randomised, bits that are 1 should
 *	be taken from the @mac_addr
 */
struct cfg80211_scan_request {
	struct cfg80211_ssid *ssids;
	int n_ssids;
	u32 n_channels;
	enum nl80211_bss_scan_width scan_width;
	const u8 *ie;
	size_t ie_len;
	u32 flags;

	u32 rates[IEEE80211_NUM_BANDS];

	struct wireless_dev *wdev;

	u8 mac_addr[ETH_ALEN] __aligned(2);
	u8 mac_addr_mask[ETH_ALEN] __aligned(2);

	/* internal */
	struct wiphy *wiphy;
	unsigned long scan_start;
	bool aborted, notified;
	bool no_cck;

	/* keep last */
	struct ieee80211_channel *channels[0];
};

static inline void get_random_mask_addr(u8 *buf, const u8 *addr, const u8 *mask)
{
	int i;

	get_random_bytes(buf, ETH_ALEN);
	for (i = 0; i < ETH_ALEN; i++) {
		buf[i] &= ~mask[i];
		buf[i] |= addr[i] & mask[i];
	}
}

/**
 * struct cfg80211_match_set - sets of attributes to match
 *
 * @ssid: SSID to be matched; may be zero-length for no match (RSSI only)
 * @rssi_thold: don't report scan results below this threshold (in s32 dBm)
 */
struct cfg80211_match_set {
	struct cfg80211_ssid ssid;
	s32 rssi_thold;
};

/**
 * struct cfg80211_sched_scan_request - scheduled scan request description
 *
 * @ssids: SSIDs to scan for (passed in the probe_reqs in active scans)
 * @n_ssids: number of SSIDs
 * @n_channels: total number of channels to scan
 * @scan_width: channel width for scanning
 * @interval: interval between each scheduled scan cycle
 * @ie: optional information element(s) to add into Probe Request or %NULL
 * @ie_len: length of ie in octets
 * @flags: bit field of flags controlling operation
 * @match_sets: sets of parameters to be matched for a scan result
 * 	entry to be considered valid and to be passed to the host
 * 	(others are filtered out).
 *	If ommited, all results are passed.
 * @n_match_sets: number of match sets
 * @wiphy: the wiphy this was for
 * @dev: the interface
 * @scan_start: start time of the scheduled scan
 * @channels: channels to scan
 * @min_rssi_thold: for drivers only supporting a single threshold, this
 *	contains the minimum over all matchsets
 * @mac_addr: MAC address used with randomisation
 * @mac_addr_mask: MAC address mask used with randomisation, bits that
 *	are 0 in the mask should be randomised, bits that are 1 should
 *	be taken from the @mac_addr
 * @rcu_head: RCU callback used to free the struct
 * @owner_nlportid: netlink portid of owner (if this should is a request
 *	owned by a particular socket)
 * @delay: delay in seconds to use before starting the first scan
 *	cycle.  The driver may ignore this parameter and start
 *	immediately (or at any other time), if this feature is not
 *	supported.
 */
struct cfg80211_sched_scan_request {
	struct cfg80211_ssid *ssids;
	int n_ssids;
	u32 n_channels;
	enum nl80211_bss_scan_width scan_width;
	u32 interval;
	const u8 *ie;
	size_t ie_len;
	u32 flags;
	struct cfg80211_match_set *match_sets;
	int n_match_sets;
	s32 min_rssi_thold;
	u32 delay;

	u8 mac_addr[ETH_ALEN] __aligned(2);
	u8 mac_addr_mask[ETH_ALEN] __aligned(2);

	/* internal */
	struct wiphy *wiphy;
	struct net_device *dev;
	unsigned long scan_start;
	struct rcu_head rcu_head;
	u32 owner_nlportid;

	/* keep last */
	struct ieee80211_channel *channels[0];
};

/**
 * enum cfg80211_signal_type - signal type
 *
 * @CFG80211_SIGNAL_TYPE_NONE: no signal strength information available
 * @CFG80211_SIGNAL_TYPE_MBM: signal strength in mBm (100*dBm)
 * @CFG80211_SIGNAL_TYPE_UNSPEC: signal strength, increasing from 0 through 100
 */
enum cfg80211_signal_type {
	CFG80211_SIGNAL_TYPE_NONE,
	CFG80211_SIGNAL_TYPE_MBM,
	CFG80211_SIGNAL_TYPE_UNSPEC,
};

/**
 * struct cfg80211_bss_ie_data - BSS entry IE data
 * @tsf: TSF contained in the frame that carried these IEs
 * @rcu_head: internal use, for freeing
 * @len: length of the IEs
 * @from_beacon: these IEs are known to come from a beacon
 * @data: IE data
 */
struct cfg80211_bss_ies {
	u64 tsf;
	struct rcu_head rcu_head;
	int len;
	bool from_beacon;
	u8 data[];
};

/**
 * struct cfg80211_bss - BSS description
 *
 * This structure describes a BSS (which may also be a mesh network)
 * for use in scan results and similar.
 *
 * @channel: channel this BSS is on
 * @scan_width: width of the control channel
 * @bssid: BSSID of the BSS
 * @beacon_interval: the beacon interval as from the frame
 * @capability: the capability field in host byte order
 * @ies: the information elements (Note that there is no guarantee that these
 *	are well-formed!); this is a pointer to either the beacon_ies or
 *	proberesp_ies depending on whether Probe Response frame has been
 *	received. It is always non-%NULL.
 * @beacon_ies: the information elements from the last Beacon frame
 *	(implementation note: if @hidden_beacon_bss is set this struct doesn't
 *	own the beacon_ies, but they're just pointers to the ones from the
 *	@hidden_beacon_bss struct)
 * @proberesp_ies: the information elements from the last Probe Response frame
 * @hidden_beacon_bss: in case this BSS struct represents a probe response from
 *	a BSS that hides the SSID in its beacon, this points to the BSS struct
 *	that holds the beacon data. @beacon_ies is still valid, of course, and
 *	points to the same data as hidden_beacon_bss->beacon_ies in that case.
 * @signal: signal strength value (type depends on the wiphy's signal_type)
 * @priv: private area for driver use, has at least wiphy->bss_priv_size bytes
 */
struct cfg80211_bss {
	struct ieee80211_channel *channel;
	enum nl80211_bss_scan_width scan_width;

	const struct cfg80211_bss_ies __rcu *ies;
	const struct cfg80211_bss_ies __rcu *beacon_ies;
	const struct cfg80211_bss_ies __rcu *proberesp_ies;

	struct cfg80211_bss *hidden_beacon_bss;

	s32 signal;

	u16 beacon_interval;
	u16 capability;

	u8 bssid[ETH_ALEN];

	u8 priv[0] __aligned(sizeof(void *));
};

/**
 * ieee80211_bss_get_ie - find IE with given ID
 * @bss: the bss to search
 * @ie: the IE ID
 *
 * Note that the return value is an RCU-protected pointer, so
 * rcu_read_lock() must be held when calling this function.
 * Return: %NULL if not found.
 */
const u8 *ieee80211_bss_get_ie(struct cfg80211_bss *bss, u8 ie);


/**
 * struct cfg80211_auth_request - Authentication request data
 *
 * This structure provides information needed to complete IEEE 802.11
 * authentication.
 *
 * @bss: The BSS to authenticate with, the callee must obtain a reference
 *	to it if it needs to keep it.
 * @auth_type: Authentication type (algorithm)
 * @ie: Extra IEs to add to Authentication frame or %NULL
 * @ie_len: Length of ie buffer in octets
 * @key_len: length of WEP key for shared key authentication
 * @key_idx: index of WEP key for shared key authentication
 * @key: WEP key for shared key authentication
 * @sae_data: Non-IE data to use with SAE or %NULL. This starts with
 *	Authentication transaction sequence number field.
 * @sae_data_len: Length of sae_data buffer in octets
 */
struct cfg80211_auth_request {
	struct cfg80211_bss *bss;
	const u8 *ie;
	size_t ie_len;
	enum nl80211_auth_type auth_type;
	const u8 *key;
	u8 key_len, key_idx;
	const u8 *sae_data;
	size_t sae_data_len;
};

/**
 * enum cfg80211_assoc_req_flags - Over-ride default behaviour in association.
 *
 * @ASSOC_REQ_DISABLE_HT:  Disable HT (802.11n)
 * @ASSOC_REQ_DISABLE_VHT:  Disable VHT
 * @ASSOC_REQ_USE_RRM: Declare RRM capability in this association
 */
enum cfg80211_assoc_req_flags {
	ASSOC_REQ_DISABLE_HT		= BIT(0),
	ASSOC_REQ_DISABLE_VHT		= BIT(1),
	ASSOC_REQ_USE_RRM		= BIT(2),
};

/**
 * struct cfg80211_assoc_request - (Re)Association request data
 *
 * This structure provides information needed to complete IEEE 802.11
 * (re)association.
 * @bss: The BSS to associate with. If the call is successful the driver is
 *	given a reference that it must give back to cfg80211_send_rx_assoc()
 *	or to cfg80211_assoc_timeout(). To ensure proper refcounting, new
 *	association requests while already associating must be rejected.
 * @ie: Extra IEs to add to (Re)Association Request frame or %NULL
 * @ie_len: Length of ie buffer in octets
 * @use_mfp: Use management frame protection (IEEE 802.11w) in this association
 * @crypto: crypto settings
 * @prev_bssid: previous BSSID, if not %NULL use reassociate frame
 * @flags:  See &enum cfg80211_assoc_req_flags
 * @ht_capa:  HT Capabilities over-rides.  Values set in ht_capa_mask
 *	will be used in ht_capa.  Un-supported values will be ignored.
 * @ht_capa_mask:  The bits of ht_capa which are to be used.
 * @vht_capa: VHT capability override
 * @vht_capa_mask: VHT capability mask indicating which fields to use
 */
struct cfg80211_assoc_request {
	struct cfg80211_bss *bss;
	const u8 *ie, *prev_bssid;
	size_t ie_len;
	struct cfg80211_crypto_settings crypto;
	bool use_mfp;
	u32 flags;
	struct ieee80211_ht_cap ht_capa;
	struct ieee80211_ht_cap ht_capa_mask;
	struct ieee80211_vht_cap vht_capa, vht_capa_mask;
};

/**
 * struct cfg80211_deauth_request - Deauthentication request data
 *
 * This structure provides information needed to complete IEEE 802.11
 * deauthentication.
 *
 * @bssid: the BSSID of the BSS to deauthenticate from
 * @ie: Extra IEs to add to Deauthentication frame or %NULL
 * @ie_len: Length of ie buffer in octets
 * @reason_code: The reason code for the deauthentication
 * @local_state_change: if set, change local state only and
 *	do not set a deauth frame
 */
struct cfg80211_deauth_request {
	const u8 *bssid;
	const u8 *ie;
	size_t ie_len;
	u16 reason_code;
	bool local_state_change;
};

/**
 * struct cfg80211_disassoc_request - Disassociation request data
 *
 * This structure provides information needed to complete IEEE 802.11
 * disassocation.
 *
 * @bss: the BSS to disassociate from
 * @ie: Extra IEs to add to Disassociation frame or %NULL
 * @ie_len: Length of ie buffer in octets
 * @reason_code: The reason code for the disassociation
 * @local_state_change: This is a request for a local state only, i.e., no
 *	Disassociation frame is to be transmitted.
 */
struct cfg80211_disassoc_request {
	struct cfg80211_bss *bss;
	const u8 *ie;
	size_t ie_len;
	u16 reason_code;
	bool local_state_change;
};

/**
 * struct cfg80211_ibss_params - IBSS parameters
 *
 * This structure defines the IBSS parameters for the join_ibss()
 * method.
 *
 * @ssid: The SSID, will always be non-null.
 * @ssid_len: The length of the SSID, will always be non-zero.
 * @bssid: Fixed BSSID requested, maybe be %NULL, if set do not
 *	search for IBSSs with a different BSSID.
 * @chandef: defines the channel to use if no other IBSS to join can be found
 * @channel_fixed: The channel should be fixed -- do not search for
 *	IBSSs to join on other channels.
 * @ie: information element(s) to include in the beacon
 * @ie_len: length of that
 * @beacon_interval: beacon interval to use
 * @privacy: this is a protected network, keys will be configured
 *	after joining
 * @control_port: whether user space controls IEEE 802.1X port, i.e.,
 *	sets/clears %NL80211_STA_FLAG_AUTHORIZED. If true, the driver is
 *	required to assume that the port is unauthorized until authorized by
 *	user space. Otherwise, port is marked authorized by default.
 * @userspace_handles_dfs: whether user space controls DFS operation, i.e.
 *	changes the channel when a radar is detected. This is required
 *	to operate on DFS channels.
 * @basic_rates: bitmap of basic rates to use when creating the IBSS
 * @mcast_rate: per-band multicast rate index + 1 (0: disabled)
 * @ht_capa:  HT Capabilities over-rides.  Values set in ht_capa_mask
 *	will be used in ht_capa.  Un-supported values will be ignored.
 * @ht_capa_mask:  The bits of ht_capa which are to be used.
 */
struct cfg80211_ibss_params {
	const u8 *ssid;
	const u8 *bssid;
	struct cfg80211_chan_def chandef;
	const u8 *ie;
	u8 ssid_len, ie_len;
	u16 beacon_interval;
	u32 basic_rates;
	bool channel_fixed;
	bool privacy;
	bool control_port;
	bool userspace_handles_dfs;
	int mcast_rate[IEEE80211_NUM_BANDS];
	struct ieee80211_ht_cap ht_capa;
	struct ieee80211_ht_cap ht_capa_mask;
};

/**
 * struct cfg80211_connect_params - Connection parameters
 *
 * This structure provides information needed to complete IEEE 802.11
 * authentication and association.
 *
 * @channel: The channel to use or %NULL if not specified (auto-select based
 *	on scan results)
 * @channel_hint: The channel of the recommended BSS for initial connection or
 *	%NULL if not specified
 * @bssid: The AP BSSID or %NULL if not specified (auto-select based on scan
 *	results)
 * @bssid_hint: The recommended AP BSSID for initial connection to the BSS or
 *	%NULL if not specified. Unlike the @bssid parameter, the driver is
 *	allowed to ignore this @bssid_hint if it has knowledge of a better BSS
 *	to use.
 * @ssid: SSID
 * @ssid_len: Length of ssid in octets
 * @auth_type: Authentication type (algorithm)
 * @ie: IEs for association request
 * @ie_len: Length of assoc_ie in octets
 * @privacy: indicates whether privacy-enabled APs should be used
 * @mfp: indicate whether management frame protection is used
 * @crypto: crypto settings
 * @key_len: length of WEP key for shared key authentication
 * @key_idx: index of WEP key for shared key authentication
 * @key: WEP key for shared key authentication
 * @flags:  See &enum cfg80211_assoc_req_flags
 * @bg_scan_period:  Background scan period in seconds
 *	or -1 to indicate that default value is to be used.
 * @ht_capa:  HT Capabilities over-rides.  Values set in ht_capa_mask
 *	will be used in ht_capa.  Un-supported values will be ignored.
 * @ht_capa_mask:  The bits of ht_capa which are to be used.
 * @vht_capa:  VHT Capability overrides
 * @vht_capa_mask: The bits of vht_capa which are to be used.
 */
struct cfg80211_connect_params {
	struct ieee80211_channel *channel;
	struct ieee80211_channel *channel_hint;
	const u8 *bssid;
	const u8 *bssid_hint;
	const u8 *ssid;
	size_t ssid_len;
	enum nl80211_auth_type auth_type;
	const u8 *ie;
	size_t ie_len;
	bool privacy;
	enum nl80211_mfp mfp;
	struct cfg80211_crypto_settings crypto;
	const u8 *key;
	u8 key_len, key_idx;
	u32 flags;
	int bg_scan_period;
	struct ieee80211_ht_cap ht_capa;
	struct ieee80211_ht_cap ht_capa_mask;
	struct ieee80211_vht_cap vht_capa;
	struct ieee80211_vht_cap vht_capa_mask;
};

/**
 * enum wiphy_params_flags - set_wiphy_params bitfield values
 * @WIPHY_PARAM_RETRY_SHORT: wiphy->retry_short has changed
 * @WIPHY_PARAM_RETRY_LONG: wiphy->retry_long has changed
 * @WIPHY_PARAM_FRAG_THRESHOLD: wiphy->frag_threshold has changed
 * @WIPHY_PARAM_RTS_THRESHOLD: wiphy->rts_threshold has changed
 * @WIPHY_PARAM_COVERAGE_CLASS: coverage class changed
 * @WIPHY_PARAM_DYN_ACK: dynack has been enabled
 */
enum wiphy_params_flags {
	WIPHY_PARAM_RETRY_SHORT		= 1 << 0,
	WIPHY_PARAM_RETRY_LONG		= 1 << 1,
	WIPHY_PARAM_FRAG_THRESHOLD	= 1 << 2,
	WIPHY_PARAM_RTS_THRESHOLD	= 1 << 3,
	WIPHY_PARAM_COVERAGE_CLASS	= 1 << 4,
	WIPHY_PARAM_DYN_ACK		= 1 << 5,
};

/*
 * cfg80211_bitrate_mask - masks for bitrate control
 */
struct cfg80211_bitrate_mask {
	struct {
		u32 legacy;
		u8 ht_mcs[IEEE80211_HT_MCS_MASK_LEN];
		u16 vht_mcs[NL80211_VHT_NSS_MAX];
		enum nl80211_txrate_gi gi;
	} control[IEEE80211_NUM_BANDS];
};
/**
 * struct cfg80211_pmksa - PMK Security Association
 *
 * This structure is passed to the set/del_pmksa() method for PMKSA
 * caching.
 *
 * @bssid: The AP's BSSID.
 * @pmkid: The PMK material itself.
 */
struct cfg80211_pmksa {
	const u8 *bssid;
	const u8 *pmkid;
};

/**
 * struct cfg80211_pkt_pattern - packet pattern
 * @mask: bitmask where to match pattern and where to ignore bytes,
 *	one bit per byte, in same format as nl80211
 * @pattern: bytes to match where bitmask is 1
 * @pattern_len: length of pattern (in bytes)
 * @pkt_offset: packet offset (in bytes)
 *
 * Internal note: @mask and @pattern are allocated in one chunk of
 * memory, free @mask only!
 */
struct cfg80211_pkt_pattern {
	const u8 *mask, *pattern;
	int pattern_len;
	int pkt_offset;
};

/**
 * struct cfg80211_wowlan_tcp - TCP connection parameters
 *
 * @sock: (internal) socket for source port allocation
 * @src: source IP address
 * @dst: destination IP address
 * @dst_mac: destination MAC address
 * @src_port: source port
 * @dst_port: destination port
 * @payload_len: data payload length
 * @payload: data payload buffer
 * @payload_seq: payload sequence stamping configuration
 * @data_interval: interval at which to send data packets
 * @wake_len: wakeup payload match length
 * @wake_data: wakeup payload match data
 * @wake_mask: wakeup payload match mask
 * @tokens_size: length of the tokens buffer
 * @payload_tok: payload token usage configuration
 */
struct cfg80211_wowlan_tcp {
	struct socket *sock;
	__be32 src, dst;
	u16 src_port, dst_port;
	u8 dst_mac[ETH_ALEN];
	int payload_len;
	const u8 *payload;
	struct nl80211_wowlan_tcp_data_seq payload_seq;
	u32 data_interval;
	u32 wake_len;
	const u8 *wake_data, *wake_mask;
	u32 tokens_size;
	/* must be last, variable member */
	struct nl80211_wowlan_tcp_data_token payload_tok;
};

/**
 * struct cfg80211_wowlan - Wake on Wireless-LAN support info
 *
 * This structure defines the enabled WoWLAN triggers for the device.
 * @any: wake up on any activity -- special trigger if device continues
 *	operating as normal during suspend
 * @disconnect: wake up if getting disconnected
 * @magic_pkt: wake up on receiving magic packet
 * @patterns: wake up on receiving packet matching a pattern
 * @n_patterns: number of patterns
 * @gtk_rekey_failure: wake up on GTK rekey failure
 * @eap_identity_req: wake up on EAP identity request packet
 * @four_way_handshake: wake up on 4-way handshake
 * @rfkill_release: wake up when rfkill is released
 * @tcp: TCP connection establishment/wakeup parameters, see nl80211.h.
 *	NULL if not configured.
 * @nd_config: configuration for the scan to be used for net detect wake.
 */
struct cfg80211_wowlan {
	bool any, disconnect, magic_pkt, gtk_rekey_failure,
	     eap_identity_req, four_way_handshake,
	     rfkill_release;
	struct cfg80211_pkt_pattern *patterns;
	struct cfg80211_wowlan_tcp *tcp;
	int n_patterns;
	struct cfg80211_sched_scan_request *nd_config;
};

/**
 * struct cfg80211_coalesce_rules - Coalesce rule parameters
 *
 * This structure defines coalesce rule for the device.
 * @delay: maximum coalescing delay in msecs.
 * @condition: condition for packet coalescence.
 *	see &enum nl80211_coalesce_condition.
 * @patterns: array of packet patterns
 * @n_patterns: number of patterns
 */
struct cfg80211_coalesce_rules {
	int delay;
	enum nl80211_coalesce_condition condition;
	struct cfg80211_pkt_pattern *patterns;
	int n_patterns;
};

/**
 * struct cfg80211_coalesce - Packet coalescing settings
 *
 * This structure defines coalescing settings.
 * @rules: array of coalesce rules
 * @n_rules: number of rules
 */
struct cfg80211_coalesce {
	struct cfg80211_coalesce_rules *rules;
	int n_rules;
};

/**
 * struct cfg80211_wowlan_nd_match - information about the match
 *
 * @ssid: SSID of the match that triggered the wake up
 * @n_channels: Number of channels where the match occurred.  This
 *	value may be zero if the driver can't report the channels.
 * @channels: center frequencies of the channels where a match
 *	occurred (in MHz)
 */
struct cfg80211_wowlan_nd_match {
	struct cfg80211_ssid ssid;
	int n_channels;
	u32 channels[];
};

/**
 * struct cfg80211_wowlan_nd_info - net detect wake up information
 *
 * @n_matches: Number of match information instances provided in
 *	@matches.  This value may be zero if the driver can't provide
 *	match information.
 * @matches: Array of pointers to matches containing information about
 *	the matches that triggered the wake up.
 */
struct cfg80211_wowlan_nd_info {
	int n_matches;
	struct cfg80211_wowlan_nd_match *matches[];
};

/**
 * struct cfg80211_wowlan_wakeup - wakeup report
 * @disconnect: woke up by getting disconnected
 * @magic_pkt: woke up by receiving magic packet
 * @gtk_rekey_failure: woke up by GTK rekey failure
 * @eap_identity_req: woke up by EAP identity request packet
 * @four_way_handshake: woke up by 4-way handshake
 * @rfkill_release: woke up by rfkill being released
 * @pattern_idx: pattern that caused wakeup, -1 if not due to pattern
 * @packet_present_len: copied wakeup packet data
 * @packet_len: original wakeup packet length
 * @packet: The packet causing the wakeup, if any.
 * @packet_80211:  For pattern match, magic packet and other data
 *	frame triggers an 802.3 frame should be reported, for
 *	disconnect due to deauth 802.11 frame. This indicates which
 *	it is.
 * @tcp_match: TCP wakeup packet received
 * @tcp_connlost: TCP connection lost or failed to establish
 * @tcp_nomoretokens: TCP data ran out of tokens
 * @net_detect: if not %NULL, woke up because of net detect
 */
struct cfg80211_wowlan_wakeup {
	bool disconnect, magic_pkt, gtk_rekey_failure,
	     eap_identity_req, four_way_handshake,
	     rfkill_release, packet_80211,
	     tcp_match, tcp_connlost, tcp_nomoretokens;
	s32 pattern_idx;
	u32 packet_present_len, packet_len;
	const void *packet;
	struct cfg80211_wowlan_nd_info *net_detect;
};

/**
 * struct cfg80211_gtk_rekey_data - rekey data
 * @kek: key encryption key (NL80211_KEK_LEN bytes)
 * @kck: key confirmation key (NL80211_KCK_LEN bytes)
 * @replay_ctr: replay counter (NL80211_REPLAY_CTR_LEN bytes)
 */
struct cfg80211_gtk_rekey_data {
	const u8 *kek, *kck, *replay_ctr;
};

/**
 * struct cfg80211_update_ft_ies_params - FT IE Information
 *
 * This structure provides information needed to update the fast transition IE
 *
 * @md: The Mobility Domain ID, 2 Octet value
 * @ie: Fast Transition IEs
 * @ie_len: Length of ft_ie in octets
 */
struct cfg80211_update_ft_ies_params {
	u16 md;
	const u8 *ie;
	size_t ie_len;
};

/**
 * struct cfg80211_mgmt_tx_params - mgmt tx parameters
 *
 * This structure provides information needed to transmit a mgmt frame
 *
 * @chan: channel to use
 * @offchan: indicates wether off channel operation is required
 * @wait: duration for ROC
 * @buf: buffer to transmit
 * @len: buffer length
 * @no_cck: don't use cck rates for this frame
 * @dont_wait_for_ack: tells the low level not to wait for an ack
 * @n_csa_offsets: length of csa_offsets array
 * @csa_offsets: array of all the csa offsets in the frame
 */
struct cfg80211_mgmt_tx_params {
	struct ieee80211_channel *chan;
	bool offchan;
	unsigned int wait;
	const u8 *buf;
	size_t len;
	bool no_cck;
	bool dont_wait_for_ack;
	int n_csa_offsets;
	const u16 *csa_offsets;
};

/**
 * struct cfg80211_dscp_exception - DSCP exception
 *
 * @dscp: DSCP value that does not adhere to the user priority range definition
 * @up: user priority value to which the corresponding DSCP value belongs
 */
struct cfg80211_dscp_exception {
	u8 dscp;
	u8 up;
};

/**
 * struct cfg80211_dscp_range - DSCP range definition for user priority
 *
 * @low: lowest DSCP value of this user priority range, inclusive
 * @high: highest DSCP value of this user priority range, inclusive
 */
struct cfg80211_dscp_range {
	u8 low;
	u8 high;
};

/* QoS Map Set element length defined in IEEE Std 802.11-2012, 8.4.2.97 */
#define IEEE80211_QOS_MAP_MAX_EX	21
#define IEEE80211_QOS_MAP_LEN_MIN	16
#define IEEE80211_QOS_MAP_LEN_MAX \
	(IEEE80211_QOS_MAP_LEN_MIN + 2 * IEEE80211_QOS_MAP_MAX_EX)

/**
 * struct cfg80211_qos_map - QoS Map Information
 *
 * This struct defines the Interworking QoS map setting for DSCP values
 *
 * @num_des: number of DSCP exceptions (0..21)
 * @dscp_exception: optionally up to maximum of 21 DSCP exceptions from
 *	the user priority DSCP range definition
 * @up: DSCP range definition for a particular user priority
 */
struct cfg80211_qos_map {
	u8 num_des;
	struct cfg80211_dscp_exception dscp_exception[IEEE80211_QOS_MAP_MAX_EX];
	struct cfg80211_dscp_range up[8];
};

/**
 * struct cfg80211_ops - backend description for wireless configuration
 *
 * This struct is registered by fullmac card drivers and/or wireless stacks
 * in order to handle configuration requests on their interfaces.
 *
 * All callbacks except where otherwise noted should return 0
 * on success or a negative error code.
 *
 * All operations are currently invoked under rtnl for consistency with the
 * wireless extensions but this is subject to reevaluation as soon as this
 * code is used more widely and we have a first user without wext.
 *
 * @suspend: wiphy device needs to be suspended. The variable @wow will
 *	be %NULL or contain the enabled Wake-on-Wireless triggers that are
 *	configured for the device.
 * @resume: wiphy device needs to be resumed
 * @set_wakeup: Called when WoWLAN is enabled/disabled, use this callback
 *	to call device_set_wakeup_enable() to enable/disable wakeup from
 *	the device.
 *
 * @add_virtual_intf: create a new virtual interface with the given name,
 *	must set the struct wireless_dev's iftype. Beware: You must create
 *	the new netdev in the wiphy's network namespace! Returns the struct
 *	wireless_dev, or an ERR_PTR. For P2P device wdevs, the driver must
 *	also set the address member in the wdev.
 *
 * @del_virtual_intf: remove the virtual interface
 *
 * @change_virtual_intf: change type/configuration of virtual interface,
 *	keep the struct wireless_dev's iftype updated.
 *
 * @add_key: add a key with the given parameters. @mac_addr will be %NULL
 *	when adding a group key.
 *
 * @get_key: get information about the key with the given parameters.
 *	@mac_addr will be %NULL when requesting information for a group
 *	key. All pointers given to the @callback function need not be valid
 *	after it returns. This function should return an error if it is
 *	not possible to retrieve the key, -ENOENT if it doesn't exist.
 *
 * @del_key: remove a key given the @mac_addr (%NULL for a group key)
 *	and @key_index, return -ENOENT if the key doesn't exist.
 *
 * @set_default_key: set the default key on an interface
 *
 * @set_default_mgmt_key: set the default management frame key on an interface
 *
 * @set_rekey_data: give the data necessary for GTK rekeying to the driver
 *
 * @start_ap: Start acting in AP mode defined by the parameters.
 * @change_beacon: Change the beacon parameters for an access point mode
 *	interface. This should reject the call when AP mode wasn't started.
 * @stop_ap: Stop being an AP, including stopping beaconing.
 *
 * @add_station: Add a new station.
 * @del_station: Remove a station
 * @change_station: Modify a given station. Note that flags changes are not much
 *	validated in cfg80211, in particular the auth/assoc/authorized flags
 *	might come to the driver in invalid combinations -- make sure to check
 *	them, also against the existing state! Drivers must call
 *	cfg80211_check_station_change() to validate the information.
 * @get_station: get station information for the station identified by @mac
 * @dump_station: dump station callback -- resume dump at index @idx
 *
 * @add_mpath: add a fixed mesh path
 * @del_mpath: delete a given mesh path
 * @change_mpath: change a given mesh path
 * @get_mpath: get a mesh path for the given parameters
 * @dump_mpath: dump mesh path callback -- resume dump at index @idx
 * @get_mpp: get a mesh proxy path for the given parameters
 * @dump_mpp: dump mesh proxy path callback -- resume dump at index @idx
 * @join_mesh: join the mesh network with the specified parameters
 *	(invoked with the wireless_dev mutex held)
 * @leave_mesh: leave the current mesh network
 *	(invoked with the wireless_dev mutex held)
 *
 * @get_mesh_config: Get the current mesh configuration
 *
 * @update_mesh_config: Update mesh parameters on a running mesh.
 *	The mask is a bitfield which tells us which parameters to
 *	set, and which to leave alone.
 *
 * @change_bss: Modify parameters for a given BSS.
 *
 * @set_txq_params: Set TX queue parameters
 *
 * @libertas_set_mesh_channel: Only for backward compatibility for libertas,
 *	as it doesn't implement join_mesh and needs to set the channel to
 *	join the mesh instead.
 *
 * @set_monitor_channel: Set the monitor mode channel for the device. If other
 *	interfaces are active this callback should reject the configuration.
 *	If no interfaces are active or the device is down, the channel should
 *	be stored for when a monitor interface becomes active.
 *
 * @scan: Request to do a scan. If returning zero, the scan request is given
 *	the driver, and will be valid until passed to cfg80211_scan_done().
 *	For scan results, call cfg80211_inform_bss(); you can call this outside
 *	the scan/scan_done bracket too.
 *
 * @auth: Request to authenticate with the specified peer
 *	(invoked with the wireless_dev mutex held)
 * @assoc: Request to (re)associate with the specified peer
 *	(invoked with the wireless_dev mutex held)
 * @deauth: Request to deauthenticate from the specified peer
 *	(invoked with the wireless_dev mutex held)
 * @disassoc: Request to disassociate from the specified peer
 *	(invoked with the wireless_dev mutex held)
 *
 * @connect: Connect to the ESS with the specified parameters. When connected,
 *	call cfg80211_connect_result() with status code %WLAN_STATUS_SUCCESS.
 *	If the connection fails for some reason, call cfg80211_connect_result()
 *	with the status from the AP.
 *	(invoked with the wireless_dev mutex held)
 * @disconnect: Disconnect from the BSS/ESS.
 *	(invoked with the wireless_dev mutex held)
 *
 * @join_ibss: Join the specified IBSS (or create if necessary). Once done, call
 *	cfg80211_ibss_joined(), also call that function when changing BSSID due
 *	to a merge.
 *	(invoked with the wireless_dev mutex held)
 * @leave_ibss: Leave the IBSS.
 *	(invoked with the wireless_dev mutex held)
 *
 * @set_mcast_rate: Set the specified multicast rate (only if vif is in ADHOC or
 *	MESH mode)
 *
 * @set_wiphy_params: Notify that wiphy parameters have changed;
 *	@changed bitfield (see &enum wiphy_params_flags) describes which values
 *	have changed. The actual parameter values are available in
 *	struct wiphy. If returning an error, no value should be changed.
 *
 * @set_tx_power: set the transmit power according to the parameters,
 *	the power passed is in mBm, to get dBm use MBM_TO_DBM(). The
 *	wdev may be %NULL if power was set for the wiphy, and will
 *	always be %NULL unless the driver supports per-vif TX power
 *	(as advertised by the nl80211 feature flag.)
 * @get_tx_power: store the current TX power into the dbm variable;
 *	return 0 if successful
 *
 * @set_wds_peer: set the WDS peer for a WDS interface
 *
 * @rfkill_poll: polls the hw rfkill line, use cfg80211 reporting
 *	functions to adjust rfkill hw state
 *
 * @dump_survey: get site survey information.
 *
 * @remain_on_channel: Request the driver to remain awake on the specified
 *	channel for the specified duration to complete an off-channel
 *	operation (e.g., public action frame exchange). When the driver is
 *	ready on the requested channel, it must indicate this with an event
 *	notification by calling cfg80211_ready_on_channel().
 * @cancel_remain_on_channel: Cancel an on-going remain-on-channel operation.
 *	This allows the operation to be terminated prior to timeout based on
 *	the duration value.
 * @mgmt_tx: Transmit a management frame.
 * @mgmt_tx_cancel_wait: Cancel the wait time from transmitting a management
 *	frame on another channel
 *
 * @testmode_cmd: run a test mode command; @wdev may be %NULL
 * @testmode_dump: Implement a test mode dump. The cb->args[2] and up may be
 *	used by the function, but 0 and 1 must not be touched. Additionally,
 *	return error codes other than -ENOBUFS and -ENOENT will terminate the
 *	dump and return to userspace with an error, so be careful. If any data
 *	was passed in from userspace then the data/len arguments will be present
 *	and point to the data contained in %NL80211_ATTR_TESTDATA.
 *
 * @set_bitrate_mask: set the bitrate mask configuration
 *
 * @set_pmksa: Cache a PMKID for a BSSID. This is mostly useful for fullmac
 *	devices running firmwares capable of generating the (re) association
 *	RSN IE. It allows for faster roaming between WPA2 BSSIDs.
 * @del_pmksa: Delete a cached PMKID.
 * @flush_pmksa: Flush all cached PMKIDs.
 * @set_power_mgmt: Configure WLAN power management. A timeout value of -1
 *	allows the driver to adjust the dynamic ps timeout value.
 * @set_cqm_rssi_config: Configure connection quality monitor RSSI threshold.
 * @set_cqm_txe_config: Configure connection quality monitor TX error
 *	thresholds.
 * @sched_scan_start: Tell the driver to start a scheduled scan.
 * @sched_scan_stop: Tell the driver to stop an ongoing scheduled scan. This
 *	call must stop the scheduled scan and be ready for starting a new one
 *	before it returns, i.e. @sched_scan_start may be called immediately
 *	after that again and should not fail in that case. The driver should
 *	not call cfg80211_sched_scan_stopped() for a requested stop (when this
 *	method returns 0.)
 *
 * @mgmt_frame_register: Notify driver that a management frame type was
 *	registered. Note that this callback may not sleep, and cannot run
 *	concurrently with itself.
 *
 * @set_antenna: Set antenna configuration (tx_ant, rx_ant) on the device.
 *	Parameters are bitmaps of allowed antennas to use for TX/RX. Drivers may
 *	reject TX/RX mask combinations they cannot support by returning -EINVAL
 *	(also see nl80211.h @NL80211_ATTR_WIPHY_ANTENNA_TX).
 *
 * @get_antenna: Get current antenna configuration from device (tx_ant, rx_ant).
 *
 * @tdls_mgmt: Transmit a TDLS management frame.
 * @tdls_oper: Perform a high-level TDLS operation (e.g. TDLS link setup).
 *
 * @probe_client: probe an associated client, must return a cookie that it
 *	later passes to cfg80211_probe_status().
 *
 * @set_noack_map: Set the NoAck Map for the TIDs.
 *
 * @get_channel: Get the current operating channel for the virtual interface.
 *	For monitor interfaces, it should return %NULL unless there's a single
 *	current monitoring channel.
 *
 * @start_p2p_device: Start the given P2P device.
 * @stop_p2p_device: Stop the given P2P device.
 *
 * @set_mac_acl: Sets MAC address control list in AP and P2P GO mode.
 *	Parameters include ACL policy, an array of MAC address of stations
 *	and the number of MAC addresses. If there is already a list in driver
 *	this new list replaces the existing one. Driver has to clear its ACL
 *	when number of MAC addresses entries is passed as 0. Drivers which
 *	advertise the support for MAC based ACL have to implement this callback.
 *
 * @start_radar_detection: Start radar detection in the driver.
 *
 * @update_ft_ies: Provide updated Fast BSS Transition information to the
 *	driver. If the SME is in the driver/firmware, this information can be
 *	used in building Authentication and Reassociation Request frames.
 *
 * @crit_proto_start: Indicates a critical protocol needs more link reliability
 *	for a given duration (milliseconds). The protocol is provided so the
 *	driver can take the most appropriate actions.
 * @crit_proto_stop: Indicates critical protocol no longer needs increased link
 *	reliability. This operation can not fail.
 * @set_coalesce: Set coalesce parameters.
 *
 * @channel_switch: initiate channel-switch procedure (with CSA). Driver is
 *	responsible for veryfing if the switch is possible. Since this is
 *	inherently tricky driver may decide to disconnect an interface later
 *	with cfg80211_stop_iface(). This doesn't mean driver can accept
 *	everything. It should do it's best to verify requests and reject them
 *	as soon as possible.
 *
 * @set_qos_map: Set QoS mapping information to the driver
 *
 * @set_ap_chanwidth: Set the AP (including P2P GO) mode channel width for the
 *	given interface This is used e.g. for dynamic HT 20/40 MHz channel width
 *	changes during the lifetime of the BSS.
 *
 * @add_tx_ts: validate (if admitted_time is 0) or add a TX TS to the device
 *	with the given parameters; action frame exchange has been handled by
 *	userspace so this just has to modify the TX path to take the TS into
 *	account.
 *	If the admitted time is 0 just validate the parameters to make sure
 *	the session can be created at all; it is valid to just always return
 *	success for that but that may result in inefficient behaviour (handshake
 *	with the peer followed by immediate teardown when the addition is later
 *	rejected)
 * @del_tx_ts: remove an existing TX TS
 *
 * @join_ocb: join the OCB network with the specified parameters
 *	(invoked with the wireless_dev mutex held)
 * @leave_ocb: leave the current OCB network
 *	(invoked with the wireless_dev mutex held)
 *
 * @tdls_channel_switch: Start channel-switching with a TDLS peer. The driver
 *	is responsible for continually initiating channel-switching operations
 *	and returning to the base channel for communication with the AP.
 * @tdls_cancel_channel_switch: Stop channel-switching with a TDLS peer. Both
 *	peers must be on the base channel when the call completes.
 */
struct cfg80211_ops {
	int	(*suspend)(struct wiphy *wiphy, struct cfg80211_wowlan *wow);
	int	(*resume)(struct wiphy *wiphy);
	void	(*set_wakeup)(struct wiphy *wiphy, bool enabled);

	struct wireless_dev * (*add_virtual_intf)(struct wiphy *wiphy,
						  const char *name,
						  unsigned char name_assign_type,
						  enum nl80211_iftype type,
						  u32 *flags,
						  struct vif_params *params);
	int	(*del_virtual_intf)(struct wiphy *wiphy,
				    struct wireless_dev *wdev);
	int	(*change_virtual_intf)(struct wiphy *wiphy,
				       struct net_device *dev,
				       enum nl80211_iftype type, u32 *flags,
				       struct vif_params *params);

	int	(*add_key)(struct wiphy *wiphy, struct net_device *netdev,
			   u8 key_index, bool pairwise, const u8 *mac_addr,
			   struct key_params *params);
	int	(*get_key)(struct wiphy *wiphy, struct net_device *netdev,
			   u8 key_index, bool pairwise, const u8 *mac_addr,
			   void *cookie,
			   void (*callback)(void *cookie, struct key_params*));
	int	(*del_key)(struct wiphy *wiphy, struct net_device *netdev,
			   u8 key_index, bool pairwise, const u8 *mac_addr);
	int	(*set_default_key)(struct wiphy *wiphy,
				   struct net_device *netdev,
				   u8 key_index, bool unicast, bool multicast);
	int	(*set_default_mgmt_key)(struct wiphy *wiphy,
					struct net_device *netdev,
					u8 key_index);

	int	(*start_ap)(struct wiphy *wiphy, struct net_device *dev,
			    struct cfg80211_ap_settings *settings);
	int	(*change_beacon)(struct wiphy *wiphy, struct net_device *dev,
				 struct cfg80211_beacon_data *info);
	int	(*stop_ap)(struct wiphy *wiphy, struct net_device *dev);


	int	(*add_station)(struct wiphy *wiphy, struct net_device *dev,
			       const u8 *mac,
			       struct station_parameters *params);
	int	(*del_station)(struct wiphy *wiphy, struct net_device *dev,
			       struct station_del_parameters *params);
	int	(*change_station)(struct wiphy *wiphy, struct net_device *dev,
				  const u8 *mac,
				  struct station_parameters *params);
	int	(*get_station)(struct wiphy *wiphy, struct net_device *dev,
			       const u8 *mac, struct station_info *sinfo);
	int	(*dump_station)(struct wiphy *wiphy, struct net_device *dev,
				int idx, u8 *mac, struct station_info *sinfo);

	int	(*add_mpath)(struct wiphy *wiphy, struct net_device *dev,
			       const u8 *dst, const u8 *next_hop);
	int	(*del_mpath)(struct wiphy *wiphy, struct net_device *dev,
			       const u8 *dst);
	int	(*change_mpath)(struct wiphy *wiphy, struct net_device *dev,
				  const u8 *dst, const u8 *next_hop);
	int	(*get_mpath)(struct wiphy *wiphy, struct net_device *dev,
			     u8 *dst, u8 *next_hop, struct mpath_info *pinfo);
	int	(*dump_mpath)(struct wiphy *wiphy, struct net_device *dev,
			      int idx, u8 *dst, u8 *next_hop,
			      struct mpath_info *pinfo);
	int	(*get_mpp)(struct wiphy *wiphy, struct net_device *dev,
			   u8 *dst, u8 *mpp, struct mpath_info *pinfo);
	int	(*dump_mpp)(struct wiphy *wiphy, struct net_device *dev,
			    int idx, u8 *dst, u8 *mpp,
			    struct mpath_info *pinfo);
	int	(*get_mesh_config)(struct wiphy *wiphy,
				struct net_device *dev,
				struct mesh_config *conf);
	int	(*update_mesh_config)(struct wiphy *wiphy,
				      struct net_device *dev, u32 mask,
				      const struct mesh_config *nconf);
	int	(*join_mesh)(struct wiphy *wiphy, struct net_device *dev,
			     const struct mesh_config *conf,
			     const struct mesh_setup *setup);
	int	(*leave_mesh)(struct wiphy *wiphy, struct net_device *dev);

	int	(*join_ocb)(struct wiphy *wiphy, struct net_device *dev,
			    struct ocb_setup *setup);
	int	(*leave_ocb)(struct wiphy *wiphy, struct net_device *dev);

	int	(*change_bss)(struct wiphy *wiphy, struct net_device *dev,
			      struct bss_parameters *params);

	int	(*set_txq_params)(struct wiphy *wiphy, struct net_device *dev,
				  struct ieee80211_txq_params *params);

	int	(*libertas_set_mesh_channel)(struct wiphy *wiphy,
					     struct net_device *dev,
					     struct ieee80211_channel *chan);

	int	(*set_monitor_channel)(struct wiphy *wiphy,
				       struct cfg80211_chan_def *chandef);

	int	(*scan)(struct wiphy *wiphy,
			struct cfg80211_scan_request *request);

	int	(*auth)(struct wiphy *wiphy, struct net_device *dev,
			struct cfg80211_auth_request *req);
	int	(*assoc)(struct wiphy *wiphy, struct net_device *dev,
			 struct cfg80211_assoc_request *req);
	int	(*deauth)(struct wiphy *wiphy, struct net_device *dev,
			  struct cfg80211_deauth_request *req);
	int	(*disassoc)(struct wiphy *wiphy, struct net_device *dev,
			    struct cfg80211_disassoc_request *req);

	int	(*connect)(struct wiphy *wiphy, struct net_device *dev,
			   struct cfg80211_connect_params *sme);
	int	(*disconnect)(struct wiphy *wiphy, struct net_device *dev,
			      u16 reason_code);

	int	(*join_ibss)(struct wiphy *wiphy, struct net_device *dev,
			     struct cfg80211_ibss_params *params);
	int	(*leave_ibss)(struct wiphy *wiphy, struct net_device *dev);

	int	(*set_mcast_rate)(struct wiphy *wiphy, struct net_device *dev,
				  int rate[IEEE80211_NUM_BANDS]);

	int	(*set_wiphy_params)(struct wiphy *wiphy, u32 changed);

	int	(*set_tx_power)(struct wiphy *wiphy, struct wireless_dev *wdev,
				enum nl80211_tx_power_setting type, int mbm);
	int	(*get_tx_power)(struct wiphy *wiphy, struct wireless_dev *wdev,
				int *dbm);

	int	(*set_wds_peer)(struct wiphy *wiphy, struct net_device *dev,
				const u8 *addr);

	void	(*rfkill_poll)(struct wiphy *wiphy);

#ifdef CONFIG_NL80211_TESTMODE
	int	(*testmode_cmd)(struct wiphy *wiphy, struct wireless_dev *wdev,
				void *data, int len);
	int	(*testmode_dump)(struct wiphy *wiphy, struct sk_buff *skb,
				 struct netlink_callback *cb,
				 void *data, int len);
#endif

	int	(*set_bitrate_mask)(struct wiphy *wiphy,
				    struct net_device *dev,
				    const u8 *peer,
				    const struct cfg80211_bitrate_mask *mask);

	int	(*dump_survey)(struct wiphy *wiphy, struct net_device *netdev,
			int idx, struct survey_info *info);

	int	(*set_pmksa)(struct wiphy *wiphy, struct net_device *netdev,
			     struct cfg80211_pmksa *pmksa);
	int	(*del_pmksa)(struct wiphy *wiphy, struct net_device *netdev,
			     struct cfg80211_pmksa *pmksa);
	int	(*flush_pmksa)(struct wiphy *wiphy, struct net_device *netdev);

	int	(*remain_on_channel)(struct wiphy *wiphy,
				     struct wireless_dev *wdev,
				     struct ieee80211_channel *chan,
				     unsigned int duration,
				     u64 *cookie);
	int	(*cancel_remain_on_channel)(struct wiphy *wiphy,
					    struct wireless_dev *wdev,
					    u64 cookie);

	int	(*mgmt_tx)(struct wiphy *wiphy, struct wireless_dev *wdev,
			   struct cfg80211_mgmt_tx_params *params,
			   u64 *cookie);
	int	(*mgmt_tx_cancel_wait)(struct wiphy *wiphy,
				       struct wireless_dev *wdev,
				       u64 cookie);

	int	(*set_power_mgmt)(struct wiphy *wiphy, struct net_device *dev,
				  bool enabled, int timeout);

	int	(*set_cqm_rssi_config)(struct wiphy *wiphy,
				       struct net_device *dev,
				       s32 rssi_thold, u32 rssi_hyst);

	int	(*set_cqm_txe_config)(struct wiphy *wiphy,
				      struct net_device *dev,
				      u32 rate, u32 pkts, u32 intvl);

	void	(*mgmt_frame_register)(struct wiphy *wiphy,
				       struct wireless_dev *wdev,
				       u16 frame_type, bool reg);

	int	(*set_antenna)(struct wiphy *wiphy, u32 tx_ant, u32 rx_ant);
	int	(*get_antenna)(struct wiphy *wiphy, u32 *tx_ant, u32 *rx_ant);

	int	(*sched_scan_start)(struct wiphy *wiphy,
				struct net_device *dev,
				struct cfg80211_sched_scan_request *request);
	int	(*sched_scan_stop)(struct wiphy *wiphy, struct net_device *dev);

	int	(*set_rekey_data)(struct wiphy *wiphy, struct net_device *dev,
				  struct cfg80211_gtk_rekey_data *data);

	int	(*tdls_mgmt)(struct wiphy *wiphy, struct net_device *dev,
			     const u8 *peer, u8 action_code,  u8 dialog_token,
			     u16 status_code, u32 peer_capability,
			     bool initiator, const u8 *buf, size_t len);
	int	(*tdls_oper)(struct wiphy *wiphy, struct net_device *dev,
			     const u8 *peer, enum nl80211_tdls_operation oper);

	int	(*probe_client)(struct wiphy *wiphy, struct net_device *dev,
				const u8 *peer, u64 *cookie);

	int	(*set_noack_map)(struct wiphy *wiphy,
				  struct net_device *dev,
				  u16 noack_map);

	int	(*get_channel)(struct wiphy *wiphy,
			       struct wireless_dev *wdev,
			       struct cfg80211_chan_def *chandef);

	int	(*start_p2p_device)(struct wiphy *wiphy,
				    struct wireless_dev *wdev);
	void	(*stop_p2p_device)(struct wiphy *wiphy,
				   struct wireless_dev *wdev);

	int	(*set_mac_acl)(struct wiphy *wiphy, struct net_device *dev,
			       const struct cfg80211_acl_data *params);

	int	(*start_radar_detection)(struct wiphy *wiphy,
					 struct net_device *dev,
					 struct cfg80211_chan_def *chandef,
					 u32 cac_time_ms);
	int	(*update_ft_ies)(struct wiphy *wiphy, struct net_device *dev,
				 struct cfg80211_update_ft_ies_params *ftie);
	int	(*crit_proto_start)(struct wiphy *wiphy,
				    struct wireless_dev *wdev,
				    enum nl80211_crit_proto_id protocol,
				    u16 duration);
	void	(*crit_proto_stop)(struct wiphy *wiphy,
				   struct wireless_dev *wdev);
	int	(*set_coalesce)(struct wiphy *wiphy,
				struct cfg80211_coalesce *coalesce);

	int	(*channel_switch)(struct wiphy *wiphy,
				  struct net_device *dev,
				  struct cfg80211_csa_settings *params);

	int     (*set_qos_map)(struct wiphy *wiphy,
			       struct net_device *dev,
			       struct cfg80211_qos_map *qos_map);

	int	(*set_ap_chanwidth)(struct wiphy *wiphy, struct net_device *dev,
				    struct cfg80211_chan_def *chandef);

	int	(*add_tx_ts)(struct wiphy *wiphy, struct net_device *dev,
			     u8 tsid, const u8 *peer, u8 user_prio,
			     u16 admitted_time);
	int	(*del_tx_ts)(struct wiphy *wiphy, struct net_device *dev,
			     u8 tsid, const u8 *peer);

	int	(*tdls_channel_switch)(struct wiphy *wiphy,
				       struct net_device *dev,
				       const u8 *addr, u8 oper_class,
				       struct cfg80211_chan_def *chandef);
	void	(*tdls_cancel_channel_switch)(struct wiphy *wiphy,
					      struct net_device *dev,
					      const u8 *addr);
};

/*
 * wireless hardware and networking interfaces structures
 * and registration/helper functions
 */

/**
 * enum wiphy_flags - wiphy capability flags
 *
 * @WIPHY_FLAG_NETNS_OK: if not set, do not allow changing the netns of this
 *	wiphy at all
 * @WIPHY_FLAG_PS_ON_BY_DEFAULT: if set to true, powersave will be enabled
 *	by default -- this flag will be set depending on the kernel's default
 *	on wiphy_new(), but can be changed by the driver if it has a good
 *	reason to override the default
 * @WIPHY_FLAG_4ADDR_AP: supports 4addr mode even on AP (with a single station
 *	on a VLAN interface)
 * @WIPHY_FLAG_4ADDR_STATION: supports 4addr mode even as a station
 * @WIPHY_FLAG_CONTROL_PORT_PROTOCOL: This device supports setting the
 *	control port protocol ethertype. The device also honours the
 *	control_port_no_encrypt flag.
 * @WIPHY_FLAG_IBSS_RSN: The device supports IBSS RSN.
 * @WIPHY_FLAG_MESH_AUTH: The device supports mesh authentication by routing
 *	auth frames to userspace. See @NL80211_MESH_SETUP_USERSPACE_AUTH.
 * @WIPHY_FLAG_SUPPORTS_SCHED_SCAN: The device supports scheduled scans.
 * @WIPHY_FLAG_SUPPORTS_FW_ROAM: The device supports roaming feature in the
 *	firmware.
 * @WIPHY_FLAG_AP_UAPSD: The device supports uapsd on AP.
 * @WIPHY_FLAG_SUPPORTS_TDLS: The device supports TDLS (802.11z) operation.
 * @WIPHY_FLAG_TDLS_EXTERNAL_SETUP: The device does not handle TDLS (802.11z)
 *	link setup/discovery operations internally. Setup, discovery and
 *	teardown packets should be sent through the @NL80211_CMD_TDLS_MGMT
 *	command. When this flag is not set, @NL80211_CMD_TDLS_OPER should be
 *	used for asking the driver/firmware to perform a TDLS operation.
 * @WIPHY_FLAG_HAVE_AP_SME: device integrates AP SME
 * @WIPHY_FLAG_REPORTS_OBSS: the device will report beacons from other BSSes
 *	when there are virtual interfaces in AP mode by calling
 *	cfg80211_report_obss_beacon().
 * @WIPHY_FLAG_AP_PROBE_RESP_OFFLOAD: When operating as an AP, the device
 *	responds to probe-requests in hardware.
 * @WIPHY_FLAG_OFFCHAN_TX: Device supports direct off-channel TX.
 * @WIPHY_FLAG_HAS_REMAIN_ON_CHANNEL: Device supports remain-on-channel call.
 * @WIPHY_FLAG_SUPPORTS_5_10_MHZ: Device supports 5 MHz and 10 MHz channels.
 * @WIPHY_FLAG_HAS_CHANNEL_SWITCH: Device supports channel switch in
 *	beaconing mode (AP, IBSS, Mesh, ...).
 */
enum wiphy_flags {
	/* use hole at 0 */
	/* use hole at 1 */
	/* use hole at 2 */
	WIPHY_FLAG_NETNS_OK			= BIT(3),
	WIPHY_FLAG_PS_ON_BY_DEFAULT		= BIT(4),
	WIPHY_FLAG_4ADDR_AP			= BIT(5),
	WIPHY_FLAG_4ADDR_STATION		= BIT(6),
	WIPHY_FLAG_CONTROL_PORT_PROTOCOL	= BIT(7),
	WIPHY_FLAG_IBSS_RSN			= BIT(8),
	WIPHY_FLAG_MESH_AUTH			= BIT(10),
	WIPHY_FLAG_SUPPORTS_SCHED_SCAN		= BIT(11),
	/* use hole at 12 */
	WIPHY_FLAG_SUPPORTS_FW_ROAM		= BIT(13),
	WIPHY_FLAG_AP_UAPSD			= BIT(14),
	WIPHY_FLAG_SUPPORTS_TDLS		= BIT(15),
	WIPHY_FLAG_TDLS_EXTERNAL_SETUP		= BIT(16),
	WIPHY_FLAG_HAVE_AP_SME			= BIT(17),
	WIPHY_FLAG_REPORTS_OBSS			= BIT(18),
	WIPHY_FLAG_AP_PROBE_RESP_OFFLOAD	= BIT(19),
	WIPHY_FLAG_OFFCHAN_TX			= BIT(20),
	WIPHY_FLAG_HAS_REMAIN_ON_CHANNEL	= BIT(21),
	WIPHY_FLAG_SUPPORTS_5_10_MHZ		= BIT(22),
	WIPHY_FLAG_HAS_CHANNEL_SWITCH		= BIT(23),
};

/**
 * struct ieee80211_iface_limit - limit on certain interface types
 * @max: maximum number of interfaces of these types
 * @types: interface types (bits)
 */
struct ieee80211_iface_limit {
	u16 max;
	u16 types;
};

/**
 * struct ieee80211_iface_combination - possible interface combination
 * @limits: limits for the given interface types
 * @n_limits: number of limitations
 * @num_different_channels: can use up to this many different channels
 * @max_interfaces: maximum number of interfaces in total allowed in this
 *	group
 * @beacon_int_infra_match: In this combination, the beacon intervals
 *	between infrastructure and AP types must match. This is required
 *	only in special cases.
 * @radar_detect_widths: bitmap of channel widths supported for radar detection
 * @radar_detect_regions: bitmap of regions supported for radar detection
 *
 * With this structure the driver can describe which interface
 * combinations it supports concurrently.
 *
 * Examples:
 *
 * 1. Allow #STA <= 1, #AP <= 1, matching BI, channels = 1, 2 total:
 *
 *  struct ieee80211_iface_limit limits1[] = {
 *	{ .max = 1, .types = BIT(NL80211_IFTYPE_STATION), },
 *	{ .max = 1, .types = BIT(NL80211_IFTYPE_AP}, },
 *  };
 *  struct ieee80211_iface_combination combination1 = {
 *	.limits = limits1,
 *	.n_limits = ARRAY_SIZE(limits1),
 *	.max_interfaces = 2,
 *	.beacon_int_infra_match = true,
 *  };
 *
 *
 * 2. Allow #{AP, P2P-GO} <= 8, channels = 1, 8 total:
 *
 *  struct ieee80211_iface_limit limits2[] = {
 *	{ .max = 8, .types = BIT(NL80211_IFTYPE_AP) |
 *			     BIT(NL80211_IFTYPE_P2P_GO), },
 *  };
 *  struct ieee80211_iface_combination combination2 = {
 *	.limits = limits2,
 *	.n_limits = ARRAY_SIZE(limits2),
 *	.max_interfaces = 8,
 *	.num_different_channels = 1,
 *  };
 *
 *
 * 3. Allow #STA <= 1, #{P2P-client,P2P-GO} <= 3 on two channels, 4 total.
 *
 * This allows for an infrastructure connection and three P2P connections.
 *
 *  struct ieee80211_iface_limit limits3[] = {
 *	{ .max = 1, .types = BIT(NL80211_IFTYPE_STATION), },
 *	{ .max = 3, .types = BIT(NL80211_IFTYPE_P2P_GO) |
 *			     BIT(NL80211_IFTYPE_P2P_CLIENT), },
 *  };
 *  struct ieee80211_iface_combination combination3 = {
 *	.limits = limits3,
 *	.n_limits = ARRAY_SIZE(limits3),
 *	.max_interfaces = 4,
 *	.num_different_channels = 2,
 *  };
 */
struct ieee80211_iface_combination {
	const struct ieee80211_iface_limit *limits;
	u32 num_different_channels;
	u16 max_interfaces;
	u8 n_limits;
	bool beacon_int_infra_match;
	u8 radar_detect_widths;
	u8 radar_detect_regions;
};

struct ieee80211_txrx_stypes {
	u16 tx, rx;
};

/**
 * enum wiphy_wowlan_support_flags - WoWLAN support flags
 * @WIPHY_WOWLAN_ANY: supports wakeup for the special "any"
 *	trigger that keeps the device operating as-is and
 *	wakes up the host on any activity, for example a
 *	received packet that passed filtering; note that the
 *	packet should be preserved in that case
 * @WIPHY_WOWLAN_MAGIC_PKT: supports wakeup on magic packet
 *	(see nl80211.h)
 * @WIPHY_WOWLAN_DISCONNECT: supports wakeup on disconnect
 * @WIPHY_WOWLAN_SUPPORTS_GTK_REKEY: supports GTK rekeying while asleep
 * @WIPHY_WOWLAN_GTK_REKEY_FAILURE: supports wakeup on GTK rekey failure
 * @WIPHY_WOWLAN_EAP_IDENTITY_REQ: supports wakeup on EAP identity request
 * @WIPHY_WOWLAN_4WAY_HANDSHAKE: supports wakeup on 4-way handshake failure
 * @WIPHY_WOWLAN_RFKILL_RELEASE: supports wakeup on RF-kill release
 * @WIPHY_WOWLAN_NET_DETECT: supports wakeup on network detection
 */
enum wiphy_wowlan_support_flags {
	WIPHY_WOWLAN_ANY		= BIT(0),
	WIPHY_WOWLAN_MAGIC_PKT		= BIT(1),
	WIPHY_WOWLAN_DISCONNECT		= BIT(2),
	WIPHY_WOWLAN_SUPPORTS_GTK_REKEY	= BIT(3),
	WIPHY_WOWLAN_GTK_REKEY_FAILURE	= BIT(4),
	WIPHY_WOWLAN_EAP_IDENTITY_REQ	= BIT(5),
	WIPHY_WOWLAN_4WAY_HANDSHAKE	= BIT(6),
	WIPHY_WOWLAN_RFKILL_RELEASE	= BIT(7),
	WIPHY_WOWLAN_NET_DETECT		= BIT(8),
};

struct wiphy_wowlan_tcp_support {
	const struct nl80211_wowlan_tcp_data_token_feature *tok;
	u32 data_payload_max;
	u32 data_interval_max;
	u32 wake_payload_max;
	bool seq;
};

/**
 * struct wiphy_wowlan_support - WoWLAN support data
 * @flags: see &enum wiphy_wowlan_support_flags
 * @n_patterns: number of supported wakeup patterns
 *	(see nl80211.h for the pattern definition)
 * @pattern_max_len: maximum length of each pattern
 * @pattern_min_len: minimum length of each pattern
 * @max_pkt_offset: maximum Rx packet offset
 * @max_nd_match_sets: maximum number of matchsets for net-detect,
 *	similar, but not necessarily identical, to max_match_sets for
 *	scheduled scans.
 *	See &struct cfg80211_sched_scan_request.@match_sets for more
 *	details.
 * @tcp: TCP wakeup support information
 */
struct wiphy_wowlan_support {
	u32 flags;
	int n_patterns;
	int pattern_max_len;
	int pattern_min_len;
	int max_pkt_offset;
	int max_nd_match_sets;
	const struct wiphy_wowlan_tcp_support *tcp;
};

/**
 * struct wiphy_coalesce_support - coalesce support data
 * @n_rules: maximum number of coalesce rules
 * @max_delay: maximum supported coalescing delay in msecs
 * @n_patterns: number of supported patterns in a rule
 *	(see nl80211.h for the pattern definition)
 * @pattern_max_len: maximum length of each pattern
 * @pattern_min_len: minimum length of each pattern
 * @max_pkt_offset: maximum Rx packet offset
 */
struct wiphy_coalesce_support {
	int n_rules;
	int max_delay;
	int n_patterns;
	int pattern_max_len;
	int pattern_min_len;
	int max_pkt_offset;
};

/**
 * enum wiphy_vendor_command_flags - validation flags for vendor commands
 * @WIPHY_VENDOR_CMD_NEED_WDEV: vendor command requires wdev
 * @WIPHY_VENDOR_CMD_NEED_NETDEV: vendor command requires netdev
 * @WIPHY_VENDOR_CMD_NEED_RUNNING: interface/wdev must be up & running
 *	(must be combined with %_WDEV or %_NETDEV)
 */
enum wiphy_vendor_command_flags {
	WIPHY_VENDOR_CMD_NEED_WDEV = BIT(0),
	WIPHY_VENDOR_CMD_NEED_NETDEV = BIT(1),
	WIPHY_VENDOR_CMD_NEED_RUNNING = BIT(2),
};

/**
 * struct wiphy_vendor_command - vendor command definition
 * @info: vendor command identifying information, as used in nl80211
 * @flags: flags, see &enum wiphy_vendor_command_flags
 * @doit: callback for the operation, note that wdev is %NULL if the
 *	flags didn't ask for a wdev and non-%NULL otherwise; the data
 *	pointer may be %NULL if userspace provided no data at all
 */
struct wiphy_vendor_command {
	struct nl80211_vendor_cmd_info info;
	u32 flags;
	int (*doit)(struct wiphy *wiphy, struct wireless_dev *wdev,
		    const void *data, int data_len);
};

/**
 * struct wiphy - wireless hardware description
 * @reg_notifier: the driver's regulatory notification callback,
 *	note that if your driver uses wiphy_apply_custom_regulatory()
 *	the reg_notifier's request can be passed as NULL
 * @regd: the driver's regulatory domain, if one was requested via
 * 	the regulatory_hint() API. This can be used by the driver
 *	on the reg_notifier() if it chooses to ignore future
 *	regulatory domain changes caused by other drivers.
 * @signal_type: signal type reported in &struct cfg80211_bss.
 * @cipher_suites: supported cipher suites
 * @n_cipher_suites: number of supported cipher suites
 * @retry_short: Retry limit for short frames (dot11ShortRetryLimit)
 * @retry_long: Retry limit for long frames (dot11LongRetryLimit)
 * @frag_threshold: Fragmentation threshold (dot11FragmentationThreshold);
 *	-1 = fragmentation disabled, only odd values >= 256 used
 * @rts_threshold: RTS threshold (dot11RTSThreshold); -1 = RTS/CTS disabled
 * @_net: the network namespace this wiphy currently lives in
 * @perm_addr: permanent MAC address of this device
 * @addr_mask: If the device supports multiple MAC addresses by masking,
 *	set this to a mask with variable bits set to 1, e.g. if the last
 *	four bits are variable then set it to 00-00-00-00-00-0f. The actual
 *	variable bits shall be determined by the interfaces added, with
 *	interfaces not matching the mask being rejected to be brought up.
 * @n_addresses: number of addresses in @addresses.
 * @addresses: If the device has more than one address, set this pointer
 *	to a list of addresses (6 bytes each). The first one will be used
 *	by default for perm_addr. In this case, the mask should be set to
 *	all-zeroes. In this case it is assumed that the device can handle
 *	the same number of arbitrary MAC addresses.
 * @registered: protects ->resume and ->suspend sysfs callbacks against
 *	unregister hardware
 * @debugfsdir: debugfs directory used for this wiphy, will be renamed
 *	automatically on wiphy renames
 * @dev: (virtual) struct device for this wiphy
 * @registered: helps synchronize suspend/resume with wiphy unregister
 * @wext: wireless extension handlers
 * @priv: driver private data (sized according to wiphy_new() parameter)
 * @interface_modes: bitmask of interfaces types valid for this wiphy,
 *	must be set by driver
 * @iface_combinations: Valid interface combinations array, should not
 *	list single interface types.
 * @n_iface_combinations: number of entries in @iface_combinations array.
 * @software_iftypes: bitmask of software interface types, these are not
 *	subject to any restrictions since they are purely managed in SW.
 * @flags: wiphy flags, see &enum wiphy_flags
 * @regulatory_flags: wiphy regulatory flags, see
 *	&enum ieee80211_regulatory_flags
 * @features: features advertised to nl80211, see &enum nl80211_feature_flags.
 * @ext_features: extended features advertised to nl80211, see
 *	&enum nl80211_ext_feature_index.
 * @bss_priv_size: each BSS struct has private data allocated with it,
 *	this variable determines its size
 * @max_scan_ssids: maximum number of SSIDs the device can scan for in
 *	any given scan
 * @max_sched_scan_ssids: maximum number of SSIDs the device can scan
 *	for in any given scheduled scan
 * @max_match_sets: maximum number of match sets the device can handle
 *	when performing a scheduled scan, 0 if filtering is not
 *	supported.
 * @max_scan_ie_len: maximum length of user-controlled IEs device can
 *	add to probe request frames transmitted during a scan, must not
 *	include fixed IEs like supported rates
 * @max_sched_scan_ie_len: same as max_scan_ie_len, but for scheduled
 *	scans
 * @coverage_class: current coverage class
 * @fw_version: firmware version for ethtool reporting
 * @hw_version: hardware version for ethtool reporting
 * @max_num_pmkids: maximum number of PMKIDs supported by device
 * @privid: a pointer that drivers can use to identify if an arbitrary
 *	wiphy is theirs, e.g. in global notifiers
 * @bands: information about bands/channels supported by this device
 *
 * @mgmt_stypes: bitmasks of frame subtypes that can be subscribed to or
 *	transmitted through nl80211, points to an array indexed by interface
 *	type
 *
 * @available_antennas_tx: bitmap of antennas which are available to be
 *	configured as TX antennas. Antenna configuration commands will be
 *	rejected unless this or @available_antennas_rx is set.
 *
 * @available_antennas_rx: bitmap of antennas which are available to be
 *	configured as RX antennas. Antenna configuration commands will be
 *	rejected unless this or @available_antennas_tx is set.
 *
 * @probe_resp_offload:
 *	 Bitmap of supported protocols for probe response offloading.
 *	 See &enum nl80211_probe_resp_offload_support_attr. Only valid
 *	 when the wiphy flag @WIPHY_FLAG_AP_PROBE_RESP_OFFLOAD is set.
 *
 * @max_remain_on_channel_duration: Maximum time a remain-on-channel operation
 *	may request, if implemented.
 *
 * @wowlan: WoWLAN support information
 * @wowlan_config: current WoWLAN configuration; this should usually not be
 *	used since access to it is necessarily racy, use the parameter passed
 *	to the suspend() operation instead.
 *
 * @ap_sme_capa: AP SME capabilities, flags from &enum nl80211_ap_sme_features.
 * @ht_capa_mod_mask:  Specify what ht_cap values can be over-ridden.
 *	If null, then none can be over-ridden.
 * @vht_capa_mod_mask:  Specify what VHT capabilities can be over-ridden.
 *	If null, then none can be over-ridden.
 *
 * @max_acl_mac_addrs: Maximum number of MAC addresses that the device
 *	supports for ACL.
 *
 * @extended_capabilities: extended capabilities supported by the driver,
 *	additional capabilities might be supported by userspace; these are
 *	the 802.11 extended capabilities ("Extended Capabilities element")
 *	and are in the same format as in the information element. See
 *	802.11-2012 8.4.2.29 for the defined fields.
 * @extended_capabilities_mask: mask of the valid values
 * @extended_capabilities_len: length of the extended capabilities
 * @coalesce: packet coalescing support information
 *
 * @vendor_commands: array of vendor commands supported by the hardware
 * @n_vendor_commands: number of vendor commands
 * @vendor_events: array of vendor events supported by the hardware
 * @n_vendor_events: number of vendor events
 *
 * @max_ap_assoc_sta: maximum number of associated stations supported in AP mode
 *	(including P2P GO) or 0 to indicate no such limit is advertised. The
 *	driver is allowed to advertise a theoretical limit that it can reach in
 *	some cases, but may not always reach.
 *
 * @max_num_csa_counters: Number of supported csa_counters in beacons
 *	and probe responses.  This value should be set if the driver
 *	wishes to limit the number of csa counters. Default (0) means
 *	infinite.
 * @max_adj_channel_rssi_comp: max offset of between the channel on which the
 *	frame was sent and the channel on which the frame was heard for which
 *	the reported rssi is still valid. If a driver is able to compensate the
 *	low rssi when a frame is heard on different channel, then it should set
 *	this variable to the maximal offset for which it can compensate.
 *	This value should be set in MHz.
 */
struct wiphy {
	/* assign these fields before you register the wiphy */

	/* permanent MAC address(es) */
	u8 perm_addr[ETH_ALEN];
	u8 addr_mask[ETH_ALEN];

	struct mac_address *addresses;

	const struct ieee80211_txrx_stypes *mgmt_stypes;

	const struct ieee80211_iface_combination *iface_combinations;
	int n_iface_combinations;
	u16 software_iftypes;

	u16 n_addresses;

	/* Supported interface modes, OR together BIT(NL80211_IFTYPE_...) */
	u16 interface_modes;

	u16 max_acl_mac_addrs;

	u32 flags, regulatory_flags, features;
	u8 ext_features[DIV_ROUND_UP(NUM_NL80211_EXT_FEATURES, 8)];

	u32 ap_sme_capa;

	enum cfg80211_signal_type signal_type;

	int bss_priv_size;
	u8 max_scan_ssids;
	u8 max_sched_scan_ssids;
	u8 max_match_sets;
	u16 max_scan_ie_len;
	u16 max_sched_scan_ie_len;

	int n_cipher_suites;
	const u32 *cipher_suites;

	u8 retry_short;
	u8 retry_long;
	u32 frag_threshold;
	u32 rts_threshold;
	u8 coverage_class;

	char fw_version[ETHTOOL_FWVERS_LEN];
	u32 hw_version;

#ifdef CONFIG_PM
	const struct wiphy_wowlan_support *wowlan;
	struct cfg80211_wowlan *wowlan_config;
#endif

	u16 max_remain_on_channel_duration;

	u8 max_num_pmkids;

	u32 available_antennas_tx;
	u32 available_antennas_rx;

	/*
	 * Bitmap of supported protocols for probe response offloading
	 * see &enum nl80211_probe_resp_offload_support_attr. Only valid
	 * when the wiphy flag @WIPHY_FLAG_AP_PROBE_RESP_OFFLOAD is set.
	 */
	u32 probe_resp_offload;

	const u8 *extended_capabilities, *extended_capabilities_mask;
	u8 extended_capabilities_len;

	/* If multiple wiphys are registered and you're handed e.g.
	 * a regular netdev with assigned ieee80211_ptr, you won't
	 * know whether it points to a wiphy your driver has registered
	 * or not. Assign this to something global to your driver to
	 * help determine whether you own this wiphy or not. */
	const void *privid;

	struct ieee80211_supported_band *bands[IEEE80211_NUM_BANDS];

	/* Lets us get back the wiphy on the callback */
	void (*reg_notifier)(struct wiphy *wiphy,
			     struct regulatory_request *request);

	/* fields below are read-only, assigned by cfg80211 */

	const struct ieee80211_regdomain __rcu *regd;

	/* the item in /sys/class/ieee80211/ points to this,
	 * you need use set_wiphy_dev() (see below) */
	struct device dev;

	/* protects ->resume, ->suspend sysfs callbacks against unregister hw */
	bool registered;

	/* dir in debugfs: ieee80211/<wiphyname> */
	struct dentry *debugfsdir;

	const struct ieee80211_ht_cap *ht_capa_mod_mask;
	const struct ieee80211_vht_cap *vht_capa_mod_mask;

	/* the network namespace this phy lives in currently */
	possible_net_t _net;

#ifdef CONFIG_CFG80211_WEXT
	const struct iw_handler_def *wext;
#endif

	const struct wiphy_coalesce_support *coalesce;

	const struct wiphy_vendor_command *vendor_commands;
	const struct nl80211_vendor_cmd_info *vendor_events;
	int n_vendor_commands, n_vendor_events;

	u16 max_ap_assoc_sta;

	u8 max_num_csa_counters;
	u8 max_adj_channel_rssi_comp;

	char priv[0] __aligned(NETDEV_ALIGN);
};

static inline struct net *wiphy_net(struct wiphy *wiphy)
{
	return read_pnet(&wiphy->_net);
}

static inline void wiphy_net_set(struct wiphy *wiphy, struct net *net)
{
	write_pnet(&wiphy->_net, net);
}

/**
 * wiphy_priv - return priv from wiphy
 *
 * @wiphy: the wiphy whose priv pointer to return
 * Return: The priv of @wiphy.
 */
static inline void *wiphy_priv(struct wiphy *wiphy)
{
	BUG_ON(!wiphy);
	return &wiphy->priv;
}

/**
 * priv_to_wiphy - return the wiphy containing the priv
 *
 * @priv: a pointer previously returned by wiphy_priv
 * Return: The wiphy of @priv.
 */
static inline struct wiphy *priv_to_wiphy(void *priv)
{
	BUG_ON(!priv);
	return container_of(priv, struct wiphy, priv);
}

/**
 * set_wiphy_dev - set device pointer for wiphy
 *
 * @wiphy: The wiphy whose device to bind
 * @dev: The device to parent it to
 */
static inline void set_wiphy_dev(struct wiphy *wiphy, struct device *dev)
{
	wiphy->dev.parent = dev;
}

/**
 * wiphy_dev - get wiphy dev pointer
 *
 * @wiphy: The wiphy whose device struct to look up
 * Return: The dev of @wiphy.
 */
static inline struct device *wiphy_dev(struct wiphy *wiphy)
{
	return wiphy->dev.parent;
}

/**
 * wiphy_name - get wiphy name
 *
 * @wiphy: The wiphy whose name to return
 * Return: The name of @wiphy.
 */
static inline const char *wiphy_name(const struct wiphy *wiphy)
{
	return dev_name(&wiphy->dev);
}

/**
 * wiphy_new_nm - create a new wiphy for use with cfg80211
 *
 * @ops: The configuration operations for this device
 * @sizeof_priv: The size of the private area to allocate
 * @requested_name: Request a particular name.
 *	NULL is valid value, and means use the default phy%d naming.
 *
 * Create a new wiphy and associate the given operations with it.
 * @sizeof_priv bytes are allocated for private use.
 *
 * Return: A pointer to the new wiphy. This pointer must be
 * assigned to each netdev's ieee80211_ptr for proper operation.
 */
struct wiphy *wiphy_new_nm(const struct cfg80211_ops *ops, int sizeof_priv,
			   const char *requested_name);

/**
 * wiphy_new - create a new wiphy for use with cfg80211
 *
 * @ops: The configuration operations for this device
 * @sizeof_priv: The size of the private area to allocate
 *
 * Create a new wiphy and associate the given operations with it.
 * @sizeof_priv bytes are allocated for private use.
 *
 * Return: A pointer to the new wiphy. This pointer must be
 * assigned to each netdev's ieee80211_ptr for proper operation.
 */
static inline struct wiphy *wiphy_new(const struct cfg80211_ops *ops,
				      int sizeof_priv)
{
	return wiphy_new_nm(ops, sizeof_priv, NULL);
}

/**
 * wiphy_register - register a wiphy with cfg80211
 *
 * @wiphy: The wiphy to register.
 *
 * Return: A non-negative wiphy index or a negative error code.
 */
int wiphy_register(struct wiphy *wiphy);

/**
 * wiphy_unregister - deregister a wiphy from cfg80211
 *
 * @wiphy: The wiphy to unregister.
 *
 * After this call, no more requests can be made with this priv
 * pointer, but the call may sleep to wait for an outstanding
 * request that is being handled.
 */
void wiphy_unregister(struct wiphy *wiphy);

/**
 * wiphy_free - free wiphy
 *
 * @wiphy: The wiphy to free
 */
void wiphy_free(struct wiphy *wiphy);

/* internal structs */
struct cfg80211_conn;
struct cfg80211_internal_bss;
struct cfg80211_cached_keys;

/**
 * struct wireless_dev - wireless device state
 *
 * For netdevs, this structure must be allocated by the driver
 * that uses the ieee80211_ptr field in struct net_device (this
 * is intentional so it can be allocated along with the netdev.)
 * It need not be registered then as netdev registration will
 * be intercepted by cfg80211 to see the new wireless device.
 *
 * For non-netdev uses, it must also be allocated by the driver
 * in response to the cfg80211 callbacks that require it, as
 * there's no netdev registration in that case it may not be
 * allocated outside of callback operations that return it.
 *
 * @wiphy: pointer to hardware description
 * @iftype: interface type
 * @list: (private) Used to collect the interfaces
 * @netdev: (private) Used to reference back to the netdev, may be %NULL
 * @identifier: (private) Identifier used in nl80211 to identify this
 *	wireless device if it has no netdev
 * @current_bss: (private) Used by the internal configuration code
 * @chandef: (private) Used by the internal configuration code to track
 *	the user-set channel definition.
 * @preset_chandef: (private) Used by the internal configuration code to
 *	track the channel to be used for AP later
 * @bssid: (private) Used by the internal configuration code
 * @ssid: (private) Used by the internal configuration code
 * @ssid_len: (private) Used by the internal configuration code
 * @mesh_id_len: (private) Used by the internal configuration code
 * @mesh_id_up_len: (private) Used by the internal configuration code
 * @wext: (private) Used by the internal wireless extensions compat code
 * @use_4addr: indicates 4addr mode is used on this interface, must be
 *	set by driver (if supported) on add_interface BEFORE registering the
 *	netdev and may otherwise be used by driver read-only, will be update
 *	by cfg80211 on change_interface
 * @mgmt_registrations: list of registrations for management frames
 * @mgmt_registrations_lock: lock for the list
 * @mtx: mutex used to lock data in this struct, may be used by drivers
 *	and some API functions require it held
 * @beacon_interval: beacon interval used on this device for transmitting
 *	beacons, 0 when not valid
 * @address: The address for this device, valid only if @netdev is %NULL
 * @p2p_started: true if this is a P2P Device that has been started
 * @cac_started: true if DFS channel availability check has been started
 * @cac_start_time: timestamp (jiffies) when the dfs state was entered.
 * @cac_time_ms: CAC time in ms
 * @ps: powersave mode is enabled
 * @ps_timeout: dynamic powersave timeout
 * @ap_unexpected_nlportid: (private) netlink port ID of application
 *	registered for unexpected class 3 frames (AP mode)
 * @conn: (private) cfg80211 software SME connection state machine data
 * @connect_keys: (private) keys to set after connection is established
 * @ibss_fixed: (private) IBSS is using fixed BSSID
 * @ibss_dfs_possible: (private) IBSS may change to a DFS channel
 * @event_list: (private) list for internal event processing
 * @event_lock: (private) lock for event list
 * @owner_nlportid: (private) owner socket port ID
 */
struct wireless_dev {
	struct wiphy *wiphy;
	enum nl80211_iftype iftype;

	/* the remainder of this struct should be private to cfg80211 */
	struct list_head list;
	struct net_device *netdev;

	u32 identifier;

	struct list_head mgmt_registrations;
	spinlock_t mgmt_registrations_lock;

	struct mutex mtx;

	bool use_4addr, p2p_started;

	u8 address[ETH_ALEN] __aligned(sizeof(u16));

	/* currently used for IBSS and SME - might be rearranged later */
	u8 ssid[IEEE80211_MAX_SSID_LEN];
	u8 ssid_len, mesh_id_len, mesh_id_up_len;
	struct cfg80211_conn *conn;
	struct cfg80211_cached_keys *connect_keys;

	struct list_head event_list;
	spinlock_t event_lock;

	struct cfg80211_internal_bss *current_bss; /* associated / joined */
	struct cfg80211_chan_def preset_chandef;
	struct cfg80211_chan_def chandef;

	bool ibss_fixed;
	bool ibss_dfs_possible;

	bool ps;
	int ps_timeout;

	int beacon_interval;

	u32 ap_unexpected_nlportid;

	bool cac_started;
	unsigned long cac_start_time;
	unsigned int cac_time_ms;

	u32 owner_nlportid;

#ifdef CONFIG_CFG80211_WEXT
	/* wext data */
	struct {
		struct cfg80211_ibss_params ibss;
		struct cfg80211_connect_params connect;
		struct cfg80211_cached_keys *keys;
		const u8 *ie;
		size_t ie_len;
		u8 bssid[ETH_ALEN], prev_bssid[ETH_ALEN];
		u8 ssid[IEEE80211_MAX_SSID_LEN];
		s8 default_key, default_mgmt_key;
		bool prev_bssid_valid;
	} wext;
#endif
};

static inline u8 *wdev_address(struct wireless_dev *wdev)
{
	if (wdev->netdev)
		return wdev->netdev->dev_addr;
	return wdev->address;
}

/**
 * wdev_priv - return wiphy priv from wireless_dev
 *
 * @wdev: The wireless device whose wiphy's priv pointer to return
 * Return: The wiphy priv of @wdev.
 */
static inline void *wdev_priv(struct wireless_dev *wdev)
{
	BUG_ON(!wdev);
	return wiphy_priv(wdev->wiphy);
}

/**
 * DOC: Utility functions
 *
 * cfg80211 offers a number of utility functions that can be useful.
 */

/**
 * ieee80211_channel_to_frequency - convert channel number to frequency
 * @chan: channel number
 * @band: band, necessary due to channel number overlap
 * Return: The corresponding frequency (in MHz), or 0 if the conversion failed.
 */
int ieee80211_channel_to_frequency(int chan, enum ieee80211_band band);

/**
 * ieee80211_frequency_to_channel - convert frequency to channel number
 * @freq: center frequency
 * Return: The corresponding channel, or 0 if the conversion failed.
 */
int ieee80211_frequency_to_channel(int freq);

/*
 * Name indirection necessary because the ieee80211 code also has
 * a function named "ieee80211_get_channel", so if you include
 * cfg80211's header file you get cfg80211's version, if you try
 * to include both header files you'll (rightfully!) get a symbol
 * clash.
 */
struct ieee80211_channel *__ieee80211_get_channel(struct wiphy *wiphy,
						  int freq);
/**
 * ieee80211_get_channel - get channel struct from wiphy for specified frequency
 * @wiphy: the struct wiphy to get the channel for
 * @freq: the center frequency of the channel
 * Return: The channel struct from @wiphy at @freq.
 */
static inline struct ieee80211_channel *
ieee80211_get_channel(struct wiphy *wiphy, int freq)
{
	return __ieee80211_get_channel(wiphy, freq);
}

/**
 * ieee80211_get_response_rate - get basic rate for a given rate
 *
 * @sband: the band to look for rates in
 * @basic_rates: bitmap of basic rates
 * @bitrate: the bitrate for which to find the basic rate
 *
 * Return: The basic rate corresponding to a given bitrate, that
 * is the next lower bitrate contained in the basic rate map,
 * which is, for this function, given as a bitmap of indices of
 * rates in the band's bitrate table.
 */
struct ieee80211_rate *
ieee80211_get_response_rate(struct ieee80211_supported_band *sband,
			    u32 basic_rates, int bitrate);

/**
 * ieee80211_mandatory_rates - get mandatory rates for a given band
 * @sband: the band to look for rates in
 * @scan_width: width of the control channel
 *
 * This function returns a bitmap of the mandatory rates for the given
 * band, bits are set according to the rate position in the bitrates array.
 */
u32 ieee80211_mandatory_rates(struct ieee80211_supported_band *sband,
			      enum nl80211_bss_scan_width scan_width);

/*
 * Radiotap parsing functions -- for controlled injection support
 *
 * Implemented in net/wireless/radiotap.c
 * Documentation in Documentation/networking/radiotap-headers.txt
 */

struct radiotap_align_size {
	uint8_t align:4, size:4;
};

struct ieee80211_radiotap_namespace {
	const struct radiotap_align_size *align_size;
	int n_bits;
	uint32_t oui;
	uint8_t subns;
};

struct ieee80211_radiotap_vendor_namespaces {
	const struct ieee80211_radiotap_namespace *ns;
	int n_ns;
};

/**
 * struct ieee80211_radiotap_iterator - tracks walk thru present radiotap args
 * @this_arg_index: index of current arg, valid after each successful call
 *	to ieee80211_radiotap_iterator_next()
 * @this_arg: pointer to current radiotap arg; it is valid after each
 *	call to ieee80211_radiotap_iterator_next() but also after
 *	ieee80211_radiotap_iterator_init() where it will point to
 *	the beginning of the actual data portion
 * @this_arg_size: length of the current arg, for convenience
 * @current_namespace: pointer to the current namespace definition
 *	(or internally %NULL if the current namespace is unknown)
 * @is_radiotap_ns: indicates whether the current namespace is the default
 *	radiotap namespace or not
 *
 * @_rtheader: pointer to the radiotap header we are walking through
 * @_max_length: length of radiotap header in cpu byte ordering
 * @_arg_index: next argument index
 * @_arg: next argument pointer
 * @_next_bitmap: internal pointer to next present u32
 * @_bitmap_shifter: internal shifter for curr u32 bitmap, b0 set == arg present
 * @_vns: vendor namespace definitions
 * @_next_ns_data: beginning of the next namespace's data
 * @_reset_on_ext: internal; reset the arg index to 0 when going to the
 *	next bitmap word
 *
 * Describes the radiotap parser state. Fields prefixed with an underscore
 * must not be used by users of the parser, only by the parser internally.
 */

struct ieee80211_radiotap_iterator {
	struct ieee80211_radiotap_header *_rtheader;
	const struct ieee80211_radiotap_vendor_namespaces *_vns;
	const struct ieee80211_radiotap_namespace *current_namespace;

	unsigned char *_arg, *_next_ns_data;
	__le32 *_next_bitmap;

	unsigned char *this_arg;
	int this_arg_index;
	int this_arg_size;

	int is_radiotap_ns;

	int _max_length;
	int _arg_index;
	uint32_t _bitmap_shifter;
	int _reset_on_ext;
};

int
ieee80211_radiotap_iterator_init(struct ieee80211_radiotap_iterator *iterator,
				 struct ieee80211_radiotap_header *radiotap_header,
				 int max_length,
				 const struct ieee80211_radiotap_vendor_namespaces *vns);

int
ieee80211_radiotap_iterator_next(struct ieee80211_radiotap_iterator *iterator);


extern const unsigned char rfc1042_header[6];
extern const unsigned char bridge_tunnel_header[6];

/**
 * ieee80211_get_hdrlen_from_skb - get header length from data
 *
 * @skb: the frame
 *
 * Given an skb with a raw 802.11 header at the data pointer this function
 * returns the 802.11 header length.
 *
 * Return: The 802.11 header length in bytes (not including encryption
 * headers). Or 0 if the data in the sk_buff is too short to contain a valid
 * 802.11 header.
 */
unsigned int ieee80211_get_hdrlen_from_skb(const struct sk_buff *skb);

/**
 * ieee80211_hdrlen - get header length in bytes from frame control
 * @fc: frame control field in little-endian format
 * Return: The header length in bytes.
 */
unsigned int __attribute_const__ ieee80211_hdrlen(__le16 fc);

/**
 * ieee80211_get_mesh_hdrlen - get mesh extension header length
 * @meshhdr: the mesh extension header, only the flags field
 *	(first byte) will be accessed
 * Return: The length of the extension header, which is always at
 * least 6 bytes and at most 18 if address 5 and 6 are present.
 */
unsigned int ieee80211_get_mesh_hdrlen(struct ieee80211s_hdr *meshhdr);

/**
 * DOC: Data path helpers
 *
 * In addition to generic utilities, cfg80211 also offers
 * functions that help implement the data path for devices
 * that do not do the 802.11/802.3 conversion on the device.
 */

/**
 * ieee80211_data_to_8023 - convert an 802.11 data frame to 802.3
 * @skb: the 802.11 data frame
 * @addr: the device MAC address
 * @iftype: the virtual interface type
 * Return: 0 on success. Non-zero on error.
 */
int ieee80211_data_to_8023(struct sk_buff *skb, const u8 *addr,
			   enum nl80211_iftype iftype);

/**
 * ieee80211_data_from_8023 - convert an 802.3 frame to 802.11
 * @skb: the 802.3 frame
 * @addr: the device MAC address
 * @iftype: the virtual interface type
 * @bssid: the network bssid (used only for iftype STATION and ADHOC)
 * @qos: build 802.11 QoS data frame
 * Return: 0 on success, or a negative error code.
 */
int ieee80211_data_from_8023(struct sk_buff *skb, const u8 *addr,
			     enum nl80211_iftype iftype, const u8 *bssid,
			     bool qos);

/**
 * ieee80211_amsdu_to_8023s - decode an IEEE 802.11n A-MSDU frame
 *
 * Decode an IEEE 802.11n A-MSDU frame and convert it to a list of
 * 802.3 frames. The @list will be empty if the decode fails. The
 * @skb is consumed after the function returns.
 *
 * @skb: The input IEEE 802.11n A-MSDU frame.
 * @list: The output list of 802.3 frames. It must be allocated and
 *	initialized by by the caller.
 * @addr: The device MAC address.
 * @iftype: The device interface type.
 * @extra_headroom: The hardware extra headroom for SKBs in the @list.
 * @has_80211_header: Set it true if SKB is with IEEE 802.11 header.
 */
void ieee80211_amsdu_to_8023s(struct sk_buff *skb, struct sk_buff_head *list,
			      const u8 *addr, enum nl80211_iftype iftype,
			      const unsigned int extra_headroom,
			      bool has_80211_header);

/**
 * cfg80211_classify8021d - determine the 802.1p/1d tag for a data frame
 * @skb: the data frame
 * @qos_map: Interworking QoS mapping or %NULL if not in use
 * Return: The 802.1p/1d tag.
 */
unsigned int cfg80211_classify8021d(struct sk_buff *skb,
				    struct cfg80211_qos_map *qos_map);

/**
 * cfg80211_find_ie - find information element in data
 *
 * @eid: element ID
 * @ies: data consisting of IEs
 * @len: length of data
 *
 * Return: %NULL if the element ID could not be found or if
 * the element is invalid (claims to be longer than the given
 * data), or a pointer to the first byte of the requested
 * element, that is the byte containing the element ID.
 *
 * Note: There are no checks on the element length other than
 * having to fit into the given data.
 */
const u8 *cfg80211_find_ie(u8 eid, const u8 *ies, int len);

/**
 * cfg80211_find_vendor_ie - find vendor specific information element in data
 *
 * @oui: vendor OUI
 * @oui_type: vendor-specific OUI type
 * @ies: data consisting of IEs
 * @len: length of data
 *
 * Return: %NULL if the vendor specific element ID could not be found or if the
 * element is invalid (claims to be longer than the given data), or a pointer to
 * the first byte of the requested element, that is the byte containing the
 * element ID.
 *
 * Note: There are no checks on the element length other than having to fit into
 * the given data.
 */
const u8 *cfg80211_find_vendor_ie(unsigned int oui, u8 oui_type,
				  const u8 *ies, int len);

/**
 * DOC: Regulatory enforcement infrastructure
 *
 * TODO
 */

/**
 * regulatory_hint - driver hint to the wireless core a regulatory domain
 * @wiphy: the wireless device giving the hint (used only for reporting
 *	conflicts)
 * @alpha2: the ISO/IEC 3166 alpha2 the driver claims its regulatory domain
 * 	should be in. If @rd is set this should be NULL. Note that if you
 * 	set this to NULL you should still set rd->alpha2 to some accepted
 * 	alpha2.
 *
 * Wireless drivers can use this function to hint to the wireless core
 * what it believes should be the current regulatory domain by
 * giving it an ISO/IEC 3166 alpha2 country code it knows its regulatory
 * domain should be in or by providing a completely build regulatory domain.
 * If the driver provides an ISO/IEC 3166 alpha2 userspace will be queried
 * for a regulatory domain structure for the respective country.
 *
 * The wiphy must have been registered to cfg80211 prior to this call.
 * For cfg80211 drivers this means you must first use wiphy_register(),
 * for mac80211 drivers you must first use ieee80211_register_hw().
 *
 * Drivers should check the return value, its possible you can get
 * an -ENOMEM.
 *
 * Return: 0 on success. -ENOMEM.
 */
int regulatory_hint(struct wiphy *wiphy, const char *alpha2);

/**
 * regulatory_set_wiphy_regd - set regdom info for self managed drivers
 * @wiphy: the wireless device we want to process the regulatory domain on
 * @rd: the regulatory domain informatoin to use for this wiphy
 *
 * Set the regulatory domain information for self-managed wiphys, only they
 * may use this function. See %REGULATORY_WIPHY_SELF_MANAGED for more
 * information.
 *
 * Return: 0 on success. -EINVAL, -EPERM
 */
int regulatory_set_wiphy_regd(struct wiphy *wiphy,
			      struct ieee80211_regdomain *rd);

/**
 * regulatory_set_wiphy_regd_sync_rtnl - set regdom for self-managed drivers
 * @wiphy: the wireless device we want to process the regulatory domain on
 * @rd: the regulatory domain information to use for this wiphy
 *
 * This functions requires the RTNL to be held and applies the new regdomain
 * synchronously to this wiphy. For more details see
 * regulatory_set_wiphy_regd().
 *
 * Return: 0 on success. -EINVAL, -EPERM
 */
int regulatory_set_wiphy_regd_sync_rtnl(struct wiphy *wiphy,
					struct ieee80211_regdomain *rd);

/**
 * wiphy_apply_custom_regulatory - apply a custom driver regulatory domain
 * @wiphy: the wireless device we want to process the regulatory domain on
 * @regd: the custom regulatory domain to use for this wiphy
 *
 * Drivers can sometimes have custom regulatory domains which do not apply
 * to a specific country. Drivers can use this to apply such custom regulatory
 * domains. This routine must be called prior to wiphy registration. The
 * custom regulatory domain will be trusted completely and as such previous
 * default channel settings will be disregarded. If no rule is found for a
 * channel on the regulatory domain the channel will be disabled.
 * Drivers using this for a wiphy should also set the wiphy flag
 * REGULATORY_CUSTOM_REG or cfg80211 will set it for the wiphy
 * that called this helper.
 */
void wiphy_apply_custom_regulatory(struct wiphy *wiphy,
				   const struct ieee80211_regdomain *regd);

/**
 * freq_reg_info - get regulatory information for the given frequency
 * @wiphy: the wiphy for which we want to process this rule for
 * @center_freq: Frequency in KHz for which we want regulatory information for
 *
 * Use this function to get the regulatory rule for a specific frequency on
 * a given wireless device. If the device has a specific regulatory domain
 * it wants to follow we respect that unless a country IE has been received
 * and processed already.
 *
 * Return: A valid pointer, or, when an error occurs, for example if no rule
 * can be found, the return value is encoded using ERR_PTR(). Use IS_ERR() to
 * check and PTR_ERR() to obtain the numeric return value. The numeric return
 * value will be -ERANGE if we determine the given center_freq does not even
 * have a regulatory rule for a frequency range in the center_freq's band.
 * See freq_in_rule_band() for our current definition of a band -- this is
 * purely subjective and right now it's 802.11 specific.
 */
const struct ieee80211_reg_rule *freq_reg_info(struct wiphy *wiphy,
					       u32 center_freq);

/**
 * reg_initiator_name - map regulatory request initiator enum to name
 * @initiator: the regulatory request initiator
 *
 * You can use this to map the regulatory request initiator enum to a
 * proper string representation.
 */
const char *reg_initiator_name(enum nl80211_reg_initiator initiator);

/*
 * callbacks for asynchronous cfg80211 methods, notification
 * functions and BSS handling helpers
 */

/**
 * cfg80211_scan_done - notify that scan finished
 *
 * @request: the corresponding scan request
 * @aborted: set to true if the scan was aborted for any reason,
 *	userspace will be notified of that
 */
void cfg80211_scan_done(struct cfg80211_scan_request *request, bool aborted);

/**
 * cfg80211_sched_scan_results - notify that new scan results are available
 *
 * @wiphy: the wiphy which got scheduled scan results
 */
void cfg80211_sched_scan_results(struct wiphy *wiphy);

/**
 * cfg80211_sched_scan_stopped - notify that the scheduled scan has stopped
 *
 * @wiphy: the wiphy on which the scheduled scan stopped
 *
 * The driver can call this function to inform cfg80211 that the
 * scheduled scan had to be stopped, for whatever reason.  The driver
 * is then called back via the sched_scan_stop operation when done.
 */
void cfg80211_sched_scan_stopped(struct wiphy *wiphy);

/**
 * cfg80211_sched_scan_stopped_rtnl - notify that the scheduled scan has stopped
 *
 * @wiphy: the wiphy on which the scheduled scan stopped
 *
 * The driver can call this function to inform cfg80211 that the
 * scheduled scan had to be stopped, for whatever reason.  The driver
 * is then called back via the sched_scan_stop operation when done.
 * This function should be called with rtnl locked.
 */
void cfg80211_sched_scan_stopped_rtnl(struct wiphy *wiphy);

/**
 * cfg80211_inform_bss_width_frame - inform cfg80211 of a received BSS frame
 *
 * @wiphy: the wiphy reporting the BSS
 * @rx_channel: The channel the frame was received on
 * @scan_width: width of the control channel
 * @mgmt: the management frame (probe response or beacon)
 * @len: length of the management frame
 * @signal: the signal strength, type depends on the wiphy's signal_type
 * @gfp: context flags
 *
 * This informs cfg80211 that BSS information was found and
 * the BSS should be updated/added.
 *
 * Return: A referenced struct, must be released with cfg80211_put_bss()!
 * Or %NULL on error.
 */
struct cfg80211_bss * __must_check
cfg80211_inform_bss_width_frame(struct wiphy *wiphy,
				struct ieee80211_channel *rx_channel,
				enum nl80211_bss_scan_width scan_width,
				struct ieee80211_mgmt *mgmt, size_t len,
				s32 signal, gfp_t gfp);

static inline struct cfg80211_bss * __must_check
cfg80211_inform_bss_frame(struct wiphy *wiphy,
			  struct ieee80211_channel *rx_channel,
			  struct ieee80211_mgmt *mgmt, size_t len,
			  s32 signal, gfp_t gfp)
{
	return cfg80211_inform_bss_width_frame(wiphy, rx_channel,
					       NL80211_BSS_CHAN_WIDTH_20,
					       mgmt, len, signal, gfp);
}

/**
 * enum cfg80211_bss_frame_type - frame type that the BSS data came from
 * @CFG80211_BSS_FTYPE_UNKNOWN: driver doesn't know whether the data is
 *	from a beacon or probe response
 * @CFG80211_BSS_FTYPE_BEACON: data comes from a beacon
 * @CFG80211_BSS_FTYPE_PRESP: data comes from a probe response
 */
enum cfg80211_bss_frame_type {
	CFG80211_BSS_FTYPE_UNKNOWN,
	CFG80211_BSS_FTYPE_BEACON,
	CFG80211_BSS_FTYPE_PRESP,
};

/**
 * cfg80211_inform_bss_width - inform cfg80211 of a new BSS
 *
 * @wiphy: the wiphy reporting the BSS
 * @rx_channel: The channel the frame was received on
 * @scan_width: width of the control channel
 * @ftype: frame type (if known)
 * @bssid: the BSSID of the BSS
 * @tsf: the TSF sent by the peer in the beacon/probe response (or 0)
 * @capability: the capability field sent by the peer
 * @beacon_interval: the beacon interval announced by the peer
 * @ie: additional IEs sent by the peer
 * @ielen: length of the additional IEs
 * @signal: the signal strength, type depends on the wiphy's signal_type
 * @gfp: context flags
 *
 * T